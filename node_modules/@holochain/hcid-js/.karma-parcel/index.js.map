{"version":3,"sources":["../node_modules/regenerator-runtime/runtime.js","../node_modules/regenerator-runtime/runtime-module.js","../node_modules/@babel/runtime/regenerator/index.js","../node_modules/@babel/runtime/helpers/asyncToGenerator.js","../node_modules/@babel/runtime/helpers/classCallCheck.js","../node_modules/@babel/runtime/helpers/createClass.js","../node_modules/base64-js/index.js","../node_modules/ieee754/index.js","../node_modules/isarray/index.js","../node_modules/buffer/index.js","../lib/browser/bindgen_bg.js","../lib/browser/bindgen.js","../lib/browser/index.js","../node_modules/assertion-error/index.js","../node_modules/pathval/index.js","../node_modules/chai/lib/chai/utils/flag.js","../node_modules/chai/lib/chai/utils/test.js","../node_modules/type-detect/type-detect.js","../node_modules/chai/lib/chai/utils/expectTypes.js","../node_modules/chai/lib/chai/utils/getActual.js","../node_modules/get-func-name/index.js","../node_modules/chai/lib/chai/utils/getProperties.js","../node_modules/chai/lib/chai/utils/getEnumerableProperties.js","../node_modules/chai/lib/chai/config.js","../node_modules/chai/lib/chai/utils/inspect.js","../node_modules/chai/lib/chai/utils/objDisplay.js","../node_modules/chai/lib/chai/utils/getMessage.js","../node_modules/chai/lib/chai/utils/transferFlags.js","../node_modules/deep-eql/index.js","../node_modules/chai/lib/chai/utils/isProxyEnabled.js","../node_modules/chai/lib/chai/utils/addProperty.js","../node_modules/chai/lib/chai/utils/addLengthGuard.js","../node_modules/chai/lib/chai/utils/proxify.js","../node_modules/chai/lib/chai/utils/addMethod.js","../node_modules/chai/lib/chai/utils/overwriteProperty.js","../node_modules/chai/lib/chai/utils/overwriteMethod.js","../node_modules/chai/lib/chai/utils/addChainableMethod.js","../node_modules/chai/lib/chai/utils/overwriteChainableMethod.js","../node_modules/chai/lib/chai/utils/compareByInspect.js","../node_modules/chai/lib/chai/utils/getOwnEnumerablePropertySymbols.js","../node_modules/chai/lib/chai/utils/getOwnEnumerableProperties.js","../node_modules/check-error/index.js","../node_modules/chai/lib/chai/utils/isNaN.js","../node_modules/chai/lib/chai/utils/index.js","../node_modules/chai/lib/chai/assertion.js","../node_modules/chai/lib/chai/core/assertions.js","../node_modules/chai/lib/chai/interface/expect.js","../node_modules/chai/lib/chai/interface/should.js","../node_modules/chai/lib/chai/interface/assert.js","../node_modules/chai/lib/chai.js","../node_modules/chai/index.js","../../test/fixtures.json","../lib/encoding.test.js","entry.js"],"names":["bytes","base64","Buffer","Uint8Array","from","atob","c","charCodeAt","booted","WebAssembly","instantiate","import_b","then","obj","wasm","instance","memory","exports","__wbg_encoding_free","encoding_new","encoding_encode","encoding_decode","encoding_is_corrupt","__wbindgen_global_argument_ptr","__wbindgen_malloc","__wbindgen_free","cachedTextEncoder","TextEncoder","cachegetUint8Memory","getUint8Memory","buffer","WASM_VECTOR_LEN","passStringToWasm","arg","buf","encode","ptr","length","set","passArray8ToWasm","cachedTextDecoder","TextDecoder","getStringFromWasm","len","decode","subarray","cachedGlobalArgumentPtr","globalArgumentPtr","cachegetUint32Memory","getUint32Memory","Uint32Array","getArrayU8FromWasm","heap","Array","fill","undefined","push","heap_next","addHeapObject","idx","__wbindgen_string_new","p","l","getObject","dropObject","takeObject","ret","__wbindgen_rethrow","freeEncoding","Encoding","arg0","ptr0","len0","retptr","mem","rustptr","rustlen","realRet","slice","__wbindgen_throw","Error","txError","fn","e","checkFixBuffer","byteOffset","byteLength","encoding_name","_raw","bindgen","data","is_corrupt","module","flag","key","value","flags","__flags","Object","create","arguments","require","test","args","negate","expr","global","factory","define","amd","typeDetect","promiseExists","Promise","globalObject","self","symbolExists","Symbol","mapExists","Map","setExists","Set","weakMapExists","WeakMap","weakSetExists","WeakSet","dataViewExists","DataView","symbolIteratorExists","iterator","symbolToStringTagExists","toStringTag","setEntriesExists","prototype","entries","mapEntriesExists","setIteratorPrototype","getPrototypeOf","mapIteratorPrototype","arrayIteratorExists","arrayIteratorPrototype","stringIteratorExists","String","stringIteratorPrototype","toStringLeftSliceLength","toStringRightSliceLength","typeofObj","isArray","window","location","document","navigator","mimeTypes","plugins","HTMLElement","tagName","stringTag","objPrototype","RegExp","Date","toString","call","AssertionError","type","expectTypes","types","flagMsg","ssfi","map","t","toLowerCase","sort","str","index","art","indexOf","charAt","or","join","objType","some","expected","getActual","_obj","getProperties","object","result","getOwnPropertyNames","addProperty","property","proto","forEach","getEnumerableProperties","name","includeStack","showDiff","truncateThreshold","useProxy","proxyExcludedKeys","getName","config","inspect","showHidden","depth","colors","ctx","seen","stylize","formatValue","isDOMElement","nodeType","nodeName","recurseTimes","constructor","primitive","formatPrimitive","outerHTML","xmlVersion","xmlSerializer","XMLSerializer","serializeToString","ns","container","createElementNS","appendChild","cloneNode","html","innerHTML","replace","err","visibleKeys","keys","nameSuffix","isError","isRegExp","isDate","toUTCString","formatError","base","array","typedArray","braces","isTypedArray","output","formatArray","formatTypedArray","formatProperty","pop","reduceToSingleString","simple","JSON","stringify","Infinity","i","hasOwnProperty","match","propDescriptor","getOwnPropertyDescriptor","get","split","line","substr","reduce","prev","cur","ar","objectToString","re","d","o","objDisplay","kstr","splice","getMessage","val","actual","msg","transferFlags","assertion","includeAll","FakeMap","_key","Math","random","now","getMap","setMap","isExtensible","defineProperty","configurable","MemoizeMap","memoizeCompare","leftHandOperand","rightHandOperand","memoizeMap","isPrimitive","leftHandMap","memoizeSet","deepEqual","options","comparator","extensiveDeepEqual","simpleResult","simpleEqual","memoize","memoizeResultLeft","memoizeResultRight","comparatorResult","leftHandType","extensiveDeepEqualByType","valueOf","iterableEqual","regexpEqual","generatorEqual","entriesEqual","objectEqual","size","leftHandItems","rightHandItems","gatherEntries","getGeneratorEntries","hasIteratorFunction","target","getIteratorEntries","iteratorError","generator","generatorResult","next","accumulator","done","getEnumerableKeys","keysEqual","leftHandKeys","rightHandKeys","leftHandEntries","rightHandEntries","isProxyEnabled","Proxy","Reflect","chai","getter","propertyGetter","newAssertion","Assertion","fnLengthDesc","addLengthGuard","assertionName","isChainable","builtins","proxify","nonChainableMethodName","proxyGetter","has","suggestion","suggestionDistance","prop","dist","stringDistanceCapped","strA","strB","cap","abs","memo","j","ch","min","addMethod","method","methodWrapper","apply","overwriteProperty","_get","_super","overwritingPropertyGetter","origLockSsfi","overwriteMethod","_method","overwritingMethodWrapper","canSetPrototype","setPrototypeOf","testFn","excludeNames","filter","propDesc","Function","addChainableMethod","chainingBehavior","chainableBehavior","__methods","chainableMethodGetter","chainableMethodWrapper","asserterNames","asserterName","pd","overwriteChainableMethod","_chainingBehavior","overwritingChainableMethodGetter","overwritingChainableMethodWrapper","compareByInspect","a","b","getOwnEnumerablePropertySymbols","getOwnPropertySymbols","sym","enumerable","getOwnEnumerableProperties","concat","isNaN","Number","pathval","eql","getPathInfo","hasProperty","checkError","_chai","util","lockSsfi","console","warn","assert","negateMsg","_actual","ok","_","chain","an","article","SameValueZero","includeChainingBehavior","include","isDeep","descriptor","included","isEql","item","props","firstErr","numErrs","propAssertion","compatibleConstructor","itemsCount","trim","checkArguments","assertEqual","prevLockSsfi","assertEql","assertAbove","n","doLength","msgPrefix","nType","errorMessage","shouldThrow","to","have","printObj","assertLeast","assertBelow","assertMost","start","finish","startType","finishType","range","assertInstanceOf","isInstanceOf","TypeError","assertProperty","isNested","isOwn","nameType","pathInfo","exists","assertOwnProperty","assertOwnPropertyDescriptor","actualDescriptor","assertLengthChain","assertLength","assertMatch","exec","is","assertKeys","keysType","deepStr","mixedArgsMsg","any","all","expectedKey","actualKey","every","last","assertThrows","errorLike","errMsgMatcher","caughtErr","everyArgIsUndefined","everyArgIsDefined","Boolean","errorLikeFail","errMsgMatcherFail","errorLikeString","getConstructorName","isCompatibleInstance","compatibleInstance","isCompatibleConstructor","placeholder","isCompatibleMessage","compatibleMessage","respondTo","itself","context","satisfy","matcher","closeTo","delta","isSubsetOf","subset","superset","cmp","contains","ordered","elem","matchIdx","elem2","be","subject","failMsg","failNegateMsg","oneOf","list","assertChanges","initial","final","msgObj","assertIncreases","assertDecreases","assertDelta","behavior","realDelta","expression","isSealed","isFrozen","isFinite","expect","message","fail","operator","loadShould","shouldGetter","shouldSetter","writable","should","equal","val1","val2","Throw","errt","errs","exist","not","Should","express","errmsg","isOk","isNotOk","act","exp","notEqual","strictEqual","notStrictEqual","deepStrictEqual","notDeepEqual","isAbove","abv","above","isAtLeast","atlst","least","isBelow","blw","below","isAtMost","atmst","most","isTrue","isNotTrue","isFalse","isNotFalse","isNull","isNotNull","NaN","isNotNaN","notExists","isUndefined","isDefined","isFunction","isNotFunction","isObject","isNotObject","isNotArray","isString","isNotString","isNumber","isNotNumber","finite","isBoolean","isNotBoolean","typeOf","notTypeOf","instanceOf","notInstanceOf","inc","notInclude","deepInclude","deep","notDeepInclude","nestedInclude","nested","notNestedInclude","deepNestedInclude","notDeepNestedInclude","ownInclude","own","notOwnInclude","deepOwnInclude","notDeepOwnInclude","notMatch","notProperty","propertyVal","notPropertyVal","deepPropertyVal","notDeepPropertyVal","ownProperty","notOwnProperty","ownPropertyVal","notOwnPropertyVal","deepOwnPropertyVal","notDeepOwnPropertyVal","nestedProperty","notNestedProperty","nestedPropertyVal","notNestedPropertyVal","deepNestedPropertyVal","notDeepNestedPropertyVal","lengthOf","hasAnyKeys","hasAllKeys","containsAllKeys","contain","doesNotHaveAnyKeys","doesNotHaveAllKeys","hasAnyDeepKeys","hasAllDeepKeys","containsAllDeepKeys","doesNotHaveAnyDeepKeys","doesNotHaveAllDeepKeys","throws","assertErr","throw","doesNotThrow","approximately","sameMembers","set1","set2","same","members","notSameMembers","sameDeepMembers","notSameDeepMembers","sameOrderedMembers","notSameOrderedMembers","sameDeepOrderedMembers","notSameDeepOrderedMembers","includeMembers","notIncludeMembers","includeDeepMembers","notIncludeDeepMembers","includeOrderedMembers","notIncludeOrderedMembers","includeDeepOrderedMembers","notIncludeDeepOrderedMembers","inList","changes","change","changesBy","tmpMsg","by","doesNotChange","changesButNotBy","but","increases","increase","increasesBy","doesNotIncrease","increasesButNotBy","decreases","decrease","decreasesBy","doesNotDecrease","doesNotDecreaseBy","decreasesButNotBy","ifError","extensible","isNotExtensible","sealed","isNotSealed","frozen","isNotFrozen","isEmpty","empty","isNotEmpty","alias","as","used","version","use","core","fixtures","TEST_HEX_1","TEST_ID_1","describe","f","enc","beforeEach","afterEach","correct","it","id","equals","correctable","correctId","errantId","errantData"],"mappingsjtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrCA;AACA;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChvJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpFA;AACA;AACA;AACA;AACA;AACA;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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AAhC,EAAqCqY,GAArC,EAA0CC,UAAjD;AACD,GAFM,CAAP;AAGD,CAND;;ACpBA;;;;;;AAMA;;;AAIA,IAAIH,+BAA+B,GAAG3S,OAAO,CAAC,mCAAD,CAA7C;AAEA;;;;;;;;;;;;;;;AAcAT,MAAM,CAAC3E,OAAP,GAAiB,SAASmY,0BAAT,CAAoCvY,GAApC,EAAyC;AACxD,SAAOqF,MAAM,CAACoI,IAAP,CAAYzN,GAAZ,EAAiBwY,MAAjB,CAAwBL,+BAA+B,CAACnY,GAAD,CAAvD,CAAP;AACD,CAFD;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5KA;;;;;;AAMA;;;;;;;;;;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","file":"index.js","sourceRoot":"","sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() {\n    return this || (typeof self === \"object\" && self);\n  })() || Function(\"return this\")()\n);\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = (function() {\n  return this || (typeof self === \"object\" && self);\n})() || Function(\"return this\")();\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = require(\"./runtime\");\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","import * as import_b from './bindgen';\n\n            \n                    let bytes;\n                    const base64 = \"\";\n                    if (typeof Buffer === 'undefined') {\n                        bytes = Uint8Array.from(atob(base64), c => c.charCodeAt(0));\n                    } else {\n                        bytes = Buffer.from(base64, 'base64');\n                    }\n                    \n            export const booted = \n            WebAssembly.instantiate(bytes,{ './bindgen': import_b,  })\n                .then(obj => {\n                    const wasm = obj.instance;\n                    memory = wasm.exports.memory;\n__wbg_encoding_free = wasm.exports.__wbg_encoding_free;\nencoding_new = wasm.exports.encoding_new;\nencoding_encode = wasm.exports.encoding_encode;\nencoding_decode = wasm.exports.encoding_decode;\nencoding_is_corrupt = wasm.exports.encoding_is_corrupt;\n__wbindgen_global_argument_ptr = wasm.exports.__wbindgen_global_argument_ptr;\n__wbindgen_malloc = wasm.exports.__wbindgen_malloc;\n__wbindgen_free = wasm.exports.__wbindgen_free;\n\n                })\n            ;\n            export let memory;\nexport let __wbg_encoding_free;\nexport let encoding_new;\nexport let encoding_encode;\nexport let encoding_decode;\nexport let encoding_is_corrupt;\nexport let __wbindgen_global_argument_ptr;\nexport let __wbindgen_malloc;\nexport let __wbindgen_free;\n\n            ","/* tslint:disable */\nimport * as wasm from './bindgen_bg';\n\nlet cachedTextEncoder = new TextEncoder('utf-8');\n\nlet cachegetUint8Memory = null;\nfunction getUint8Memory() {\n    if (cachegetUint8Memory === null || cachegetUint8Memory.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nfunction passStringToWasm(arg) {\n\n    const buf = cachedTextEncoder.encode(arg);\n    const ptr = wasm.__wbindgen_malloc(buf.length);\n    getUint8Memory().set(buf, ptr);\n    WASM_VECTOR_LEN = buf.length;\n    return ptr;\n}\n\nfunction passArray8ToWasm(arg) {\n    const ptr = wasm.__wbindgen_malloc(arg.length * 1);\n    getUint8Memory().set(arg, ptr / 1);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n\nlet cachedTextDecoder = new TextDecoder('utf-8');\n\nfunction getStringFromWasm(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory().subarray(ptr, ptr + len));\n}\n\nlet cachedGlobalArgumentPtr = null;\nfunction globalArgumentPtr() {\n    if (cachedGlobalArgumentPtr === null) {\n        cachedGlobalArgumentPtr = wasm.__wbindgen_global_argument_ptr();\n    }\n    return cachedGlobalArgumentPtr;\n}\n\nlet cachegetUint32Memory = null;\nfunction getUint32Memory() {\n    if (cachegetUint32Memory === null || cachegetUint32Memory.buffer !== wasm.memory.buffer) {\n        cachegetUint32Memory = new Uint32Array(wasm.memory.buffer);\n    }\n    return cachegetUint32Memory;\n}\n\nfunction getArrayU8FromWasm(ptr, len) {\n    return getUint8Memory().subarray(ptr / 1, ptr / 1 + len);\n}\n\nconst heap = new Array(32);\n\nheap.fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nlet heap_next = heap.length;\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nexport function __wbindgen_string_new(p, l) {\n    return addHeapObject(getStringFromWasm(p, l));\n}\n\nfunction getObject(idx) { return heap[idx]; }\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nexport function __wbindgen_rethrow(idx) { throw takeObject(idx); }\n\nfunction freeEncoding(ptr) {\n\n    wasm.__wbg_encoding_free(ptr);\n}\n/**\n*/\nexport class Encoding {\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n        freeEncoding(ptr);\n    }\n\n    /**\n    * @param {string} arg0\n    * @returns {}\n    */\n    constructor(arg0) {\n        const ptr0 = passStringToWasm(arg0);\n        const len0 = WASM_VECTOR_LEN;\n        try {\n            this.ptr = wasm.encoding_new(ptr0, len0);\n\n        } finally {\n            wasm.__wbindgen_free(ptr0, len0 * 1);\n\n        }\n\n    }\n    /**\n    * @param {Uint8Array} arg0\n    * @returns {string}\n    */\n    encode(arg0) {\n        const ptr0 = passArray8ToWasm(arg0);\n        const len0 = WASM_VECTOR_LEN;\n        const retptr = globalArgumentPtr();\n        try {\n            wasm.encoding_encode(retptr, this.ptr, ptr0, len0);\n            const mem = getUint32Memory();\n            const rustptr = mem[retptr / 4];\n            const rustlen = mem[retptr / 4 + 1];\n\n            const realRet = getStringFromWasm(rustptr, rustlen).slice();\n            wasm.__wbindgen_free(rustptr, rustlen * 1);\n            return realRet;\n\n\n        } finally {\n            wasm.__wbindgen_free(ptr0, len0 * 1);\n\n        }\n\n    }\n    /**\n    * @param {string} arg0\n    * @returns {Uint8Array}\n    */\n    decode(arg0) {\n        const ptr0 = passStringToWasm(arg0);\n        const len0 = WASM_VECTOR_LEN;\n        const retptr = globalArgumentPtr();\n        try {\n            wasm.encoding_decode(retptr, this.ptr, ptr0, len0);\n            const mem = getUint32Memory();\n            const rustptr = mem[retptr / 4];\n            const rustlen = mem[retptr / 4 + 1];\n\n            const realRet = getArrayU8FromWasm(rustptr, rustlen).slice();\n            wasm.__wbindgen_free(rustptr, rustlen * 1);\n            return realRet;\n\n\n        } finally {\n            wasm.__wbindgen_free(ptr0, len0 * 1);\n\n        }\n\n    }\n    /**\n    * @param {string} arg0\n    * @returns {boolean}\n    */\n    is_corrupt(arg0) {\n        const ptr0 = passStringToWasm(arg0);\n        const len0 = WASM_VECTOR_LEN;\n        try {\n            return (wasm.encoding_is_corrupt(this.ptr, ptr0, len0)) !== 0;\n\n        } finally {\n            wasm.__wbindgen_free(ptr0, len0 * 1);\n\n        }\n\n    }\n}\n\nexport function __wbindgen_throw(ptr, len) {\n    throw new Error(getStringFromWasm(ptr, len));\n}\n\n","/* eslint camelcase:0 */\n\nimport * as bindgen from './bindgen'\nimport { booted } from './bindgen_bg'\n\nfunction txError (fn) {\n  try {\n    return fn()\n  } catch (e) {\n    throw new Error(e)\n  }\n}\n\nfunction checkFixBuffer (buf) {\n  if (typeof Buffer === 'function' && buf instanceof Buffer) {\n    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength)\n  }\n  return buf\n}\n\nexport class Encoding {\n  constructor (encoding_name) {\n    return booted.then(() => {\n      if (typeof encoding_name !== 'string') {\n        throw new Error('encoding_name must be a string')\n      }\n      this._raw = txError(() => new bindgen.Encoding(encoding_name))\n      return this\n    })\n  }\n\n  encode (data) {\n    data = checkFixBuffer(data)\n    if (!(data instanceof Uint8Array)) {\n      throw new Error('data must be a Uint8Array')\n    }\n    return txError(() => this._raw.encode(data))\n  }\n\n  decode (data) {\n    if (typeof data !== 'string') {\n      throw new Error('data must be a string')\n    }\n    return txError(() => this._raw.decode(data))\n  }\n\n  is_corrupt (data) {\n    if (typeof data !== 'string') {\n      throw new Error('data must be a string')\n    }\n    return txError(() => this._raw.is_corrupt(data))\n  }\n}\n","/*!\n * assertion-error\n * Copyright(c) 2013 Jake Luer <jake@qualiancy.com>\n * MIT Licensed\n */\n\n/*!\n * Return a function that will copy properties from\n * one object to another excluding any originally\n * listed. Returned function will create a new `{}`.\n *\n * @param {String} excluded properties ...\n * @return {Function}\n */\n\nfunction exclude () {\n  var excludes = [].slice.call(arguments);\n\n  function excludeProps (res, obj) {\n    Object.keys(obj).forEach(function (key) {\n      if (!~excludes.indexOf(key)) res[key] = obj[key];\n    });\n  }\n\n  return function extendExclude () {\n    var args = [].slice.call(arguments)\n      , i = 0\n      , res = {};\n\n    for (; i < args.length; i++) {\n      excludeProps(res, args[i]);\n    }\n\n    return res;\n  };\n};\n\n/*!\n * Primary Exports\n */\n\nmodule.exports = AssertionError;\n\n/**\n * ### AssertionError\n *\n * An extension of the JavaScript `Error` constructor for\n * assertion and validation scenarios.\n *\n * @param {String} message\n * @param {Object} properties to include (optional)\n * @param {callee} start stack function (optional)\n */\n\nfunction AssertionError (message, _props, ssf) {\n  var extend = exclude('name', 'message', 'stack', 'constructor', 'toJSON')\n    , props = extend(_props || {});\n\n  // default values\n  this.message = message || 'Unspecified AssertionError';\n  this.showDiff = false;\n\n  // copy from properties\n  for (var key in props) {\n    this[key] = props[key];\n  }\n\n  // capture stack trace\n  ssf = ssf || AssertionError;\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, ssf);\n  } else {\n    try {\n      throw new Error();\n    } catch(e) {\n      this.stack = e.stack;\n    }\n  }\n}\n\n/*!\n * Inherit from Error.prototype\n */\n\nAssertionError.prototype = Object.create(Error.prototype);\n\n/*!\n * Statically set name\n */\n\nAssertionError.prototype.name = 'AssertionError';\n\n/*!\n * Ensure correct constructor\n */\n\nAssertionError.prototype.constructor = AssertionError;\n\n/**\n * Allow errors to be converted to JSON for static transfer.\n *\n * @param {Boolean} include stack (default: `true`)\n * @return {Object} object that can be `JSON.stringify`\n */\n\nAssertionError.prototype.toJSON = function (stack) {\n  var extend = exclude('constructor', 'toJSON', 'stack')\n    , props = extend({ name: this.name }, this);\n\n  // include stack if exists and not turned off\n  if (false !== stack && this.stack) {\n    props.stack = this.stack;\n  }\n\n  return props;\n};\n","'use strict';\n\n/* !\n * Chai - pathval utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * @see https://github.com/logicalparadox/filtr\n * MIT Licensed\n */\n\n/**\n * ### .hasProperty(object, name)\n *\n * This allows checking whether an object has own\n * or inherited from prototype chain named property.\n *\n * Basically does the same thing as the `in`\n * operator but works properly with null/undefined values\n * and other primitives.\n *\n *     var obj = {\n *         arr: ['a', 'b', 'c']\n *       , str: 'Hello'\n *     }\n *\n * The following would be the results.\n *\n *     hasProperty(obj, 'str');  // true\n *     hasProperty(obj, 'constructor');  // true\n *     hasProperty(obj, 'bar');  // false\n *\n *     hasProperty(obj.str, 'length'); // true\n *     hasProperty(obj.str, 1);  // true\n *     hasProperty(obj.str, 5);  // false\n *\n *     hasProperty(obj.arr, 'length');  // true\n *     hasProperty(obj.arr, 2);  // true\n *     hasProperty(obj.arr, 3);  // false\n *\n * @param {Object} object\n * @param {String|Symbol} name\n * @returns {Boolean} whether it exists\n * @namespace Utils\n * @name hasProperty\n * @api public\n */\n\nfunction hasProperty(obj, name) {\n  if (typeof obj === 'undefined' || obj === null) {\n    return false;\n  }\n\n  // The `in` operator does not work with primitives.\n  return name in Object(obj);\n}\n\n/* !\n * ## parsePath(path)\n *\n * Helper function used to parse string object\n * paths. Use in conjunction with `internalGetPathValue`.\n *\n *      var parsed = parsePath('myobject.property.subprop');\n *\n * ### Paths:\n *\n * * Can be infinitely deep and nested.\n * * Arrays are also valid using the formal `myobject.document[3].property`.\n * * Literal dots and brackets (not delimiter) must be backslash-escaped.\n *\n * @param {String} path\n * @returns {Object} parsed\n * @api private\n */\n\nfunction parsePath(path) {\n  var str = path.replace(/([^\\\\])\\[/g, '$1.[');\n  var parts = str.match(/(\\\\\\.|[^.]+?)+/g);\n  return parts.map(function mapMatches(value) {\n    var regexp = /^\\[(\\d+)\\]$/;\n    var mArr = regexp.exec(value);\n    var parsed = null;\n    if (mArr) {\n      parsed = { i: parseFloat(mArr[1]) };\n    } else {\n      parsed = { p: value.replace(/\\\\([.\\[\\]])/g, '$1') };\n    }\n\n    return parsed;\n  });\n}\n\n/* !\n * ## internalGetPathValue(obj, parsed[, pathDepth])\n *\n * Helper companion function for `.parsePath` that returns\n * the value located at the parsed address.\n *\n *      var value = getPathValue(obj, parsed);\n *\n * @param {Object} object to search against\n * @param {Object} parsed definition from `parsePath`.\n * @param {Number} depth (nesting level) of the property we want to retrieve\n * @returns {Object|Undefined} value\n * @api private\n */\n\nfunction internalGetPathValue(obj, parsed, pathDepth) {\n  var temporaryValue = obj;\n  var res = null;\n  pathDepth = (typeof pathDepth === 'undefined' ? parsed.length : pathDepth);\n\n  for (var i = 0; i < pathDepth; i++) {\n    var part = parsed[i];\n    if (temporaryValue) {\n      if (typeof part.p === 'undefined') {\n        temporaryValue = temporaryValue[part.i];\n      } else {\n        temporaryValue = temporaryValue[part.p];\n      }\n\n      if (i === (pathDepth - 1)) {\n        res = temporaryValue;\n      }\n    }\n  }\n\n  return res;\n}\n\n/* !\n * ## internalSetPathValue(obj, value, parsed)\n *\n * Companion function for `parsePath` that sets\n * the value located at a parsed address.\n *\n *  internalSetPathValue(obj, 'value', parsed);\n *\n * @param {Object} object to search and define on\n * @param {*} value to use upon set\n * @param {Object} parsed definition from `parsePath`\n * @api private\n */\n\nfunction internalSetPathValue(obj, val, parsed) {\n  var tempObj = obj;\n  var pathDepth = parsed.length;\n  var part = null;\n  // Here we iterate through every part of the path\n  for (var i = 0; i < pathDepth; i++) {\n    var propName = null;\n    var propVal = null;\n    part = parsed[i];\n\n    // If it's the last part of the path, we set the 'propName' value with the property name\n    if (i === (pathDepth - 1)) {\n      propName = typeof part.p === 'undefined' ? part.i : part.p;\n      // Now we set the property with the name held by 'propName' on object with the desired val\n      tempObj[propName] = val;\n    } else if (typeof part.p !== 'undefined' && tempObj[part.p]) {\n      tempObj = tempObj[part.p];\n    } else if (typeof part.i !== 'undefined' && tempObj[part.i]) {\n      tempObj = tempObj[part.i];\n    } else {\n      // If the obj doesn't have the property we create one with that name to define it\n      var next = parsed[i + 1];\n      // Here we set the name of the property which will be defined\n      propName = typeof part.p === 'undefined' ? part.i : part.p;\n      // Here we decide if this property will be an array or a new object\n      propVal = typeof next.p === 'undefined' ? [] : {};\n      tempObj[propName] = propVal;\n      tempObj = tempObj[propName];\n    }\n  }\n}\n\n/**\n * ### .getPathInfo(object, path)\n *\n * This allows the retrieval of property info in an\n * object given a string path.\n *\n * The path info consists of an object with the\n * following properties:\n *\n * * parent - The parent object of the property referenced by `path`\n * * name - The name of the final property, a number if it was an array indexer\n * * value - The value of the property, if it exists, otherwise `undefined`\n * * exists - Whether the property exists or not\n *\n * @param {Object} object\n * @param {String} path\n * @returns {Object} info\n * @namespace Utils\n * @name getPathInfo\n * @api public\n */\n\nfunction getPathInfo(obj, path) {\n  var parsed = parsePath(path);\n  var last = parsed[parsed.length - 1];\n  var info = {\n    parent: parsed.length > 1 ? internalGetPathValue(obj, parsed, parsed.length - 1) : obj,\n    name: last.p || last.i,\n    value: internalGetPathValue(obj, parsed),\n  };\n  info.exists = hasProperty(info.parent, info.name);\n\n  return info;\n}\n\n/**\n * ### .getPathValue(object, path)\n *\n * This allows the retrieval of values in an\n * object given a string path.\n *\n *     var obj = {\n *         prop1: {\n *             arr: ['a', 'b', 'c']\n *           , str: 'Hello'\n *         }\n *       , prop2: {\n *             arr: [ { nested: 'Universe' } ]\n *           , str: 'Hello again!'\n *         }\n *     }\n *\n * The following would be the results.\n *\n *     getPathValue(obj, 'prop1.str'); // Hello\n *     getPathValue(obj, 'prop1.att[2]'); // b\n *     getPathValue(obj, 'prop2.arr[0].nested'); // Universe\n *\n * @param {Object} object\n * @param {String} path\n * @returns {Object} value or `undefined`\n * @namespace Utils\n * @name getPathValue\n * @api public\n */\n\nfunction getPathValue(obj, path) {\n  var info = getPathInfo(obj, path);\n  return info.value;\n}\n\n/**\n * ### .setPathValue(object, path, value)\n *\n * Define the value in an object at a given string path.\n *\n * ```js\n * var obj = {\n *     prop1: {\n *         arr: ['a', 'b', 'c']\n *       , str: 'Hello'\n *     }\n *   , prop2: {\n *         arr: [ { nested: 'Universe' } ]\n *       , str: 'Hello again!'\n *     }\n * };\n * ```\n *\n * The following would be acceptable.\n *\n * ```js\n * var properties = require('tea-properties');\n * properties.set(obj, 'prop1.str', 'Hello Universe!');\n * properties.set(obj, 'prop1.arr[2]', 'B');\n * properties.set(obj, 'prop2.arr[0].nested.value', { hello: 'universe' });\n * ```\n *\n * @param {Object} object\n * @param {String} path\n * @param {Mixed} value\n * @api private\n */\n\nfunction setPathValue(obj, path, val) {\n  var parsed = parsePath(path);\n  internalSetPathValue(obj, val, parsed);\n  return obj;\n}\n\nmodule.exports = {\n  hasProperty: hasProperty,\n  getPathInfo: getPathInfo,\n  getPathValue: getPathValue,\n  setPathValue: setPathValue,\n};\n","/*!\n * Chai - flag utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .flag(object, key, [value])\n *\n * Get or set a flag value on an object. If a\n * value is provided it will be set, else it will\n * return the currently set value or `undefined` if\n * the value is not set.\n *\n *     utils.flag(this, 'foo', 'bar'); // setter\n *     utils.flag(this, 'foo'); // getter, returns `bar`\n *\n * @param {Object} object constructed Assertion\n * @param {String} key\n * @param {Mixed} value (optional)\n * @namespace Utils\n * @name flag\n * @api private\n */\n\nmodule.exports = function flag(obj, key, value) {\n  var flags = obj.__flags || (obj.__flags = Object.create(null));\n  if (arguments.length === 3) {\n    flags[key] = value;\n  } else {\n    return flags[key];\n  }\n};\n","/*!\n * Chai - test utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Module dependencies\n */\n\nvar flag = require('./flag');\n\n/**\n * ### .test(object, expression)\n *\n * Test and object for expression.\n *\n * @param {Object} object (constructed Assertion)\n * @param {Arguments} chai.Assertion.prototype.assert arguments\n * @namespace Utils\n * @name test\n */\n\nmodule.exports = function test(obj, args) {\n  var negate = flag(obj, 'negate')\n    , expr = args[0];\n  return negate ? !expr : expr;\n};\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.typeDetect = factory());\n}(this, (function () { 'use strict';\n\n/* !\n * type-detect\n * Copyright(c) 2013 jake luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\nvar promiseExists = typeof Promise === 'function';\n\n/* eslint-disable no-undef */\nvar globalObject = typeof self === 'object' ? self : global; // eslint-disable-line id-blacklist\n\nvar symbolExists = typeof Symbol !== 'undefined';\nvar mapExists = typeof Map !== 'undefined';\nvar setExists = typeof Set !== 'undefined';\nvar weakMapExists = typeof WeakMap !== 'undefined';\nvar weakSetExists = typeof WeakSet !== 'undefined';\nvar dataViewExists = typeof DataView !== 'undefined';\nvar symbolIteratorExists = symbolExists && typeof Symbol.iterator !== 'undefined';\nvar symbolToStringTagExists = symbolExists && typeof Symbol.toStringTag !== 'undefined';\nvar setEntriesExists = setExists && typeof Set.prototype.entries === 'function';\nvar mapEntriesExists = mapExists && typeof Map.prototype.entries === 'function';\nvar setIteratorPrototype = setEntriesExists && Object.getPrototypeOf(new Set().entries());\nvar mapIteratorPrototype = mapEntriesExists && Object.getPrototypeOf(new Map().entries());\nvar arrayIteratorExists = symbolIteratorExists && typeof Array.prototype[Symbol.iterator] === 'function';\nvar arrayIteratorPrototype = arrayIteratorExists && Object.getPrototypeOf([][Symbol.iterator]());\nvar stringIteratorExists = symbolIteratorExists && typeof String.prototype[Symbol.iterator] === 'function';\nvar stringIteratorPrototype = stringIteratorExists && Object.getPrototypeOf(''[Symbol.iterator]());\nvar toStringLeftSliceLength = 8;\nvar toStringRightSliceLength = -1;\n/**\n * ### typeOf (obj)\n *\n * Uses `Object.prototype.toString` to determine the type of an object,\n * normalising behaviour across engine versions & well optimised.\n *\n * @param {Mixed} object\n * @return {String} object type\n * @api public\n */\nfunction typeDetect(obj) {\n  /* ! Speed optimisation\n   * Pre:\n   *   string literal     x 3,039,035 ops/sec ±1.62% (78 runs sampled)\n   *   boolean literal    x 1,424,138 ops/sec ±4.54% (75 runs sampled)\n   *   number literal     x 1,653,153 ops/sec ±1.91% (82 runs sampled)\n   *   undefined          x 9,978,660 ops/sec ±1.92% (75 runs sampled)\n   *   function           x 2,556,769 ops/sec ±1.73% (77 runs sampled)\n   * Post:\n   *   string literal     x 38,564,796 ops/sec ±1.15% (79 runs sampled)\n   *   boolean literal    x 31,148,940 ops/sec ±1.10% (79 runs sampled)\n   *   number literal     x 32,679,330 ops/sec ±1.90% (78 runs sampled)\n   *   undefined          x 32,363,368 ops/sec ±1.07% (82 runs sampled)\n   *   function           x 31,296,870 ops/sec ±0.96% (83 runs sampled)\n   */\n  var typeofObj = typeof obj;\n  if (typeofObj !== 'object') {\n    return typeofObj;\n  }\n\n  /* ! Speed optimisation\n   * Pre:\n   *   null               x 28,645,765 ops/sec ±1.17% (82 runs sampled)\n   * Post:\n   *   null               x 36,428,962 ops/sec ±1.37% (84 runs sampled)\n   */\n  if (obj === null) {\n    return 'null';\n  }\n\n  /* ! Spec Conformance\n   * Test: `Object.prototype.toString.call(window)``\n   *  - Node === \"[object global]\"\n   *  - Chrome === \"[object global]\"\n   *  - Firefox === \"[object Window]\"\n   *  - PhantomJS === \"[object Window]\"\n   *  - Safari === \"[object Window]\"\n   *  - IE 11 === \"[object Window]\"\n   *  - IE Edge === \"[object Window]\"\n   * Test: `Object.prototype.toString.call(this)``\n   *  - Chrome Worker === \"[object global]\"\n   *  - Firefox Worker === \"[object DedicatedWorkerGlobalScope]\"\n   *  - Safari Worker === \"[object DedicatedWorkerGlobalScope]\"\n   *  - IE 11 Worker === \"[object WorkerGlobalScope]\"\n   *  - IE Edge Worker === \"[object WorkerGlobalScope]\"\n   */\n  if (obj === globalObject) {\n    return 'global';\n  }\n\n  /* ! Speed optimisation\n   * Pre:\n   *   array literal      x 2,888,352 ops/sec ±0.67% (82 runs sampled)\n   * Post:\n   *   array literal      x 22,479,650 ops/sec ±0.96% (81 runs sampled)\n   */\n  if (\n    Array.isArray(obj) &&\n    (symbolToStringTagExists === false || !(Symbol.toStringTag in obj))\n  ) {\n    return 'Array';\n  }\n\n  // Not caching existence of `window` and related properties due to potential\n  // for `window` to be unset before tests in quasi-browser environments.\n  if (typeof window === 'object' && window !== null) {\n    /* ! Spec Conformance\n     * (https://html.spec.whatwg.org/multipage/browsers.html#location)\n     * WhatWG HTML$7.7.3 - The `Location` interface\n     * Test: `Object.prototype.toString.call(window.location)``\n     *  - IE <=11 === \"[object Object]\"\n     *  - IE Edge <=13 === \"[object Object]\"\n     */\n    if (typeof window.location === 'object' && obj === window.location) {\n      return 'Location';\n    }\n\n    /* ! Spec Conformance\n     * (https://html.spec.whatwg.org/#document)\n     * WhatWG HTML$3.1.1 - The `Document` object\n     * Note: Most browsers currently adher to the W3C DOM Level 2 spec\n     *       (https://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-26809268)\n     *       which suggests that browsers should use HTMLTableCellElement for\n     *       both TD and TH elements. WhatWG separates these.\n     *       WhatWG HTML states:\n     *         > For historical reasons, Window objects must also have a\n     *         > writable, configurable, non-enumerable property named\n     *         > HTMLDocument whose value is the Document interface object.\n     * Test: `Object.prototype.toString.call(document)``\n     *  - Chrome === \"[object HTMLDocument]\"\n     *  - Firefox === \"[object HTMLDocument]\"\n     *  - Safari === \"[object HTMLDocument]\"\n     *  - IE <=10 === \"[object Document]\"\n     *  - IE 11 === \"[object HTMLDocument]\"\n     *  - IE Edge <=13 === \"[object HTMLDocument]\"\n     */\n    if (typeof window.document === 'object' && obj === window.document) {\n      return 'Document';\n    }\n\n    if (typeof window.navigator === 'object') {\n      /* ! Spec Conformance\n       * (https://html.spec.whatwg.org/multipage/webappapis.html#mimetypearray)\n       * WhatWG HTML$8.6.1.5 - Plugins - Interface MimeTypeArray\n       * Test: `Object.prototype.toString.call(navigator.mimeTypes)``\n       *  - IE <=10 === \"[object MSMimeTypesCollection]\"\n       */\n      if (typeof window.navigator.mimeTypes === 'object' &&\n          obj === window.navigator.mimeTypes) {\n        return 'MimeTypeArray';\n      }\n\n      /* ! Spec Conformance\n       * (https://html.spec.whatwg.org/multipage/webappapis.html#pluginarray)\n       * WhatWG HTML$8.6.1.5 - Plugins - Interface PluginArray\n       * Test: `Object.prototype.toString.call(navigator.plugins)``\n       *  - IE <=10 === \"[object MSPluginsCollection]\"\n       */\n      if (typeof window.navigator.plugins === 'object' &&\n          obj === window.navigator.plugins) {\n        return 'PluginArray';\n      }\n    }\n\n    if ((typeof window.HTMLElement === 'function' ||\n        typeof window.HTMLElement === 'object') &&\n        obj instanceof window.HTMLElement) {\n      /* ! Spec Conformance\n      * (https://html.spec.whatwg.org/multipage/webappapis.html#pluginarray)\n      * WhatWG HTML$4.4.4 - The `blockquote` element - Interface `HTMLQuoteElement`\n      * Test: `Object.prototype.toString.call(document.createElement('blockquote'))``\n      *  - IE <=10 === \"[object HTMLBlockElement]\"\n      */\n      if (obj.tagName === 'BLOCKQUOTE') {\n        return 'HTMLQuoteElement';\n      }\n\n      /* ! Spec Conformance\n       * (https://html.spec.whatwg.org/#htmltabledatacellelement)\n       * WhatWG HTML$4.9.9 - The `td` element - Interface `HTMLTableDataCellElement`\n       * Note: Most browsers currently adher to the W3C DOM Level 2 spec\n       *       (https://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-82915075)\n       *       which suggests that browsers should use HTMLTableCellElement for\n       *       both TD and TH elements. WhatWG separates these.\n       * Test: Object.prototype.toString.call(document.createElement('td'))\n       *  - Chrome === \"[object HTMLTableCellElement]\"\n       *  - Firefox === \"[object HTMLTableCellElement]\"\n       *  - Safari === \"[object HTMLTableCellElement]\"\n       */\n      if (obj.tagName === 'TD') {\n        return 'HTMLTableDataCellElement';\n      }\n\n      /* ! Spec Conformance\n       * (https://html.spec.whatwg.org/#htmltableheadercellelement)\n       * WhatWG HTML$4.9.9 - The `td` element - Interface `HTMLTableHeaderCellElement`\n       * Note: Most browsers currently adher to the W3C DOM Level 2 spec\n       *       (https://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-82915075)\n       *       which suggests that browsers should use HTMLTableCellElement for\n       *       both TD and TH elements. WhatWG separates these.\n       * Test: Object.prototype.toString.call(document.createElement('th'))\n       *  - Chrome === \"[object HTMLTableCellElement]\"\n       *  - Firefox === \"[object HTMLTableCellElement]\"\n       *  - Safari === \"[object HTMLTableCellElement]\"\n       */\n      if (obj.tagName === 'TH') {\n        return 'HTMLTableHeaderCellElement';\n      }\n    }\n  }\n\n  /* ! Speed optimisation\n  * Pre:\n  *   Float64Array       x 625,644 ops/sec ±1.58% (80 runs sampled)\n  *   Float32Array       x 1,279,852 ops/sec ±2.91% (77 runs sampled)\n  *   Uint32Array        x 1,178,185 ops/sec ±1.95% (83 runs sampled)\n  *   Uint16Array        x 1,008,380 ops/sec ±2.25% (80 runs sampled)\n  *   Uint8Array         x 1,128,040 ops/sec ±2.11% (81 runs sampled)\n  *   Int32Array         x 1,170,119 ops/sec ±2.88% (80 runs sampled)\n  *   Int16Array         x 1,176,348 ops/sec ±5.79% (86 runs sampled)\n  *   Int8Array          x 1,058,707 ops/sec ±4.94% (77 runs sampled)\n  *   Uint8ClampedArray  x 1,110,633 ops/sec ±4.20% (80 runs sampled)\n  * Post:\n  *   Float64Array       x 7,105,671 ops/sec ±13.47% (64 runs sampled)\n  *   Float32Array       x 5,887,912 ops/sec ±1.46% (82 runs sampled)\n  *   Uint32Array        x 6,491,661 ops/sec ±1.76% (79 runs sampled)\n  *   Uint16Array        x 6,559,795 ops/sec ±1.67% (82 runs sampled)\n  *   Uint8Array         x 6,463,966 ops/sec ±1.43% (85 runs sampled)\n  *   Int32Array         x 5,641,841 ops/sec ±3.49% (81 runs sampled)\n  *   Int16Array         x 6,583,511 ops/sec ±1.98% (80 runs sampled)\n  *   Int8Array          x 6,606,078 ops/sec ±1.74% (81 runs sampled)\n  *   Uint8ClampedArray  x 6,602,224 ops/sec ±1.77% (83 runs sampled)\n  */\n  var stringTag = (symbolToStringTagExists && obj[Symbol.toStringTag]);\n  if (typeof stringTag === 'string') {\n    return stringTag;\n  }\n\n  var objPrototype = Object.getPrototypeOf(obj);\n  /* ! Speed optimisation\n  * Pre:\n  *   regex literal      x 1,772,385 ops/sec ±1.85% (77 runs sampled)\n  *   regex constructor  x 2,143,634 ops/sec ±2.46% (78 runs sampled)\n  * Post:\n  *   regex literal      x 3,928,009 ops/sec ±0.65% (78 runs sampled)\n  *   regex constructor  x 3,931,108 ops/sec ±0.58% (84 runs sampled)\n  */\n  if (objPrototype === RegExp.prototype) {\n    return 'RegExp';\n  }\n\n  /* ! Speed optimisation\n  * Pre:\n  *   date               x 2,130,074 ops/sec ±4.42% (68 runs sampled)\n  * Post:\n  *   date               x 3,953,779 ops/sec ±1.35% (77 runs sampled)\n  */\n  if (objPrototype === Date.prototype) {\n    return 'Date';\n  }\n\n  /* ! Spec Conformance\n   * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-promise.prototype-@@tostringtag)\n   * ES6$25.4.5.4 - Promise.prototype[@@toStringTag] should be \"Promise\":\n   * Test: `Object.prototype.toString.call(Promise.resolve())``\n   *  - Chrome <=47 === \"[object Object]\"\n   *  - Edge <=20 === \"[object Object]\"\n   *  - Firefox 29-Latest === \"[object Promise]\"\n   *  - Safari 7.1-Latest === \"[object Promise]\"\n   */\n  if (promiseExists && objPrototype === Promise.prototype) {\n    return 'Promise';\n  }\n\n  /* ! Speed optimisation\n  * Pre:\n  *   set                x 2,222,186 ops/sec ±1.31% (82 runs sampled)\n  * Post:\n  *   set                x 4,545,879 ops/sec ±1.13% (83 runs sampled)\n  */\n  if (setExists && objPrototype === Set.prototype) {\n    return 'Set';\n  }\n\n  /* ! Speed optimisation\n  * Pre:\n  *   map                x 2,396,842 ops/sec ±1.59% (81 runs sampled)\n  * Post:\n  *   map                x 4,183,945 ops/sec ±6.59% (82 runs sampled)\n  */\n  if (mapExists && objPrototype === Map.prototype) {\n    return 'Map';\n  }\n\n  /* ! Speed optimisation\n  * Pre:\n  *   weakset            x 1,323,220 ops/sec ±2.17% (76 runs sampled)\n  * Post:\n  *   weakset            x 4,237,510 ops/sec ±2.01% (77 runs sampled)\n  */\n  if (weakSetExists && objPrototype === WeakSet.prototype) {\n    return 'WeakSet';\n  }\n\n  /* ! Speed optimisation\n  * Pre:\n  *   weakmap            x 1,500,260 ops/sec ±2.02% (78 runs sampled)\n  * Post:\n  *   weakmap            x 3,881,384 ops/sec ±1.45% (82 runs sampled)\n  */\n  if (weakMapExists && objPrototype === WeakMap.prototype) {\n    return 'WeakMap';\n  }\n\n  /* ! Spec Conformance\n   * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-dataview.prototype-@@tostringtag)\n   * ES6$24.2.4.21 - DataView.prototype[@@toStringTag] should be \"DataView\":\n   * Test: `Object.prototype.toString.call(new DataView(new ArrayBuffer(1)))``\n   *  - Edge <=13 === \"[object Object]\"\n   */\n  if (dataViewExists && objPrototype === DataView.prototype) {\n    return 'DataView';\n  }\n\n  /* ! Spec Conformance\n   * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-%mapiteratorprototype%-@@tostringtag)\n   * ES6$23.1.5.2.2 - %MapIteratorPrototype%[@@toStringTag] should be \"Map Iterator\":\n   * Test: `Object.prototype.toString.call(new Map().entries())``\n   *  - Edge <=13 === \"[object Object]\"\n   */\n  if (mapExists && objPrototype === mapIteratorPrototype) {\n    return 'Map Iterator';\n  }\n\n  /* ! Spec Conformance\n   * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-%setiteratorprototype%-@@tostringtag)\n   * ES6$23.2.5.2.2 - %SetIteratorPrototype%[@@toStringTag] should be \"Set Iterator\":\n   * Test: `Object.prototype.toString.call(new Set().entries())``\n   *  - Edge <=13 === \"[object Object]\"\n   */\n  if (setExists && objPrototype === setIteratorPrototype) {\n    return 'Set Iterator';\n  }\n\n  /* ! Spec Conformance\n   * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-%arrayiteratorprototype%-@@tostringtag)\n   * ES6$22.1.5.2.2 - %ArrayIteratorPrototype%[@@toStringTag] should be \"Array Iterator\":\n   * Test: `Object.prototype.toString.call([][Symbol.iterator]())``\n   *  - Edge <=13 === \"[object Object]\"\n   */\n  if (arrayIteratorExists && objPrototype === arrayIteratorPrototype) {\n    return 'Array Iterator';\n  }\n\n  /* ! Spec Conformance\n   * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-%stringiteratorprototype%-@@tostringtag)\n   * ES6$21.1.5.2.2 - %StringIteratorPrototype%[@@toStringTag] should be \"String Iterator\":\n   * Test: `Object.prototype.toString.call(''[Symbol.iterator]())``\n   *  - Edge <=13 === \"[object Object]\"\n   */\n  if (stringIteratorExists && objPrototype === stringIteratorPrototype) {\n    return 'String Iterator';\n  }\n\n  /* ! Speed optimisation\n  * Pre:\n  *   object from null   x 2,424,320 ops/sec ±1.67% (76 runs sampled)\n  * Post:\n  *   object from null   x 5,838,000 ops/sec ±0.99% (84 runs sampled)\n  */\n  if (objPrototype === null) {\n    return 'Object';\n  }\n\n  return Object\n    .prototype\n    .toString\n    .call(obj)\n    .slice(toStringLeftSliceLength, toStringRightSliceLength);\n}\n\nreturn typeDetect;\n\n})));\n","/*!\n * Chai - expectTypes utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .expectTypes(obj, types)\n *\n * Ensures that the object being tested against is of a valid type.\n *\n *     utils.expectTypes(this, ['array', 'object', 'string']);\n *\n * @param {Mixed} obj constructed Assertion\n * @param {Array} type A list of allowed types for this assertion\n * @namespace Utils\n * @name expectTypes\n * @api public\n */\n\nvar AssertionError = require('assertion-error');\nvar flag = require('./flag');\nvar type = require('type-detect');\n\nmodule.exports = function expectTypes(obj, types) {\n  var flagMsg = flag(obj, 'message');\n  var ssfi = flag(obj, 'ssfi');\n\n  flagMsg = flagMsg ? flagMsg + ': ' : '';\n\n  obj = flag(obj, 'object');\n  types = types.map(function (t) { return t.toLowerCase(); });\n  types.sort();\n\n  // Transforms ['lorem', 'ipsum'] into 'a lorem, or an ipsum'\n  var str = types.map(function (t, index) {\n    var art = ~[ 'a', 'e', 'i', 'o', 'u' ].indexOf(t.charAt(0)) ? 'an' : 'a';\n    var or = types.length > 1 && index === types.length - 1 ? 'or ' : '';\n    return or + art + ' ' + t;\n  }).join(', ');\n\n  var objType = type(obj).toLowerCase();\n\n  if (!types.some(function (expected) { return objType === expected; })) {\n    throw new AssertionError(\n      flagMsg + 'object tested must be ' + str + ', but ' + objType + ' given',\n      undefined,\n      ssfi\n    );\n  }\n};\n","/*!\n * Chai - getActual utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .getActual(object, [actual])\n *\n * Returns the `actual` value for an Assertion.\n *\n * @param {Object} object (constructed Assertion)\n * @param {Arguments} chai.Assertion.prototype.assert arguments\n * @namespace Utils\n * @name getActual\n */\n\nmodule.exports = function getActual(obj, args) {\n  return args.length > 4 ? args[4] : obj._obj;\n};\n","'use strict';\n\n/* !\n * Chai - getFuncName utility\n * Copyright(c) 2012-2016 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .getFuncName(constructorFn)\n *\n * Returns the name of a function.\n * When a non-function instance is passed, returns `null`.\n * This also includes a polyfill function if `aFunc.name` is not defined.\n *\n * @name getFuncName\n * @param {Function} funct\n * @namespace Utils\n * @api public\n */\n\nvar toString = Function.prototype.toString;\nvar functionNameMatch = /\\s*function(?:\\s|\\s*\\/\\*[^(?:*\\/)]+\\*\\/\\s*)*([^\\s\\(\\/]+)/;\nfunction getFuncName(aFunc) {\n  if (typeof aFunc !== 'function') {\n    return null;\n  }\n\n  var name = '';\n  if (typeof Function.prototype.name === 'undefined' && typeof aFunc.name === 'undefined') {\n    // Here we run a polyfill if Function does not support the `name` property and if aFunc.name is not defined\n    var match = toString.call(aFunc).match(functionNameMatch);\n    if (match) {\n      name = match[1];\n    }\n  } else {\n    // If we've got a `name` property we just use it\n    name = aFunc.name;\n  }\n\n  return name;\n}\n\nmodule.exports = getFuncName;\n","/*!\n * Chai - getProperties utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .getProperties(object)\n *\n * This allows the retrieval of property names of an object, enumerable or not,\n * inherited or not.\n *\n * @param {Object} object\n * @returns {Array}\n * @namespace Utils\n * @name getProperties\n * @api public\n */\n\nmodule.exports = function getProperties(object) {\n  var result = Object.getOwnPropertyNames(object);\n\n  function addProperty(property) {\n    if (result.indexOf(property) === -1) {\n      result.push(property);\n    }\n  }\n\n  var proto = Object.getPrototypeOf(object);\n  while (proto !== null) {\n    Object.getOwnPropertyNames(proto).forEach(addProperty);\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return result;\n};\n","/*!\n * Chai - getEnumerableProperties utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .getEnumerableProperties(object)\n *\n * This allows the retrieval of enumerable property names of an object,\n * inherited or not.\n *\n * @param {Object} object\n * @returns {Array}\n * @namespace Utils\n * @name getEnumerableProperties\n * @api public\n */\n\nmodule.exports = function getEnumerableProperties(object) {\n  var result = [];\n  for (var name in object) {\n    result.push(name);\n  }\n  return result;\n};\n","module.exports = {\n\n  /**\n   * ### config.includeStack\n   *\n   * User configurable property, influences whether stack trace\n   * is included in Assertion error message. Default of false\n   * suppresses stack trace in the error message.\n   *\n   *     chai.config.includeStack = true;  // enable stack on error\n   *\n   * @param {Boolean}\n   * @api public\n   */\n\n  includeStack: false,\n\n  /**\n   * ### config.showDiff\n   *\n   * User configurable property, influences whether or not\n   * the `showDiff` flag should be included in the thrown\n   * AssertionErrors. `false` will always be `false`; `true`\n   * will be true when the assertion has requested a diff\n   * be shown.\n   *\n   * @param {Boolean}\n   * @api public\n   */\n\n  showDiff: true,\n\n  /**\n   * ### config.truncateThreshold\n   *\n   * User configurable property, sets length threshold for actual and\n   * expected values in assertion errors. If this threshold is exceeded, for\n   * example for large data structures, the value is replaced with something\n   * like `[ Array(3) ]` or `{ Object (prop1, prop2) }`.\n   *\n   * Set it to zero if you want to disable truncating altogether.\n   *\n   * This is especially userful when doing assertions on arrays: having this\n   * set to a reasonable large value makes the failure messages readily\n   * inspectable.\n   *\n   *     chai.config.truncateThreshold = 0;  // disable truncating\n   *\n   * @param {Number}\n   * @api public\n   */\n\n  truncateThreshold: 40,\n\n  /**\n   * ### config.useProxy\n   *\n   * User configurable property, defines if chai will use a Proxy to throw\n   * an error when a non-existent property is read, which protects users\n   * from typos when using property-based assertions.\n   *\n   * Set it to false if you want to disable this feature.\n   *\n   *     chai.config.useProxy = false;  // disable use of Proxy\n   *\n   * This feature is automatically disabled regardless of this config value\n   * in environments that don't support proxies.\n   *\n   * @param {Boolean}\n   * @api public\n   */\n\n  useProxy: true,\n\n  /**\n   * ### config.proxyExcludedKeys\n   *\n   * User configurable property, defines which properties should be ignored\n   * instead of throwing an error if they do not exist on the assertion.\n   * This is only applied if the environment Chai is running in supports proxies and\n   * if the `useProxy` configuration setting is enabled.\n   * By default, `then` and `inspect` will not throw an error if they do not exist on the\n   * assertion object because the `.inspect` property is read by `util.inspect` (for example, when\n   * using `console.log` on the assertion object) and `.then` is necessary for promise type-checking.\n   *\n   *     // By default these keys will not throw an error if they do not exist on the assertion object\n   *     chai.config.proxyExcludedKeys = ['then', 'inspect'];\n   *\n   * @param {Array}\n   * @api public\n   */\n\n  proxyExcludedKeys: ['then', 'catch', 'inspect', 'toJSON']\n};\n","// This is (almost) directly from Node.js utils\n// https://github.com/joyent/node/blob/f8c335d0caf47f16d31413f89aa28eda3878e3aa/lib/util.js\n\nvar getName = require('get-func-name');\nvar getProperties = require('./getProperties');\nvar getEnumerableProperties = require('./getEnumerableProperties');\nvar config = require('../config');\n\nmodule.exports = inspect;\n\n/**\n * ### .inspect(obj, [showHidden], [depth], [colors])\n *\n * Echoes the value of a value. Tries to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Boolean} showHidden Flag that shows hidden (not enumerable)\n *    properties of objects. Default is false.\n * @param {Number} depth Depth in which to descend in object. Default is 2.\n * @param {Boolean} colors Flag to turn on ANSI escape codes to color the\n *    output. Default is false (no coloring).\n * @namespace Utils\n * @name inspect\n */\nfunction inspect(obj, showHidden, depth, colors) {\n  var ctx = {\n    showHidden: showHidden,\n    seen: [],\n    stylize: function (str) { return str; }\n  };\n  return formatValue(ctx, obj, (typeof depth === 'undefined' ? 2 : depth));\n}\n\n// Returns true if object is a DOM element.\nvar isDOMElement = function (object) {\n  if (typeof HTMLElement === 'object') {\n    return object instanceof HTMLElement;\n  } else {\n    return object &&\n      typeof object === 'object' &&\n      'nodeType' in object &&\n      object.nodeType === 1 &&\n      typeof object.nodeName === 'string';\n  }\n};\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (value && typeof value.inspect === 'function' &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (typeof ret !== 'string') {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // If this is a DOM element, try to get the outer HTML.\n  if (isDOMElement(value)) {\n    if ('outerHTML' in value) {\n      return value.outerHTML;\n      // This value does not have an outerHTML attribute,\n      //   it could still be an XML element\n    } else {\n      // Attempt to serialize it\n      try {\n        if (document.xmlVersion) {\n          var xmlSerializer = new XMLSerializer();\n          return xmlSerializer.serializeToString(value);\n        } else {\n          // Firefox 11- do not support outerHTML\n          //   It does, however, support innerHTML\n          //   Use the following to render the element\n          var ns = \"http://www.w3.org/1999/xhtml\";\n          var container = document.createElementNS(ns, '_');\n\n          container.appendChild(value.cloneNode(false));\n          var html = container.innerHTML\n            .replace('><', '>' + value.innerHTML + '<');\n          container.innerHTML = '';\n          return html;\n        }\n      } catch (err) {\n        // This could be a non-native DOM implementation,\n        //   continue with the normal flow:\n        //   printing the element as if it is an object.\n      }\n    }\n  }\n\n  // Look up the keys of the object.\n  var visibleKeys = getEnumerableProperties(value);\n  var keys = ctx.showHidden ? getProperties(value) : visibleKeys;\n\n  var name, nameSuffix;\n\n  // Some type of object without properties can be shortcut.\n  // In IE, errors have a single `stack` property, or if they are vanilla `Error`,\n  // a `stack` plus `description` property; ignore those for consistency.\n  if (keys.length === 0 || (isError(value) && (\n      (keys.length === 1 && keys[0] === 'stack') ||\n      (keys.length === 2 && keys[0] === 'description' && keys[1] === 'stack')\n     ))) {\n    if (typeof value === 'function') {\n      name = getName(value);\n      nameSuffix = name ? ': ' + name : '';\n      return ctx.stylize('[Function' + nameSuffix + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toUTCString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = ''\n    , array = false\n    , typedArray = false\n    , braces = ['{', '}'];\n\n  if (isTypedArray(value)) {\n    typedArray = true;\n    braces = ['[', ']'];\n  }\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (typeof value === 'function') {\n    name = getName(value);\n    nameSuffix = name ? ': ' + name : '';\n    base = ' [Function' + nameSuffix + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    return formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else if (typedArray) {\n    return formatTypedArray(value);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\nfunction formatPrimitive(ctx, value) {\n  switch (typeof value) {\n    case 'undefined':\n      return ctx.stylize('undefined', 'undefined');\n\n    case 'string':\n      var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                               .replace(/'/g, \"\\\\'\")\n                                               .replace(/\\\\\"/g, '\"') + '\\'';\n      return ctx.stylize(simple, 'string');\n\n    case 'number':\n      if (value === 0 && (1/value) === -Infinity) {\n        return ctx.stylize('-0', 'number');\n      }\n      return ctx.stylize('' + value, 'number');\n\n    case 'boolean':\n      return ctx.stylize('' + value, 'boolean');\n\n    case 'symbol':\n      return ctx.stylize(value.toString(), 'symbol');\n  }\n  // For some reason typeof null is \"object\", so special case here.\n  if (value === null) {\n    return ctx.stylize('null', 'null');\n  }\n}\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (Object.prototype.hasOwnProperty.call(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\nfunction formatTypedArray(value) {\n  var str = '[ ';\n\n  for (var i = 0; i < value.length; ++i) {\n    if (str.length >= config.truncateThreshold - 7) {\n      str += '...';\n      break;\n    }\n    str += value[i] + ', ';\n  }\n  str += ' ]';\n\n  // Removing trailing `, ` if the array was not truncated\n  if (str.indexOf(',  ]') !== -1) {\n    str = str.replace(',  ]', ' ]');\n  }\n\n  return str;\n}\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name;\n  var propDescriptor = Object.getOwnPropertyDescriptor(value, key);\n  var str;\n\n  if (propDescriptor) {\n    if (propDescriptor.get) {\n      if (propDescriptor.set) {\n        str = ctx.stylize('[Getter/Setter]', 'special');\n      } else {\n        str = ctx.stylize('[Getter]', 'special');\n      }\n    } else {\n      if (propDescriptor.set) {\n        str = ctx.stylize('[Setter]', 'special');\n      }\n    }\n  }\n  if (visibleKeys.indexOf(key) < 0) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(value[key]) < 0) {\n      if (recurseTimes === null) {\n        str = formatValue(ctx, value[key], null);\n      } else {\n        str = formatValue(ctx, value[key], recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (typeof name === 'undefined') {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\nfunction reduceToSingleString(output, base, braces) {\n  var length = output.reduce(function(prev, cur) {\n    return prev + cur.length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\nfunction isTypedArray(ar) {\n  // Unfortunately there's no way to check if an object is a TypedArray\n  // We have to check if it's one of these types\n  return (typeof ar === 'object' && /\\w+Array]$/.test(objectToString(ar)));\n}\n\nfunction isArray(ar) {\n  return Array.isArray(ar) ||\n         (typeof ar === 'object' && objectToString(ar) === '[object Array]');\n}\n\nfunction isRegExp(re) {\n  return typeof re === 'object' && objectToString(re) === '[object RegExp]';\n}\n\nfunction isDate(d) {\n  return typeof d === 'object' && objectToString(d) === '[object Date]';\n}\n\nfunction isError(e) {\n  return typeof e === 'object' && objectToString(e) === '[object Error]';\n}\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n","/*!\n * Chai - flag utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Module dependencies\n */\n\nvar inspect = require('./inspect');\nvar config = require('../config');\n\n/**\n * ### .objDisplay(object)\n *\n * Determines if an object or an array matches\n * criteria to be inspected in-line for error\n * messages or should be truncated.\n *\n * @param {Mixed} javascript object to inspect\n * @name objDisplay\n * @namespace Utils\n * @api public\n */\n\nmodule.exports = function objDisplay(obj) {\n  var str = inspect(obj)\n    , type = Object.prototype.toString.call(obj);\n\n  if (config.truncateThreshold && str.length >= config.truncateThreshold) {\n    if (type === '[object Function]') {\n      return !obj.name || obj.name === ''\n        ? '[Function]'\n        : '[Function: ' + obj.name + ']';\n    } else if (type === '[object Array]') {\n      return '[ Array(' + obj.length + ') ]';\n    } else if (type === '[object Object]') {\n      var keys = Object.keys(obj)\n        , kstr = keys.length > 2\n          ? keys.splice(0, 2).join(', ') + ', ...'\n          : keys.join(', ');\n      return '{ Object (' + kstr + ') }';\n    } else {\n      return str;\n    }\n  } else {\n    return str;\n  }\n};\n","/*!\n * Chai - message composition utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Module dependencies\n */\n\nvar flag = require('./flag')\n  , getActual = require('./getActual')\n  , objDisplay = require('./objDisplay');\n\n/**\n * ### .getMessage(object, message, negateMessage)\n *\n * Construct the error message based on flags\n * and template tags. Template tags will return\n * a stringified inspection of the object referenced.\n *\n * Message template tags:\n * - `#{this}` current asserted object\n * - `#{act}` actual value\n * - `#{exp}` expected value\n *\n * @param {Object} object (constructed Assertion)\n * @param {Arguments} chai.Assertion.prototype.assert arguments\n * @namespace Utils\n * @name getMessage\n * @api public\n */\n\nmodule.exports = function getMessage(obj, args) {\n  var negate = flag(obj, 'negate')\n    , val = flag(obj, 'object')\n    , expected = args[3]\n    , actual = getActual(obj, args)\n    , msg = negate ? args[2] : args[1]\n    , flagMsg = flag(obj, 'message');\n\n  if(typeof msg === \"function\") msg = msg();\n  msg = msg || '';\n  msg = msg\n    .replace(/#\\{this\\}/g, function () { return objDisplay(val); })\n    .replace(/#\\{act\\}/g, function () { return objDisplay(actual); })\n    .replace(/#\\{exp\\}/g, function () { return objDisplay(expected); });\n\n  return flagMsg ? flagMsg + ': ' + msg : msg;\n};\n","/*!\n * Chai - transferFlags utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .transferFlags(assertion, object, includeAll = true)\n *\n * Transfer all the flags for `assertion` to `object`. If\n * `includeAll` is set to `false`, then the base Chai\n * assertion flags (namely `object`, `ssfi`, `lockSsfi`,\n * and `message`) will not be transferred.\n *\n *\n *     var newAssertion = new Assertion();\n *     utils.transferFlags(assertion, newAssertion);\n *\n *     var anotherAssertion = new Assertion(myObj);\n *     utils.transferFlags(assertion, anotherAssertion, false);\n *\n * @param {Assertion} assertion the assertion to transfer the flags from\n * @param {Object} object the object to transfer the flags to; usually a new assertion\n * @param {Boolean} includeAll\n * @namespace Utils\n * @name transferFlags\n * @api private\n */\n\nmodule.exports = function transferFlags(assertion, object, includeAll) {\n  var flags = assertion.__flags || (assertion.__flags = Object.create(null));\n\n  if (!object.__flags) {\n    object.__flags = Object.create(null);\n  }\n\n  includeAll = arguments.length === 3 ? includeAll : true;\n\n  for (var flag in flags) {\n    if (includeAll ||\n        (flag !== 'object' && flag !== 'ssfi' && flag !== 'lockSsfi' && flag != 'message')) {\n      object.__flags[flag] = flags[flag];\n    }\n  }\n};\n","'use strict';\n/* globals Symbol: false, Uint8Array: false, WeakMap: false */\n/*!\n * deep-eql\n * Copyright(c) 2013 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nvar type = require('type-detect');\nfunction FakeMap() {\n  this._key = 'chai/deep-eql__' + Math.random() + Date.now();\n}\n\nFakeMap.prototype = {\n  get: function getMap(key) {\n    return key[this._key];\n  },\n  set: function setMap(key, value) {\n    if (Object.isExtensible(key)) {\n      Object.defineProperty(key, this._key, {\n        value: value,\n        configurable: true,\n      });\n    }\n  },\n};\n\nvar MemoizeMap = typeof WeakMap === 'function' ? WeakMap : FakeMap;\n/*!\n * Check to see if the MemoizeMap has recorded a result of the two operands\n *\n * @param {Mixed} leftHandOperand\n * @param {Mixed} rightHandOperand\n * @param {MemoizeMap} memoizeMap\n * @returns {Boolean|null} result\n*/\nfunction memoizeCompare(leftHandOperand, rightHandOperand, memoizeMap) {\n  // Technically, WeakMap keys can *only* be objects, not primitives.\n  if (!memoizeMap || isPrimitive(leftHandOperand) || isPrimitive(rightHandOperand)) {\n    return null;\n  }\n  var leftHandMap = memoizeMap.get(leftHandOperand);\n  if (leftHandMap) {\n    var result = leftHandMap.get(rightHandOperand);\n    if (typeof result === 'boolean') {\n      return result;\n    }\n  }\n  return null;\n}\n\n/*!\n * Set the result of the equality into the MemoizeMap\n *\n * @param {Mixed} leftHandOperand\n * @param {Mixed} rightHandOperand\n * @param {MemoizeMap} memoizeMap\n * @param {Boolean} result\n*/\nfunction memoizeSet(leftHandOperand, rightHandOperand, memoizeMap, result) {\n  // Technically, WeakMap keys can *only* be objects, not primitives.\n  if (!memoizeMap || isPrimitive(leftHandOperand) || isPrimitive(rightHandOperand)) {\n    return;\n  }\n  var leftHandMap = memoizeMap.get(leftHandOperand);\n  if (leftHandMap) {\n    leftHandMap.set(rightHandOperand, result);\n  } else {\n    leftHandMap = new MemoizeMap();\n    leftHandMap.set(rightHandOperand, result);\n    memoizeMap.set(leftHandOperand, leftHandMap);\n  }\n}\n\n/*!\n * Primary Export\n */\n\nmodule.exports = deepEqual;\nmodule.exports.MemoizeMap = MemoizeMap;\n\n/**\n * Assert deeply nested sameValue equality between two objects of any type.\n *\n * @param {Mixed} leftHandOperand\n * @param {Mixed} rightHandOperand\n * @param {Object} [options] (optional) Additional options\n * @param {Array} [options.comparator] (optional) Override default algorithm, determining custom equality.\n * @param {Array} [options.memoize] (optional) Provide a custom memoization object which will cache the results of\n    complex objects for a speed boost. By passing `false` you can disable memoization, but this will cause circular\n    references to blow the stack.\n * @return {Boolean} equal match\n */\nfunction deepEqual(leftHandOperand, rightHandOperand, options) {\n  // If we have a comparator, we can't assume anything; so bail to its check first.\n  if (options && options.comparator) {\n    return extensiveDeepEqual(leftHandOperand, rightHandOperand, options);\n  }\n\n  var simpleResult = simpleEqual(leftHandOperand, rightHandOperand);\n  if (simpleResult !== null) {\n    return simpleResult;\n  }\n\n  // Deeper comparisons are pushed through to a larger function\n  return extensiveDeepEqual(leftHandOperand, rightHandOperand, options);\n}\n\n/**\n * Many comparisons can be canceled out early via simple equality or primitive checks.\n * @param {Mixed} leftHandOperand\n * @param {Mixed} rightHandOperand\n * @return {Boolean|null} equal match\n */\nfunction simpleEqual(leftHandOperand, rightHandOperand) {\n  // Equal references (except for Numbers) can be returned early\n  if (leftHandOperand === rightHandOperand) {\n    // Handle +-0 cases\n    return leftHandOperand !== 0 || 1 / leftHandOperand === 1 / rightHandOperand;\n  }\n\n  // handle NaN cases\n  if (\n    leftHandOperand !== leftHandOperand && // eslint-disable-line no-self-compare\n    rightHandOperand !== rightHandOperand // eslint-disable-line no-self-compare\n  ) {\n    return true;\n  }\n\n  // Anything that is not an 'object', i.e. symbols, functions, booleans, numbers,\n  // strings, and undefined, can be compared by reference.\n  if (isPrimitive(leftHandOperand) || isPrimitive(rightHandOperand)) {\n    // Easy out b/c it would have passed the first equality check\n    return false;\n  }\n  return null;\n}\n\n/*!\n * The main logic of the `deepEqual` function.\n *\n * @param {Mixed} leftHandOperand\n * @param {Mixed} rightHandOperand\n * @param {Object} [options] (optional) Additional options\n * @param {Array} [options.comparator] (optional) Override default algorithm, determining custom equality.\n * @param {Array} [options.memoize] (optional) Provide a custom memoization object which will cache the results of\n    complex objects for a speed boost. By passing `false` you can disable memoization, but this will cause circular\n    references to blow the stack.\n * @return {Boolean} equal match\n*/\nfunction extensiveDeepEqual(leftHandOperand, rightHandOperand, options) {\n  options = options || {};\n  options.memoize = options.memoize === false ? false : options.memoize || new MemoizeMap();\n  var comparator = options && options.comparator;\n\n  // Check if a memoized result exists.\n  var memoizeResultLeft = memoizeCompare(leftHandOperand, rightHandOperand, options.memoize);\n  if (memoizeResultLeft !== null) {\n    return memoizeResultLeft;\n  }\n  var memoizeResultRight = memoizeCompare(rightHandOperand, leftHandOperand, options.memoize);\n  if (memoizeResultRight !== null) {\n    return memoizeResultRight;\n  }\n\n  // If a comparator is present, use it.\n  if (comparator) {\n    var comparatorResult = comparator(leftHandOperand, rightHandOperand);\n    // Comparators may return null, in which case we want to go back to default behavior.\n    if (comparatorResult === false || comparatorResult === true) {\n      memoizeSet(leftHandOperand, rightHandOperand, options.memoize, comparatorResult);\n      return comparatorResult;\n    }\n    // To allow comparators to override *any* behavior, we ran them first. Since it didn't decide\n    // what to do, we need to make sure to return the basic tests first before we move on.\n    var simpleResult = simpleEqual(leftHandOperand, rightHandOperand);\n    if (simpleResult !== null) {\n      // Don't memoize this, it takes longer to set/retrieve than to just compare.\n      return simpleResult;\n    }\n  }\n\n  var leftHandType = type(leftHandOperand);\n  if (leftHandType !== type(rightHandOperand)) {\n    memoizeSet(leftHandOperand, rightHandOperand, options.memoize, false);\n    return false;\n  }\n\n  // Temporarily set the operands in the memoize object to prevent blowing the stack\n  memoizeSet(leftHandOperand, rightHandOperand, options.memoize, true);\n\n  var result = extensiveDeepEqualByType(leftHandOperand, rightHandOperand, leftHandType, options);\n  memoizeSet(leftHandOperand, rightHandOperand, options.memoize, result);\n  return result;\n}\n\nfunction extensiveDeepEqualByType(leftHandOperand, rightHandOperand, leftHandType, options) {\n  switch (leftHandType) {\n    case 'String':\n    case 'Number':\n    case 'Boolean':\n    case 'Date':\n      // If these types are their instance types (e.g. `new Number`) then re-deepEqual against their values\n      return deepEqual(leftHandOperand.valueOf(), rightHandOperand.valueOf());\n    case 'Promise':\n    case 'Symbol':\n    case 'function':\n    case 'WeakMap':\n    case 'WeakSet':\n    case 'Error':\n      return leftHandOperand === rightHandOperand;\n    case 'Arguments':\n    case 'Int8Array':\n    case 'Uint8Array':\n    case 'Uint8ClampedArray':\n    case 'Int16Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n    case 'Uint32Array':\n    case 'Float32Array':\n    case 'Float64Array':\n    case 'Array':\n      return iterableEqual(leftHandOperand, rightHandOperand, options);\n    case 'RegExp':\n      return regexpEqual(leftHandOperand, rightHandOperand);\n    case 'Generator':\n      return generatorEqual(leftHandOperand, rightHandOperand, options);\n    case 'DataView':\n      return iterableEqual(new Uint8Array(leftHandOperand.buffer), new Uint8Array(rightHandOperand.buffer), options);\n    case 'ArrayBuffer':\n      return iterableEqual(new Uint8Array(leftHandOperand), new Uint8Array(rightHandOperand), options);\n    case 'Set':\n      return entriesEqual(leftHandOperand, rightHandOperand, options);\n    case 'Map':\n      return entriesEqual(leftHandOperand, rightHandOperand, options);\n    default:\n      return objectEqual(leftHandOperand, rightHandOperand, options);\n  }\n}\n\n/*!\n * Compare two Regular Expressions for equality.\n *\n * @param {RegExp} leftHandOperand\n * @param {RegExp} rightHandOperand\n * @return {Boolean} result\n */\n\nfunction regexpEqual(leftHandOperand, rightHandOperand) {\n  return leftHandOperand.toString() === rightHandOperand.toString();\n}\n\n/*!\n * Compare two Sets/Maps for equality. Faster than other equality functions.\n *\n * @param {Set} leftHandOperand\n * @param {Set} rightHandOperand\n * @param {Object} [options] (Optional)\n * @return {Boolean} result\n */\n\nfunction entriesEqual(leftHandOperand, rightHandOperand, options) {\n  // IE11 doesn't support Set#entries or Set#@@iterator, so we need manually populate using Set#forEach\n  if (leftHandOperand.size !== rightHandOperand.size) {\n    return false;\n  }\n  if (leftHandOperand.size === 0) {\n    return true;\n  }\n  var leftHandItems = [];\n  var rightHandItems = [];\n  leftHandOperand.forEach(function gatherEntries(key, value) {\n    leftHandItems.push([ key, value ]);\n  });\n  rightHandOperand.forEach(function gatherEntries(key, value) {\n    rightHandItems.push([ key, value ]);\n  });\n  return iterableEqual(leftHandItems.sort(), rightHandItems.sort(), options);\n}\n\n/*!\n * Simple equality for flat iterable objects such as Arrays, TypedArrays or Node.js buffers.\n *\n * @param {Iterable} leftHandOperand\n * @param {Iterable} rightHandOperand\n * @param {Object} [options] (Optional)\n * @return {Boolean} result\n */\n\nfunction iterableEqual(leftHandOperand, rightHandOperand, options) {\n  var length = leftHandOperand.length;\n  if (length !== rightHandOperand.length) {\n    return false;\n  }\n  if (length === 0) {\n    return true;\n  }\n  var index = -1;\n  while (++index < length) {\n    if (deepEqual(leftHandOperand[index], rightHandOperand[index], options) === false) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/*!\n * Simple equality for generator objects such as those returned by generator functions.\n *\n * @param {Iterable} leftHandOperand\n * @param {Iterable} rightHandOperand\n * @param {Object} [options] (Optional)\n * @return {Boolean} result\n */\n\nfunction generatorEqual(leftHandOperand, rightHandOperand, options) {\n  return iterableEqual(getGeneratorEntries(leftHandOperand), getGeneratorEntries(rightHandOperand), options);\n}\n\n/*!\n * Determine if the given object has an @@iterator function.\n *\n * @param {Object} target\n * @return {Boolean} `true` if the object has an @@iterator function.\n */\nfunction hasIteratorFunction(target) {\n  return typeof Symbol !== 'undefined' &&\n    typeof target === 'object' &&\n    typeof Symbol.iterator !== 'undefined' &&\n    typeof target[Symbol.iterator] === 'function';\n}\n\n/*!\n * Gets all iterator entries from the given Object. If the Object has no @@iterator function, returns an empty array.\n * This will consume the iterator - which could have side effects depending on the @@iterator implementation.\n *\n * @param {Object} target\n * @returns {Array} an array of entries from the @@iterator function\n */\nfunction getIteratorEntries(target) {\n  if (hasIteratorFunction(target)) {\n    try {\n      return getGeneratorEntries(target[Symbol.iterator]());\n    } catch (iteratorError) {\n      return [];\n    }\n  }\n  return [];\n}\n\n/*!\n * Gets all entries from a Generator. This will consume the generator - which could have side effects.\n *\n * @param {Generator} target\n * @returns {Array} an array of entries from the Generator.\n */\nfunction getGeneratorEntries(generator) {\n  var generatorResult = generator.next();\n  var accumulator = [ generatorResult.value ];\n  while (generatorResult.done === false) {\n    generatorResult = generator.next();\n    accumulator.push(generatorResult.value);\n  }\n  return accumulator;\n}\n\n/*!\n * Gets all own and inherited enumerable keys from a target.\n *\n * @param {Object} target\n * @returns {Array} an array of own and inherited enumerable keys from the target.\n */\nfunction getEnumerableKeys(target) {\n  var keys = [];\n  for (var key in target) {\n    keys.push(key);\n  }\n  return keys;\n}\n\n/*!\n * Determines if two objects have matching values, given a set of keys. Defers to deepEqual for the equality check of\n * each key. If any value of the given key is not equal, the function will return false (early).\n *\n * @param {Mixed} leftHandOperand\n * @param {Mixed} rightHandOperand\n * @param {Array} keys An array of keys to compare the values of leftHandOperand and rightHandOperand against\n * @param {Object} [options] (Optional)\n * @return {Boolean} result\n */\nfunction keysEqual(leftHandOperand, rightHandOperand, keys, options) {\n  var length = keys.length;\n  if (length === 0) {\n    return true;\n  }\n  for (var i = 0; i < length; i += 1) {\n    if (deepEqual(leftHandOperand[keys[i]], rightHandOperand[keys[i]], options) === false) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/*!\n * Recursively check the equality of two Objects. Once basic sameness has been established it will defer to `deepEqual`\n * for each enumerable key in the object.\n *\n * @param {Mixed} leftHandOperand\n * @param {Mixed} rightHandOperand\n * @param {Object} [options] (Optional)\n * @return {Boolean} result\n */\n\nfunction objectEqual(leftHandOperand, rightHandOperand, options) {\n  var leftHandKeys = getEnumerableKeys(leftHandOperand);\n  var rightHandKeys = getEnumerableKeys(rightHandOperand);\n  if (leftHandKeys.length && leftHandKeys.length === rightHandKeys.length) {\n    leftHandKeys.sort();\n    rightHandKeys.sort();\n    if (iterableEqual(leftHandKeys, rightHandKeys) === false) {\n      return false;\n    }\n    return keysEqual(leftHandOperand, rightHandOperand, leftHandKeys, options);\n  }\n\n  var leftHandEntries = getIteratorEntries(leftHandOperand);\n  var rightHandEntries = getIteratorEntries(rightHandOperand);\n  if (leftHandEntries.length && leftHandEntries.length === rightHandEntries.length) {\n    leftHandEntries.sort();\n    rightHandEntries.sort();\n    return iterableEqual(leftHandEntries, rightHandEntries, options);\n  }\n\n  if (leftHandKeys.length === 0 &&\n      leftHandEntries.length === 0 &&\n      rightHandKeys.length === 0 &&\n      rightHandEntries.length === 0) {\n    return true;\n  }\n\n  return false;\n}\n\n/*!\n * Returns true if the argument is a primitive.\n *\n * This intentionally returns true for all objects that can be compared by reference,\n * including functions and symbols.\n *\n * @param {Mixed} value\n * @return {Boolean} result\n */\nfunction isPrimitive(value) {\n  return value === null || typeof value !== 'object';\n}\n","var config = require('../config');\n\n/*!\n * Chai - isProxyEnabled helper\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .isProxyEnabled()\n *\n * Helper function to check if Chai's proxy protection feature is enabled. If\n * proxies are unsupported or disabled via the user's Chai config, then return\n * false. Otherwise, return true.\n *\n * @namespace Utils\n * @name isProxyEnabled\n */\n\nmodule.exports = function isProxyEnabled() {\n  return config.useProxy &&\n    typeof Proxy !== 'undefined' &&\n    typeof Reflect !== 'undefined';\n};\n","/*!\n * Chai - addProperty utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nvar chai = require('../../chai');\nvar flag = require('./flag');\nvar isProxyEnabled = require('./isProxyEnabled');\nvar transferFlags = require('./transferFlags');\n\n/**\n * ### .addProperty(ctx, name, getter)\n *\n * Adds a property to the prototype of an object.\n *\n *     utils.addProperty(chai.Assertion.prototype, 'foo', function () {\n *       var obj = utils.flag(this, 'object');\n *       new chai.Assertion(obj).to.be.instanceof(Foo);\n *     });\n *\n * Can also be accessed directly from `chai.Assertion`.\n *\n *     chai.Assertion.addProperty('foo', fn);\n *\n * Then can be used as any other assertion.\n *\n *     expect(myFoo).to.be.foo;\n *\n * @param {Object} ctx object to which the property is added\n * @param {String} name of property to add\n * @param {Function} getter function to be used for name\n * @namespace Utils\n * @name addProperty\n * @api public\n */\n\nmodule.exports = function addProperty(ctx, name, getter) {\n  getter = getter === undefined ? function () {} : getter;\n\n  Object.defineProperty(ctx, name,\n    { get: function propertyGetter() {\n        // Setting the `ssfi` flag to `propertyGetter` causes this function to\n        // be the starting point for removing implementation frames from the\n        // stack trace of a failed assertion.\n        //\n        // However, we only want to use this function as the starting point if\n        // the `lockSsfi` flag isn't set and proxy protection is disabled.\n        //\n        // If the `lockSsfi` flag is set, then either this assertion has been\n        // overwritten by another assertion, or this assertion is being invoked\n        // from inside of another assertion. In the first case, the `ssfi` flag\n        // has already been set by the overwriting assertion. In the second\n        // case, the `ssfi` flag has already been set by the outer assertion.\n        //\n        // If proxy protection is enabled, then the `ssfi` flag has already been\n        // set by the proxy getter.\n        if (!isProxyEnabled() && !flag(this, 'lockSsfi')) {\n          flag(this, 'ssfi', propertyGetter);\n        }\n\n        var result = getter.call(this);\n        if (result !== undefined)\n          return result;\n\n        var newAssertion = new chai.Assertion();\n        transferFlags(this, newAssertion);\n        return newAssertion;\n      }\n    , configurable: true\n  });\n};\n","var fnLengthDesc = Object.getOwnPropertyDescriptor(function () {}, 'length');\n\n/*!\n * Chai - addLengthGuard utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .addLengthGuard(fn, assertionName, isChainable)\n *\n * Define `length` as a getter on the given uninvoked method assertion. The\n * getter acts as a guard against chaining `length` directly off of an uninvoked\n * method assertion, which is a problem because it references `function`'s\n * built-in `length` property instead of Chai's `length` assertion. When the\n * getter catches the user making this mistake, it throws an error with a\n * helpful message.\n *\n * There are two ways in which this mistake can be made. The first way is by\n * chaining the `length` assertion directly off of an uninvoked chainable\n * method. In this case, Chai suggests that the user use `lengthOf` instead. The\n * second way is by chaining the `length` assertion directly off of an uninvoked\n * non-chainable method. Non-chainable methods must be invoked prior to\n * chaining. In this case, Chai suggests that the user consult the docs for the\n * given assertion.\n *\n * If the `length` property of functions is unconfigurable, then return `fn`\n * without modification.\n *\n * Note that in ES6, the function's `length` property is configurable, so once\n * support for legacy environments is dropped, Chai's `length` property can\n * replace the built-in function's `length` property, and this length guard will\n * no longer be necessary. In the mean time, maintaining consistency across all\n * environments is the priority.\n *\n * @param {Function} fn\n * @param {String} assertionName\n * @param {Boolean} isChainable\n * @namespace Utils\n * @name addLengthGuard\n */\n\nmodule.exports = function addLengthGuard (fn, assertionName, isChainable) {\n  if (!fnLengthDesc.configurable) return fn;\n\n  Object.defineProperty(fn, 'length', {\n    get: function () {\n      if (isChainable) {\n        throw Error('Invalid Chai property: ' + assertionName + '.length. Due' +\n          ' to a compatibility issue, \"length\" cannot directly follow \"' +\n          assertionName + '\". Use \"' + assertionName + '.lengthOf\" instead.');\n      }\n\n      throw Error('Invalid Chai property: ' + assertionName + '.length. See' +\n        ' docs for proper usage of \"' + assertionName + '\".');\n    }\n  });\n\n  return fn;\n};\n","var config = require('../config');\nvar flag = require('./flag');\nvar getProperties = require('./getProperties');\nvar isProxyEnabled = require('./isProxyEnabled');\n\n/*!\n * Chai - proxify utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .proxify(object)\n *\n * Return a proxy of given object that throws an error when a non-existent\n * property is read. By default, the root cause is assumed to be a misspelled\n * property, and thus an attempt is made to offer a reasonable suggestion from\n * the list of existing properties. However, if a nonChainableMethodName is\n * provided, then the root cause is instead a failure to invoke a non-chainable\n * method prior to reading the non-existent property.\n *\n * If proxies are unsupported or disabled via the user's Chai config, then\n * return object without modification.\n *\n * @param {Object} obj\n * @param {String} nonChainableMethodName\n * @namespace Utils\n * @name proxify\n */\n\nvar builtins = ['__flags', '__methods', '_obj', 'assert'];\n\nmodule.exports = function proxify(obj, nonChainableMethodName) {\n  if (!isProxyEnabled()) return obj;\n\n  return new Proxy(obj, {\n    get: function proxyGetter(target, property) {\n      // This check is here because we should not throw errors on Symbol properties\n      // such as `Symbol.toStringTag`.\n      // The values for which an error should be thrown can be configured using\n      // the `config.proxyExcludedKeys` setting.\n      if (typeof property === 'string' &&\n          config.proxyExcludedKeys.indexOf(property) === -1 &&\n          !Reflect.has(target, property)) {\n        // Special message for invalid property access of non-chainable methods.\n        if (nonChainableMethodName) {\n          throw Error('Invalid Chai property: ' + nonChainableMethodName + '.' +\n            property + '. See docs for proper usage of \"' +\n            nonChainableMethodName + '\".');\n        }\n\n        // If the property is reasonably close to an existing Chai property,\n        // suggest that property to the user. Only suggest properties with a\n        // distance less than 4.\n        var suggestion = null;\n        var suggestionDistance = 4;\n        getProperties(target).forEach(function(prop) {\n          if (\n            !Object.prototype.hasOwnProperty(prop) &&\n            builtins.indexOf(prop) === -1\n          ) {\n            var dist = stringDistanceCapped(\n              property,\n              prop,\n              suggestionDistance\n            );\n            if (dist < suggestionDistance) {\n              suggestion = prop;\n              suggestionDistance = dist;\n            }\n          }\n        });\n\n        if (suggestion !== null) {\n          throw Error('Invalid Chai property: ' + property +\n            '. Did you mean \"' + suggestion + '\"?');\n        } else {\n          throw Error('Invalid Chai property: ' + property);\n        }\n      }\n\n      // Use this proxy getter as the starting point for removing implementation\n      // frames from the stack trace of a failed assertion. For property\n      // assertions, this prevents the proxy getter from showing up in the stack\n      // trace since it's invoked before the property getter. For method and\n      // chainable method assertions, this flag will end up getting changed to\n      // the method wrapper, which is good since this frame will no longer be in\n      // the stack once the method is invoked. Note that Chai builtin assertion\n      // properties such as `__flags` are skipped since this is only meant to\n      // capture the starting point of an assertion. This step is also skipped\n      // if the `lockSsfi` flag is set, thus indicating that this assertion is\n      // being called from within another assertion. In that case, the `ssfi`\n      // flag is already set to the outer assertion's starting point.\n      if (builtins.indexOf(property) === -1 && !flag(target, 'lockSsfi')) {\n        flag(target, 'ssfi', proxyGetter);\n      }\n\n      return Reflect.get(target, property);\n    }\n  });\n};\n\n/**\n * # stringDistanceCapped(strA, strB, cap)\n * Return the Levenshtein distance between two strings, but no more than cap.\n * @param {string} strA\n * @param {string} strB\n * @param {number} number\n * @return {number} min(string distance between strA and strB, cap)\n * @api private\n */\n\nfunction stringDistanceCapped(strA, strB, cap) {\n  if (Math.abs(strA.length - strB.length) >= cap) {\n    return cap;\n  }\n\n  var memo = [];\n  // `memo` is a two-dimensional array containing distances.\n  // memo[i][j] is the distance between strA.slice(0, i) and\n  // strB.slice(0, j).\n  for (var i = 0; i <= strA.length; i++) {\n    memo[i] = Array(strB.length + 1).fill(0);\n    memo[i][0] = i;\n  }\n  for (var j = 0; j < strB.length; j++) {\n    memo[0][j] = j;\n  }\n\n  for (var i = 1; i <= strA.length; i++) {\n    var ch = strA.charCodeAt(i - 1);\n    for (var j = 1; j <= strB.length; j++) {\n      if (Math.abs(i - j) >= cap) {\n        memo[i][j] = cap;\n        continue;\n      }\n      memo[i][j] = Math.min(\n        memo[i - 1][j] + 1,\n        memo[i][j - 1] + 1,\n        memo[i - 1][j - 1] +\n          (ch === strB.charCodeAt(j - 1) ? 0 : 1)\n      );\n    }\n  }\n\n  return memo[strA.length][strB.length];\n}\n","/*!\n * Chai - addMethod utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nvar addLengthGuard = require('./addLengthGuard');\nvar chai = require('../../chai');\nvar flag = require('./flag');\nvar proxify = require('./proxify');\nvar transferFlags = require('./transferFlags');\n\n/**\n * ### .addMethod(ctx, name, method)\n *\n * Adds a method to the prototype of an object.\n *\n *     utils.addMethod(chai.Assertion.prototype, 'foo', function (str) {\n *       var obj = utils.flag(this, 'object');\n *       new chai.Assertion(obj).to.be.equal(str);\n *     });\n *\n * Can also be accessed directly from `chai.Assertion`.\n *\n *     chai.Assertion.addMethod('foo', fn);\n *\n * Then can be used as any other assertion.\n *\n *     expect(fooStr).to.be.foo('bar');\n *\n * @param {Object} ctx object to which the method is added\n * @param {String} name of method to add\n * @param {Function} method function to be used for name\n * @namespace Utils\n * @name addMethod\n * @api public\n */\n\nmodule.exports = function addMethod(ctx, name, method) {\n  var methodWrapper = function () {\n    // Setting the `ssfi` flag to `methodWrapper` causes this function to be the\n    // starting point for removing implementation frames from the stack trace of\n    // a failed assertion.\n    //\n    // However, we only want to use this function as the starting point if the\n    // `lockSsfi` flag isn't set.\n    //\n    // If the `lockSsfi` flag is set, then either this assertion has been\n    // overwritten by another assertion, or this assertion is being invoked from\n    // inside of another assertion. In the first case, the `ssfi` flag has\n    // already been set by the overwriting assertion. In the second case, the\n    // `ssfi` flag has already been set by the outer assertion.\n    if (!flag(this, 'lockSsfi')) {\n      flag(this, 'ssfi', methodWrapper);\n    }\n\n    var result = method.apply(this, arguments);\n    if (result !== undefined)\n      return result;\n\n    var newAssertion = new chai.Assertion();\n    transferFlags(this, newAssertion);\n    return newAssertion;\n  };\n\n  addLengthGuard(methodWrapper, name, false);\n  ctx[name] = proxify(methodWrapper, name);\n};\n","/*!\n * Chai - overwriteProperty utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nvar chai = require('../../chai');\nvar flag = require('./flag');\nvar isProxyEnabled = require('./isProxyEnabled');\nvar transferFlags = require('./transferFlags');\n\n/**\n * ### .overwriteProperty(ctx, name, fn)\n *\n * Overwrites an already existing property getter and provides\n * access to previous value. Must return function to use as getter.\n *\n *     utils.overwriteProperty(chai.Assertion.prototype, 'ok', function (_super) {\n *       return function () {\n *         var obj = utils.flag(this, 'object');\n *         if (obj instanceof Foo) {\n *           new chai.Assertion(obj.name).to.equal('bar');\n *         } else {\n *           _super.call(this);\n *         }\n *       }\n *     });\n *\n *\n * Can also be accessed directly from `chai.Assertion`.\n *\n *     chai.Assertion.overwriteProperty('foo', fn);\n *\n * Then can be used as any other assertion.\n *\n *     expect(myFoo).to.be.ok;\n *\n * @param {Object} ctx object whose property is to be overwritten\n * @param {String} name of property to overwrite\n * @param {Function} getter function that returns a getter function to be used for name\n * @namespace Utils\n * @name overwriteProperty\n * @api public\n */\n\nmodule.exports = function overwriteProperty(ctx, name, getter) {\n  var _get = Object.getOwnPropertyDescriptor(ctx, name)\n    , _super = function () {};\n\n  if (_get && 'function' === typeof _get.get)\n    _super = _get.get\n\n  Object.defineProperty(ctx, name,\n    { get: function overwritingPropertyGetter() {\n        // Setting the `ssfi` flag to `overwritingPropertyGetter` causes this\n        // function to be the starting point for removing implementation frames\n        // from the stack trace of a failed assertion.\n        //\n        // However, we only want to use this function as the starting point if\n        // the `lockSsfi` flag isn't set and proxy protection is disabled.\n        //\n        // If the `lockSsfi` flag is set, then either this assertion has been\n        // overwritten by another assertion, or this assertion is being invoked\n        // from inside of another assertion. In the first case, the `ssfi` flag\n        // has already been set by the overwriting assertion. In the second\n        // case, the `ssfi` flag has already been set by the outer assertion.\n        //\n        // If proxy protection is enabled, then the `ssfi` flag has already been\n        // set by the proxy getter.\n        if (!isProxyEnabled() && !flag(this, 'lockSsfi')) {\n          flag(this, 'ssfi', overwritingPropertyGetter);\n        }\n\n        // Setting the `lockSsfi` flag to `true` prevents the overwritten\n        // assertion from changing the `ssfi` flag. By this point, the `ssfi`\n        // flag is already set to the correct starting point for this assertion.\n        var origLockSsfi = flag(this, 'lockSsfi');\n        flag(this, 'lockSsfi', true);\n        var result = getter(_super).call(this);\n        flag(this, 'lockSsfi', origLockSsfi);\n\n        if (result !== undefined) {\n          return result;\n        }\n\n        var newAssertion = new chai.Assertion();\n        transferFlags(this, newAssertion);\n        return newAssertion;\n      }\n    , configurable: true\n  });\n};\n","/*!\n * Chai - overwriteMethod utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nvar addLengthGuard = require('./addLengthGuard');\nvar chai = require('../../chai');\nvar flag = require('./flag');\nvar proxify = require('./proxify');\nvar transferFlags = require('./transferFlags');\n\n/**\n * ### .overwriteMethod(ctx, name, fn)\n *\n * Overwrites an already existing method and provides\n * access to previous function. Must return function\n * to be used for name.\n *\n *     utils.overwriteMethod(chai.Assertion.prototype, 'equal', function (_super) {\n *       return function (str) {\n *         var obj = utils.flag(this, 'object');\n *         if (obj instanceof Foo) {\n *           new chai.Assertion(obj.value).to.equal(str);\n *         } else {\n *           _super.apply(this, arguments);\n *         }\n *       }\n *     });\n *\n * Can also be accessed directly from `chai.Assertion`.\n *\n *     chai.Assertion.overwriteMethod('foo', fn);\n *\n * Then can be used as any other assertion.\n *\n *     expect(myFoo).to.equal('bar');\n *\n * @param {Object} ctx object whose method is to be overwritten\n * @param {String} name of method to overwrite\n * @param {Function} method function that returns a function to be used for name\n * @namespace Utils\n * @name overwriteMethod\n * @api public\n */\n\nmodule.exports = function overwriteMethod(ctx, name, method) {\n  var _method = ctx[name]\n    , _super = function () {\n      throw new Error(name + ' is not a function');\n    };\n\n  if (_method && 'function' === typeof _method)\n    _super = _method;\n\n  var overwritingMethodWrapper = function () {\n    // Setting the `ssfi` flag to `overwritingMethodWrapper` causes this\n    // function to be the starting point for removing implementation frames from\n    // the stack trace of a failed assertion.\n    //\n    // However, we only want to use this function as the starting point if the\n    // `lockSsfi` flag isn't set.\n    //\n    // If the `lockSsfi` flag is set, then either this assertion has been\n    // overwritten by another assertion, or this assertion is being invoked from\n    // inside of another assertion. In the first case, the `ssfi` flag has\n    // already been set by the overwriting assertion. In the second case, the\n    // `ssfi` flag has already been set by the outer assertion.\n    if (!flag(this, 'lockSsfi')) {\n      flag(this, 'ssfi', overwritingMethodWrapper);\n    }\n\n    // Setting the `lockSsfi` flag to `true` prevents the overwritten assertion\n    // from changing the `ssfi` flag. By this point, the `ssfi` flag is already\n    // set to the correct starting point for this assertion.\n    var origLockSsfi = flag(this, 'lockSsfi');\n    flag(this, 'lockSsfi', true);\n    var result = method(_super).apply(this, arguments);\n    flag(this, 'lockSsfi', origLockSsfi);\n\n    if (result !== undefined) {\n      return result;\n    }\n\n    var newAssertion = new chai.Assertion();\n    transferFlags(this, newAssertion);\n    return newAssertion;\n  }\n\n  addLengthGuard(overwritingMethodWrapper, name, false);\n  ctx[name] = proxify(overwritingMethodWrapper, name);\n};\n","/*!\n * Chai - addChainingMethod utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Module dependencies\n */\n\nvar addLengthGuard = require('./addLengthGuard');\nvar chai = require('../../chai');\nvar flag = require('./flag');\nvar proxify = require('./proxify');\nvar transferFlags = require('./transferFlags');\n\n/*!\n * Module variables\n */\n\n// Check whether `Object.setPrototypeOf` is supported\nvar canSetPrototype = typeof Object.setPrototypeOf === 'function';\n\n// Without `Object.setPrototypeOf` support, this module will need to add properties to a function.\n// However, some of functions' own props are not configurable and should be skipped.\nvar testFn = function() {};\nvar excludeNames = Object.getOwnPropertyNames(testFn).filter(function(name) {\n  var propDesc = Object.getOwnPropertyDescriptor(testFn, name);\n\n  // Note: PhantomJS 1.x includes `callee` as one of `testFn`'s own properties,\n  // but then returns `undefined` as the property descriptor for `callee`. As a\n  // workaround, we perform an otherwise unnecessary type-check for `propDesc`,\n  // and then filter it out if it's not an object as it should be.\n  if (typeof propDesc !== 'object')\n    return true;\n\n  return !propDesc.configurable;\n});\n\n// Cache `Function` properties\nvar call  = Function.prototype.call,\n    apply = Function.prototype.apply;\n\n/**\n * ### .addChainableMethod(ctx, name, method, chainingBehavior)\n *\n * Adds a method to an object, such that the method can also be chained.\n *\n *     utils.addChainableMethod(chai.Assertion.prototype, 'foo', function (str) {\n *       var obj = utils.flag(this, 'object');\n *       new chai.Assertion(obj).to.be.equal(str);\n *     });\n *\n * Can also be accessed directly from `chai.Assertion`.\n *\n *     chai.Assertion.addChainableMethod('foo', fn, chainingBehavior);\n *\n * The result can then be used as both a method assertion, executing both `method` and\n * `chainingBehavior`, or as a language chain, which only executes `chainingBehavior`.\n *\n *     expect(fooStr).to.be.foo('bar');\n *     expect(fooStr).to.be.foo.equal('foo');\n *\n * @param {Object} ctx object to which the method is added\n * @param {String} name of method to add\n * @param {Function} method function to be used for `name`, when called\n * @param {Function} chainingBehavior function to be called every time the property is accessed\n * @namespace Utils\n * @name addChainableMethod\n * @api public\n */\n\nmodule.exports = function addChainableMethod(ctx, name, method, chainingBehavior) {\n  if (typeof chainingBehavior !== 'function') {\n    chainingBehavior = function () { };\n  }\n\n  var chainableBehavior = {\n      method: method\n    , chainingBehavior: chainingBehavior\n  };\n\n  // save the methods so we can overwrite them later, if we need to.\n  if (!ctx.__methods) {\n    ctx.__methods = {};\n  }\n  ctx.__methods[name] = chainableBehavior;\n\n  Object.defineProperty(ctx, name,\n    { get: function chainableMethodGetter() {\n        chainableBehavior.chainingBehavior.call(this);\n\n        var chainableMethodWrapper = function () {\n          // Setting the `ssfi` flag to `chainableMethodWrapper` causes this\n          // function to be the starting point for removing implementation\n          // frames from the stack trace of a failed assertion.\n          //\n          // However, we only want to use this function as the starting point if\n          // the `lockSsfi` flag isn't set.\n          //\n          // If the `lockSsfi` flag is set, then this assertion is being\n          // invoked from inside of another assertion. In this case, the `ssfi`\n          // flag has already been set by the outer assertion.\n          //\n          // Note that overwriting a chainable method merely replaces the saved\n          // methods in `ctx.__methods` instead of completely replacing the\n          // overwritten assertion. Therefore, an overwriting assertion won't\n          // set the `ssfi` or `lockSsfi` flags.\n          if (!flag(this, 'lockSsfi')) {\n            flag(this, 'ssfi', chainableMethodWrapper);\n          }\n\n          var result = chainableBehavior.method.apply(this, arguments);\n          if (result !== undefined) {\n            return result;\n          }\n\n          var newAssertion = new chai.Assertion();\n          transferFlags(this, newAssertion);\n          return newAssertion;\n        };\n\n        addLengthGuard(chainableMethodWrapper, name, true);\n\n        // Use `Object.setPrototypeOf` if available\n        if (canSetPrototype) {\n          // Inherit all properties from the object by replacing the `Function` prototype\n          var prototype = Object.create(this);\n          // Restore the `call` and `apply` methods from `Function`\n          prototype.call = call;\n          prototype.apply = apply;\n          Object.setPrototypeOf(chainableMethodWrapper, prototype);\n        }\n        // Otherwise, redefine all properties (slow!)\n        else {\n          var asserterNames = Object.getOwnPropertyNames(ctx);\n          asserterNames.forEach(function (asserterName) {\n            if (excludeNames.indexOf(asserterName) !== -1) {\n              return;\n            }\n\n            var pd = Object.getOwnPropertyDescriptor(ctx, asserterName);\n            Object.defineProperty(chainableMethodWrapper, asserterName, pd);\n          });\n        }\n\n        transferFlags(this, chainableMethodWrapper);\n        return proxify(chainableMethodWrapper);\n      }\n    , configurable: true\n  });\n};\n","/*!\n * Chai - overwriteChainableMethod utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nvar chai = require('../../chai');\nvar transferFlags = require('./transferFlags');\n\n/**\n * ### .overwriteChainableMethod(ctx, name, method, chainingBehavior)\n *\n * Overwrites an already existing chainable method\n * and provides access to the previous function or\n * property.  Must return functions to be used for\n * name.\n *\n *     utils.overwriteChainableMethod(chai.Assertion.prototype, 'lengthOf',\n *       function (_super) {\n *       }\n *     , function (_super) {\n *       }\n *     );\n *\n * Can also be accessed directly from `chai.Assertion`.\n *\n *     chai.Assertion.overwriteChainableMethod('foo', fn, fn);\n *\n * Then can be used as any other assertion.\n *\n *     expect(myFoo).to.have.lengthOf(3);\n *     expect(myFoo).to.have.lengthOf.above(3);\n *\n * @param {Object} ctx object whose method / property is to be overwritten\n * @param {String} name of method / property to overwrite\n * @param {Function} method function that returns a function to be used for name\n * @param {Function} chainingBehavior function that returns a function to be used for property\n * @namespace Utils\n * @name overwriteChainableMethod\n * @api public\n */\n\nmodule.exports = function overwriteChainableMethod(ctx, name, method, chainingBehavior) {\n  var chainableBehavior = ctx.__methods[name];\n\n  var _chainingBehavior = chainableBehavior.chainingBehavior;\n  chainableBehavior.chainingBehavior = function overwritingChainableMethodGetter() {\n    var result = chainingBehavior(_chainingBehavior).call(this);\n    if (result !== undefined) {\n      return result;\n    }\n\n    var newAssertion = new chai.Assertion();\n    transferFlags(this, newAssertion);\n    return newAssertion;\n  };\n\n  var _method = chainableBehavior.method;\n  chainableBehavior.method = function overwritingChainableMethodWrapper() {\n    var result = method(_method).apply(this, arguments);\n    if (result !== undefined) {\n      return result;\n    }\n\n    var newAssertion = new chai.Assertion();\n    transferFlags(this, newAssertion);\n    return newAssertion;\n  };\n};\n","/*!\n * Chai - compareByInspect utility\n * Copyright(c) 2011-2016 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Module dependencies\n */\n\nvar inspect = require('./inspect');\n\n/**\n * ### .compareByInspect(mixed, mixed)\n *\n * To be used as a compareFunction with Array.prototype.sort. Compares elements\n * using inspect instead of default behavior of using toString so that Symbols\n * and objects with irregular/missing toString can still be sorted without a\n * TypeError.\n *\n * @param {Mixed} first element to compare\n * @param {Mixed} second element to compare\n * @returns {Number} -1 if 'a' should come before 'b'; otherwise 1\n * @name compareByInspect\n * @namespace Utils\n * @api public\n */\n\nmodule.exports = function compareByInspect(a, b) {\n  return inspect(a) < inspect(b) ? -1 : 1;\n};\n","/*!\n * Chai - getOwnEnumerablePropertySymbols utility\n * Copyright(c) 2011-2016 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .getOwnEnumerablePropertySymbols(object)\n *\n * This allows the retrieval of directly-owned enumerable property symbols of an\n * object. This function is necessary because Object.getOwnPropertySymbols\n * returns both enumerable and non-enumerable property symbols.\n *\n * @param {Object} object\n * @returns {Array}\n * @namespace Utils\n * @name getOwnEnumerablePropertySymbols\n * @api public\n */\n\nmodule.exports = function getOwnEnumerablePropertySymbols(obj) {\n  if (typeof Object.getOwnPropertySymbols !== 'function') return [];\n\n  return Object.getOwnPropertySymbols(obj).filter(function (sym) {\n    return Object.getOwnPropertyDescriptor(obj, sym).enumerable;\n  });\n};\n","/*!\n * Chai - getOwnEnumerableProperties utility\n * Copyright(c) 2011-2016 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Module dependencies\n */\n\nvar getOwnEnumerablePropertySymbols = require('./getOwnEnumerablePropertySymbols');\n\n/**\n * ### .getOwnEnumerableProperties(object)\n *\n * This allows the retrieval of directly-owned enumerable property names and\n * symbols of an object. This function is necessary because Object.keys only\n * returns enumerable property names, not enumerable property symbols.\n *\n * @param {Object} object\n * @returns {Array}\n * @namespace Utils\n * @name getOwnEnumerableProperties\n * @api public\n */\n\nmodule.exports = function getOwnEnumerableProperties(obj) {\n  return Object.keys(obj).concat(getOwnEnumerablePropertySymbols(obj));\n};\n","'use strict';\n\n/* !\n * Chai - checkError utility\n * Copyright(c) 2012-2016 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .checkError\n *\n * Checks that an error conforms to a given set of criteria and/or retrieves information about it.\n *\n * @api public\n */\n\n/**\n * ### .compatibleInstance(thrown, errorLike)\n *\n * Checks if two instances are compatible (strict equal).\n * Returns false if errorLike is not an instance of Error, because instances\n * can only be compatible if they're both error instances.\n *\n * @name compatibleInstance\n * @param {Error} thrown error\n * @param {Error|ErrorConstructor} errorLike object to compare against\n * @namespace Utils\n * @api public\n */\n\nfunction compatibleInstance(thrown, errorLike) {\n  return errorLike instanceof Error && thrown === errorLike;\n}\n\n/**\n * ### .compatibleConstructor(thrown, errorLike)\n *\n * Checks if two constructors are compatible.\n * This function can receive either an error constructor or\n * an error instance as the `errorLike` argument.\n * Constructors are compatible if they're the same or if one is\n * an instance of another.\n *\n * @name compatibleConstructor\n * @param {Error} thrown error\n * @param {Error|ErrorConstructor} errorLike object to compare against\n * @namespace Utils\n * @api public\n */\n\nfunction compatibleConstructor(thrown, errorLike) {\n  if (errorLike instanceof Error) {\n    // If `errorLike` is an instance of any error we compare their constructors\n    return thrown.constructor === errorLike.constructor || thrown instanceof errorLike.constructor;\n  } else if (errorLike.prototype instanceof Error || errorLike === Error) {\n    // If `errorLike` is a constructor that inherits from Error, we compare `thrown` to `errorLike` directly\n    return thrown.constructor === errorLike || thrown instanceof errorLike;\n  }\n\n  return false;\n}\n\n/**\n * ### .compatibleMessage(thrown, errMatcher)\n *\n * Checks if an error's message is compatible with a matcher (String or RegExp).\n * If the message contains the String or passes the RegExp test,\n * it is considered compatible.\n *\n * @name compatibleMessage\n * @param {Error} thrown error\n * @param {String|RegExp} errMatcher to look for into the message\n * @namespace Utils\n * @api public\n */\n\nfunction compatibleMessage(thrown, errMatcher) {\n  var comparisonString = typeof thrown === 'string' ? thrown : thrown.message;\n  if (errMatcher instanceof RegExp) {\n    return errMatcher.test(comparisonString);\n  } else if (typeof errMatcher === 'string') {\n    return comparisonString.indexOf(errMatcher) !== -1; // eslint-disable-line no-magic-numbers\n  }\n\n  return false;\n}\n\n/**\n * ### .getFunctionName(constructorFn)\n *\n * Returns the name of a function.\n * This also includes a polyfill function if `constructorFn.name` is not defined.\n *\n * @name getFunctionName\n * @param {Function} constructorFn\n * @namespace Utils\n * @api private\n */\n\nvar functionNameMatch = /\\s*function(?:\\s|\\s*\\/\\*[^(?:*\\/)]+\\*\\/\\s*)*([^\\(\\/]+)/;\nfunction getFunctionName(constructorFn) {\n  var name = '';\n  if (typeof constructorFn.name === 'undefined') {\n    // Here we run a polyfill if constructorFn.name is not defined\n    var match = String(constructorFn).match(functionNameMatch);\n    if (match) {\n      name = match[1];\n    }\n  } else {\n    name = constructorFn.name;\n  }\n\n  return name;\n}\n\n/**\n * ### .getConstructorName(errorLike)\n *\n * Gets the constructor name for an Error instance or constructor itself.\n *\n * @name getConstructorName\n * @param {Error|ErrorConstructor} errorLike\n * @namespace Utils\n * @api public\n */\n\nfunction getConstructorName(errorLike) {\n  var constructorName = errorLike;\n  if (errorLike instanceof Error) {\n    constructorName = getFunctionName(errorLike.constructor);\n  } else if (typeof errorLike === 'function') {\n    // If `err` is not an instance of Error it is an error constructor itself or another function.\n    // If we've got a common function we get its name, otherwise we may need to create a new instance\n    // of the error just in case it's a poorly-constructed error. Please see chaijs/chai/issues/45 to know more.\n    constructorName = getFunctionName(errorLike).trim() ||\n        getFunctionName(new errorLike()); // eslint-disable-line new-cap\n  }\n\n  return constructorName;\n}\n\n/**\n * ### .getMessage(errorLike)\n *\n * Gets the error message from an error.\n * If `err` is a String itself, we return it.\n * If the error has no message, we return an empty string.\n *\n * @name getMessage\n * @param {Error|String} errorLike\n * @namespace Utils\n * @api public\n */\n\nfunction getMessage(errorLike) {\n  var msg = '';\n  if (errorLike && errorLike.message) {\n    msg = errorLike.message;\n  } else if (typeof errorLike === 'string') {\n    msg = errorLike;\n  }\n\n  return msg;\n}\n\nmodule.exports = {\n  compatibleInstance: compatibleInstance,\n  compatibleConstructor: compatibleConstructor,\n  compatibleMessage: compatibleMessage,\n  getMessage: getMessage,\n  getConstructorName: getConstructorName,\n};\n","/*!\n * Chai - isNaN utility\n * Copyright(c) 2012-2015 Sakthipriyan Vairamani <thechargingvolcano@gmail.com>\n * MIT Licensed\n */\n\n/**\n * ### .isNaN(value)\n *\n * Checks if the given value is NaN or not.\n *\n *     utils.isNaN(NaN); // true\n *\n * @param {Value} The value which has to be checked if it is NaN\n * @name isNaN\n * @api private\n */\n\nfunction isNaN(value) {\n  // Refer http://www.ecma-international.org/ecma-262/6.0/#sec-isnan-number\n  // section's NOTE.\n  return value !== value;\n}\n\n// If ECMAScript 6's Number.isNaN is present, prefer that.\nmodule.exports = Number.isNaN || isNaN;\n","/*!\n * chai\n * Copyright(c) 2011 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Dependencies that are used for multiple exports are required here only once\n */\n\nvar pathval = require('pathval');\n\n/*!\n * test utility\n */\n\nexports.test = require('./test');\n\n/*!\n * type utility\n */\n\nexports.type = require('type-detect');\n\n/*!\n * expectTypes utility\n */\nexports.expectTypes = require('./expectTypes');\n\n/*!\n * message utility\n */\n\nexports.getMessage = require('./getMessage');\n\n/*!\n * actual utility\n */\n\nexports.getActual = require('./getActual');\n\n/*!\n * Inspect util\n */\n\nexports.inspect = require('./inspect');\n\n/*!\n * Object Display util\n */\n\nexports.objDisplay = require('./objDisplay');\n\n/*!\n * Flag utility\n */\n\nexports.flag = require('./flag');\n\n/*!\n * Flag transferring utility\n */\n\nexports.transferFlags = require('./transferFlags');\n\n/*!\n * Deep equal utility\n */\n\nexports.eql = require('deep-eql');\n\n/*!\n * Deep path info\n */\n\nexports.getPathInfo = pathval.getPathInfo;\n\n/*!\n * Check if a property exists\n */\n\nexports.hasProperty = pathval.hasProperty;\n\n/*!\n * Function name\n */\n\nexports.getName = require('get-func-name');\n\n/*!\n * add Property\n */\n\nexports.addProperty = require('./addProperty');\n\n/*!\n * add Method\n */\n\nexports.addMethod = require('./addMethod');\n\n/*!\n * overwrite Property\n */\n\nexports.overwriteProperty = require('./overwriteProperty');\n\n/*!\n * overwrite Method\n */\n\nexports.overwriteMethod = require('./overwriteMethod');\n\n/*!\n * Add a chainable method\n */\n\nexports.addChainableMethod = require('./addChainableMethod');\n\n/*!\n * Overwrite chainable method\n */\n\nexports.overwriteChainableMethod = require('./overwriteChainableMethod');\n\n/*!\n * Compare by inspect method\n */\n\nexports.compareByInspect = require('./compareByInspect');\n\n/*!\n * Get own enumerable property symbols method\n */\n\nexports.getOwnEnumerablePropertySymbols = require('./getOwnEnumerablePropertySymbols');\n\n/*!\n * Get own enumerable properties method\n */\n\nexports.getOwnEnumerableProperties = require('./getOwnEnumerableProperties');\n\n/*!\n * Checks error against a given set of criteria\n */\n\nexports.checkError = require('check-error');\n\n/*!\n * Proxify util\n */\n\nexports.proxify = require('./proxify');\n\n/*!\n * addLengthGuard util\n */\n\nexports.addLengthGuard = require('./addLengthGuard');\n\n/*!\n * isProxyEnabled helper\n */\n\nexports.isProxyEnabled = require('./isProxyEnabled');\n\n/*!\n * isNaN method\n */\n\nexports.isNaN = require('./isNaN');\n","/*!\n * chai\n * http://chaijs.com\n * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nvar config = require('./config');\n\nmodule.exports = function (_chai, util) {\n  /*!\n   * Module dependencies.\n   */\n\n  var AssertionError = _chai.AssertionError\n    , flag = util.flag;\n\n  /*!\n   * Module export.\n   */\n\n  _chai.Assertion = Assertion;\n\n  /*!\n   * Assertion Constructor\n   *\n   * Creates object for chaining.\n   *\n   * `Assertion` objects contain metadata in the form of flags. Three flags can\n   * be assigned during instantiation by passing arguments to this constructor:\n   *\n   * - `object`: This flag contains the target of the assertion. For example, in\n   *   the assertion `expect(numKittens).to.equal(7);`, the `object` flag will\n   *   contain `numKittens` so that the `equal` assertion can reference it when\n   *   needed.\n   *\n   * - `message`: This flag contains an optional custom error message to be\n   *   prepended to the error message that's generated by the assertion when it\n   *   fails.\n   *\n   * - `ssfi`: This flag stands for \"start stack function indicator\". It\n   *   contains a function reference that serves as the starting point for\n   *   removing frames from the stack trace of the error that's created by the\n   *   assertion when it fails. The goal is to provide a cleaner stack trace to\n   *   end users by removing Chai's internal functions. Note that it only works\n   *   in environments that support `Error.captureStackTrace`, and only when\n   *   `Chai.config.includeStack` hasn't been set to `false`.\n   *\n   * - `lockSsfi`: This flag controls whether or not the given `ssfi` flag\n   *   should retain its current value, even as assertions are chained off of\n   *   this object. This is usually set to `true` when creating a new assertion\n   *   from within another assertion. It's also temporarily set to `true` before\n   *   an overwritten assertion gets called by the overwriting assertion.\n   *\n   * @param {Mixed} obj target of the assertion\n   * @param {String} msg (optional) custom error message\n   * @param {Function} ssfi (optional) starting point for removing stack frames\n   * @param {Boolean} lockSsfi (optional) whether or not the ssfi flag is locked\n   * @api private\n   */\n\n  function Assertion (obj, msg, ssfi, lockSsfi) {\n    flag(this, 'ssfi', ssfi || Assertion);\n    flag(this, 'lockSsfi', lockSsfi);\n    flag(this, 'object', obj);\n    flag(this, 'message', msg);\n\n    return util.proxify(this);\n  }\n\n  Object.defineProperty(Assertion, 'includeStack', {\n    get: function() {\n      console.warn('Assertion.includeStack is deprecated, use chai.config.includeStack instead.');\n      return config.includeStack;\n    },\n    set: function(value) {\n      console.warn('Assertion.includeStack is deprecated, use chai.config.includeStack instead.');\n      config.includeStack = value;\n    }\n  });\n\n  Object.defineProperty(Assertion, 'showDiff', {\n    get: function() {\n      console.warn('Assertion.showDiff is deprecated, use chai.config.showDiff instead.');\n      return config.showDiff;\n    },\n    set: function(value) {\n      console.warn('Assertion.showDiff is deprecated, use chai.config.showDiff instead.');\n      config.showDiff = value;\n    }\n  });\n\n  Assertion.addProperty = function (name, fn) {\n    util.addProperty(this.prototype, name, fn);\n  };\n\n  Assertion.addMethod = function (name, fn) {\n    util.addMethod(this.prototype, name, fn);\n  };\n\n  Assertion.addChainableMethod = function (name, fn, chainingBehavior) {\n    util.addChainableMethod(this.prototype, name, fn, chainingBehavior);\n  };\n\n  Assertion.overwriteProperty = function (name, fn) {\n    util.overwriteProperty(this.prototype, name, fn);\n  };\n\n  Assertion.overwriteMethod = function (name, fn) {\n    util.overwriteMethod(this.prototype, name, fn);\n  };\n\n  Assertion.overwriteChainableMethod = function (name, fn, chainingBehavior) {\n    util.overwriteChainableMethod(this.prototype, name, fn, chainingBehavior);\n  };\n\n  /**\n   * ### .assert(expression, message, negateMessage, expected, actual, showDiff)\n   *\n   * Executes an expression and check expectations. Throws AssertionError for reporting if test doesn't pass.\n   *\n   * @name assert\n   * @param {Philosophical} expression to be tested\n   * @param {String|Function} message or function that returns message to display if expression fails\n   * @param {String|Function} negatedMessage or function that returns negatedMessage to display if negated expression fails\n   * @param {Mixed} expected value (remember to check for negation)\n   * @param {Mixed} actual (optional) will default to `this.obj`\n   * @param {Boolean} showDiff (optional) when set to `true`, assert will display a diff in addition to the message if expression fails\n   * @api private\n   */\n\n  Assertion.prototype.assert = function (expr, msg, negateMsg, expected, _actual, showDiff) {\n    var ok = util.test(this, arguments);\n    if (false !== showDiff) showDiff = true;\n    if (undefined === expected && undefined === _actual) showDiff = false;\n    if (true !== config.showDiff) showDiff = false;\n\n    if (!ok) {\n      msg = util.getMessage(this, arguments);\n      var actual = util.getActual(this, arguments);\n      throw new AssertionError(msg, {\n          actual: actual\n        , expected: expected\n        , showDiff: showDiff\n      }, (config.includeStack) ? this.assert : flag(this, 'ssfi'));\n    }\n  };\n\n  /*!\n   * ### ._obj\n   *\n   * Quick reference to stored `actual` value for plugin developers.\n   *\n   * @api private\n   */\n\n  Object.defineProperty(Assertion.prototype, '_obj',\n    { get: function () {\n        return flag(this, 'object');\n      }\n    , set: function (val) {\n        flag(this, 'object', val);\n      }\n  });\n};\n","/*!\n * chai\n * http://chaijs.com\n * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nmodule.exports = function (chai, _) {\n  var Assertion = chai.Assertion\n    , AssertionError = chai.AssertionError\n    , flag = _.flag;\n\n  /**\n   * ### Language Chains\n   *\n   * The following are provided as chainable getters to improve the readability\n   * of your assertions.\n   *\n   * **Chains**\n   *\n   * - to\n   * - be\n   * - been\n   * - is\n   * - that\n   * - which\n   * - and\n   * - has\n   * - have\n   * - with\n   * - at\n   * - of\n   * - same\n   * - but\n   * - does\n   * - still\n   *\n   * @name language chains\n   * @namespace BDD\n   * @api public\n   */\n\n  [ 'to', 'be', 'been', 'is'\n  , 'and', 'has', 'have', 'with'\n  , 'that', 'which', 'at', 'of'\n  , 'same', 'but', 'does', 'still' ].forEach(function (chain) {\n    Assertion.addProperty(chain);\n  });\n\n  /**\n   * ### .not\n   *\n   * Negates all assertions that follow in the chain.\n   *\n   *     expect(function () {}).to.not.throw();\n   *     expect({a: 1}).to.not.have.property('b');\n   *     expect([1, 2]).to.be.an('array').that.does.not.include(3);\n   *\n   * Just because you can negate any assertion with `.not` doesn't mean you\n   * should. With great power comes great responsibility. It's often best to\n   * assert that the one expected output was produced, rather than asserting\n   * that one of countless unexpected outputs wasn't produced. See individual\n   * assertions for specific guidance.\n   *\n   *     expect(2).to.equal(2); // Recommended\n   *     expect(2).to.not.equal(1); // Not recommended\n   *\n   * @name not\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('not', function () {\n    flag(this, 'negate', true);\n  });\n\n  /**\n   * ### .deep\n   *\n   * Causes all `.equal`, `.include`, `.members`, `.keys`, and `.property`\n   * assertions that follow in the chain to use deep equality instead of strict\n   * (`===`) equality. See the `deep-eql` project page for info on the deep\n   * equality algorithm: https://github.com/chaijs/deep-eql.\n   *\n   *     // Target object deeply (but not strictly) equals `{a: 1}`\n   *     expect({a: 1}).to.deep.equal({a: 1});\n   *     expect({a: 1}).to.not.equal({a: 1});\n   *\n   *     // Target array deeply (but not strictly) includes `{a: 1}`\n   *     expect([{a: 1}]).to.deep.include({a: 1});\n   *     expect([{a: 1}]).to.not.include({a: 1});\n   *\n   *     // Target object deeply (but not strictly) includes `x: {a: 1}`\n   *     expect({x: {a: 1}}).to.deep.include({x: {a: 1}});\n   *     expect({x: {a: 1}}).to.not.include({x: {a: 1}});\n   *\n   *     // Target array deeply (but not strictly) has member `{a: 1}`\n   *     expect([{a: 1}]).to.have.deep.members([{a: 1}]);\n   *     expect([{a: 1}]).to.not.have.members([{a: 1}]);\n   *\n   *     // Target set deeply (but not strictly) has key `{a: 1}`\n   *     expect(new Set([{a: 1}])).to.have.deep.keys([{a: 1}]);\n   *     expect(new Set([{a: 1}])).to.not.have.keys([{a: 1}]);\n   *\n   *     // Target object deeply (but not strictly) has property `x: {a: 1}`\n   *     expect({x: {a: 1}}).to.have.deep.property('x', {a: 1});\n   *     expect({x: {a: 1}}).to.not.have.property('x', {a: 1});\n   *\n   * @name deep\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('deep', function () {\n    flag(this, 'deep', true);\n  });\n\n  /**\n   * ### .nested\n   *\n   * Enables dot- and bracket-notation in all `.property` and `.include`\n   * assertions that follow in the chain.\n   *\n   *     expect({a: {b: ['x', 'y']}}).to.have.nested.property('a.b[1]');\n   *     expect({a: {b: ['x', 'y']}}).to.nested.include({'a.b[1]': 'y'});\n   *\n   * If `.` or `[]` are part of an actual property name, they can be escaped by\n   * adding two backslashes before them.\n   *\n   *     expect({'.a': {'[b]': 'x'}}).to.have.nested.property('\\\\.a.\\\\[b\\\\]');\n   *     expect({'.a': {'[b]': 'x'}}).to.nested.include({'\\\\.a.\\\\[b\\\\]': 'x'});\n   *\n   * `.nested` cannot be combined with `.own`.\n   *\n   * @name nested\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('nested', function () {\n    flag(this, 'nested', true);\n  });\n\n  /**\n   * ### .own\n   *\n   * Causes all `.property` and `.include` assertions that follow in the chain\n   * to ignore inherited properties.\n   *\n   *     Object.prototype.b = 2;\n   *\n   *     expect({a: 1}).to.have.own.property('a');\n   *     expect({a: 1}).to.have.property('b');\n   *     expect({a: 1}).to.not.have.own.property('b');\n   *\n   *     expect({a: 1}).to.own.include({a: 1});\n   *     expect({a: 1}).to.include({b: 2}).but.not.own.include({b: 2});\n   *\n   * `.own` cannot be combined with `.nested`.\n   *\n   * @name own\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('own', function () {\n    flag(this, 'own', true);\n  });\n\n  /**\n   * ### .ordered\n   *\n   * Causes all `.members` assertions that follow in the chain to require that\n   * members be in the same order.\n   *\n   *     expect([1, 2]).to.have.ordered.members([1, 2])\n   *       .but.not.have.ordered.members([2, 1]);\n   *\n   * When `.include` and `.ordered` are combined, the ordering begins at the\n   * start of both arrays.\n   *\n   *     expect([1, 2, 3]).to.include.ordered.members([1, 2])\n   *       .but.not.include.ordered.members([2, 3]);\n   *\n   * @name ordered\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('ordered', function () {\n    flag(this, 'ordered', true);\n  });\n\n  /**\n   * ### .any\n   *\n   * Causes all `.keys` assertions that follow in the chain to only require that\n   * the target have at least one of the given keys. This is the opposite of\n   * `.all`, which requires that the target have all of the given keys.\n   *\n   *     expect({a: 1, b: 2}).to.not.have.any.keys('c', 'd');\n   *\n   * See the `.keys` doc for guidance on when to use `.any` or `.all`.\n   *\n   * @name any\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('any', function () {\n    flag(this, 'any', true);\n    flag(this, 'all', false);\n  });\n\n  /**\n   * ### .all\n   *\n   * Causes all `.keys` assertions that follow in the chain to require that the\n   * target have all of the given keys. This is the opposite of `.any`, which\n   * only requires that the target have at least one of the given keys.\n   *\n   *     expect({a: 1, b: 2}).to.have.all.keys('a', 'b');\n   *\n   * Note that `.all` is used by default when neither `.all` nor `.any` are\n   * added earlier in the chain. However, it's often best to add `.all` anyway\n   * because it improves readability.\n   *\n   * See the `.keys` doc for guidance on when to use `.any` or `.all`.\n   *\n   * @name all\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('all', function () {\n    flag(this, 'all', true);\n    flag(this, 'any', false);\n  });\n\n  /**\n   * ### .a(type[, msg])\n   *\n   * Asserts that the target's type is equal to the given string `type`. Types\n   * are case insensitive. See the `type-detect` project page for info on the\n   * type detection algorithm: https://github.com/chaijs/type-detect.\n   *\n   *     expect('foo').to.be.a('string');\n   *     expect({a: 1}).to.be.an('object');\n   *     expect(null).to.be.a('null');\n   *     expect(undefined).to.be.an('undefined');\n   *     expect(new Error).to.be.an('error');\n   *     expect(Promise.resolve()).to.be.a('promise');\n   *     expect(new Float32Array).to.be.a('float32array');\n   *     expect(Symbol()).to.be.a('symbol');\n   *\n   * `.a` supports objects that have a custom type set via `Symbol.toStringTag`.\n   *\n   *     var myObj = {\n   *       [Symbol.toStringTag]: 'myCustomType'\n   *     };\n   *\n   *     expect(myObj).to.be.a('myCustomType').but.not.an('object');\n   *\n   * It's often best to use `.a` to check a target's type before making more\n   * assertions on the same target. That way, you avoid unexpected behavior from\n   * any assertion that does different things based on the target's type.\n   *\n   *     expect([1, 2, 3]).to.be.an('array').that.includes(2);\n   *     expect([]).to.be.an('array').that.is.empty;\n   *\n   * Add `.not` earlier in the chain to negate `.a`. However, it's often best to\n   * assert that the target is the expected type, rather than asserting that it\n   * isn't one of many unexpected types.\n   *\n   *     expect('foo').to.be.a('string'); // Recommended\n   *     expect('foo').to.not.be.an('array'); // Not recommended\n   *\n   * `.a` accepts an optional `msg` argument which is a custom error message to\n   * show when the assertion fails. The message can also be given as the second\n   * argument to `expect`.\n   *\n   *     expect(1).to.be.a('string', 'nooo why fail??');\n   *     expect(1, 'nooo why fail??').to.be.a('string');\n   *\n   * `.a` can also be used as a language chain to improve the readability of\n   * your assertions.\n   *\n   *     expect({b: 2}).to.have.a.property('b');\n   *\n   * The alias `.an` can be used interchangeably with `.a`.\n   *\n   * @name a\n   * @alias an\n   * @param {String} type\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function an (type, msg) {\n    if (msg) flag(this, 'message', msg);\n    type = type.toLowerCase();\n    var obj = flag(this, 'object')\n      , article = ~[ 'a', 'e', 'i', 'o', 'u' ].indexOf(type.charAt(0)) ? 'an ' : 'a ';\n\n    this.assert(\n        type === _.type(obj).toLowerCase()\n      , 'expected #{this} to be ' + article + type\n      , 'expected #{this} not to be ' + article + type\n    );\n  }\n\n  Assertion.addChainableMethod('an', an);\n  Assertion.addChainableMethod('a', an);\n\n  /**\n   * ### .include(val[, msg])\n   *\n   * When the target is a string, `.include` asserts that the given string `val`\n   * is a substring of the target.\n   *\n   *     expect('foobar').to.include('foo');\n   *\n   * When the target is an array, `.include` asserts that the given `val` is a\n   * member of the target.\n   *\n   *     expect([1, 2, 3]).to.include(2);\n   *\n   * When the target is an object, `.include` asserts that the given object\n   * `val`'s properties are a subset of the target's properties.\n   *\n   *     expect({a: 1, b: 2, c: 3}).to.include({a: 1, b: 2});\n   *\n   * When the target is a Set or WeakSet, `.include` asserts that the given `val` is a\n   * member of the target. SameValueZero equality algorithm is used.\n   *\n   *     expect(new Set([1, 2])).to.include(2);\n   *\n   * When the target is a Map, `.include` asserts that the given `val` is one of\n   * the values of the target. SameValueZero equality algorithm is used.\n   *\n   *     expect(new Map([['a', 1], ['b', 2]])).to.include(2);\n   *\n   * Because `.include` does different things based on the target's type, it's\n   * important to check the target's type before using `.include`. See the `.a`\n   * doc for info on testing a target's type.\n   *\n   *     expect([1, 2, 3]).to.be.an('array').that.includes(2);\n   *\n   * By default, strict (`===`) equality is used to compare array members and\n   * object properties. Add `.deep` earlier in the chain to use deep equality\n   * instead (WeakSet targets are not supported). See the `deep-eql` project\n   * page for info on the deep equality algorithm: https://github.com/chaijs/deep-eql.\n   *\n   *     // Target array deeply (but not strictly) includes `{a: 1}`\n   *     expect([{a: 1}]).to.deep.include({a: 1});\n   *     expect([{a: 1}]).to.not.include({a: 1});\n   *\n   *     // Target object deeply (but not strictly) includes `x: {a: 1}`\n   *     expect({x: {a: 1}}).to.deep.include({x: {a: 1}});\n   *     expect({x: {a: 1}}).to.not.include({x: {a: 1}});\n   *\n   * By default, all of the target's properties are searched when working with\n   * objects. This includes properties that are inherited and/or non-enumerable.\n   * Add `.own` earlier in the chain to exclude the target's inherited\n   * properties from the search.\n   *\n   *     Object.prototype.b = 2;\n   *\n   *     expect({a: 1}).to.own.include({a: 1});\n   *     expect({a: 1}).to.include({b: 2}).but.not.own.include({b: 2});\n   *\n   * Note that a target object is always only searched for `val`'s own\n   * enumerable properties.\n   *\n   * `.deep` and `.own` can be combined.\n   *\n   *     expect({a: {b: 2}}).to.deep.own.include({a: {b: 2}});\n   *\n   * Add `.nested` earlier in the chain to enable dot- and bracket-notation when\n   * referencing nested properties.\n   *\n   *     expect({a: {b: ['x', 'y']}}).to.nested.include({'a.b[1]': 'y'});\n   *\n   * If `.` or `[]` are part of an actual property name, they can be escaped by\n   * adding two backslashes before them.\n   *\n   *     expect({'.a': {'[b]': 2}}).to.nested.include({'\\\\.a.\\\\[b\\\\]': 2});\n   *\n   * `.deep` and `.nested` can be combined.\n   *\n   *     expect({a: {b: [{c: 3}]}}).to.deep.nested.include({'a.b[0]': {c: 3}});\n   *\n   * `.own` and `.nested` cannot be combined.\n   *\n   * Add `.not` earlier in the chain to negate `.include`.\n   *\n   *     expect('foobar').to.not.include('taco');\n   *     expect([1, 2, 3]).to.not.include(4);\n   *\n   * However, it's dangerous to negate `.include` when the target is an object.\n   * The problem is that it creates uncertain expectations by asserting that the\n   * target object doesn't have all of `val`'s key/value pairs but may or may\n   * not have some of them. It's often best to identify the exact output that's\n   * expected, and then write an assertion that only accepts that exact output.\n   *\n   * When the target object isn't even expected to have `val`'s keys, it's\n   * often best to assert exactly that.\n   *\n   *     expect({c: 3}).to.not.have.any.keys('a', 'b'); // Recommended\n   *     expect({c: 3}).to.not.include({a: 1, b: 2}); // Not recommended\n   *\n   * When the target object is expected to have `val`'s keys, it's often best to\n   * assert that each of the properties has its expected value, rather than\n   * asserting that each property doesn't have one of many unexpected values.\n   *\n   *     expect({a: 3, b: 4}).to.include({a: 3, b: 4}); // Recommended\n   *     expect({a: 3, b: 4}).to.not.include({a: 1, b: 2}); // Not recommended\n   *\n   * `.include` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`.\n   *\n   *     expect([1, 2, 3]).to.include(4, 'nooo why fail??');\n   *     expect([1, 2, 3], 'nooo why fail??').to.include(4);\n   *\n   * `.include` can also be used as a language chain, causing all `.members` and\n   * `.keys` assertions that follow in the chain to require the target to be a\n   * superset of the expected set, rather than an identical set. Note that\n   * `.members` ignores duplicates in the subset when `.include` is added.\n   *\n   *     // Target object's keys are a superset of ['a', 'b'] but not identical\n   *     expect({a: 1, b: 2, c: 3}).to.include.all.keys('a', 'b');\n   *     expect({a: 1, b: 2, c: 3}).to.not.have.all.keys('a', 'b');\n   *\n   *     // Target array is a superset of [1, 2] but not identical\n   *     expect([1, 2, 3]).to.include.members([1, 2]);\n   *     expect([1, 2, 3]).to.not.have.members([1, 2]);\n   *\n   *     // Duplicates in the subset are ignored\n   *     expect([1, 2, 3]).to.include.members([1, 2, 2, 2]);\n   *\n   * Note that adding `.any` earlier in the chain causes the `.keys` assertion\n   * to ignore `.include`.\n   *\n   *     // Both assertions are identical\n   *     expect({a: 1}).to.include.any.keys('a', 'b');\n   *     expect({a: 1}).to.have.any.keys('a', 'b');\n   *\n   * The aliases `.includes`, `.contain`, and `.contains` can be used\n   * interchangeably with `.include`.\n   *\n   * @name include\n   * @alias contain\n   * @alias includes\n   * @alias contains\n   * @param {Mixed} val\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function SameValueZero(a, b) {\n    return (_.isNaN(a) && _.isNaN(b)) || a === b;\n  }\n\n  function includeChainingBehavior () {\n    flag(this, 'contains', true);\n  }\n\n  function include (val, msg) {\n    if (msg) flag(this, 'message', msg);\n\n    var obj = flag(this, 'object')\n      , objType = _.type(obj).toLowerCase()\n      , flagMsg = flag(this, 'message')\n      , negate = flag(this, 'negate')\n      , ssfi = flag(this, 'ssfi')\n      , isDeep = flag(this, 'deep')\n      , descriptor = isDeep ? 'deep ' : '';\n\n    flagMsg = flagMsg ? flagMsg + ': ' : '';\n\n    var included = false;\n\n    switch (objType) {\n      case 'string':\n        included = obj.indexOf(val) !== -1;\n        break;\n\n      case 'weakset':\n        if (isDeep) {\n          throw new AssertionError(\n            flagMsg + 'unable to use .deep.include with WeakSet',\n            undefined,\n            ssfi\n          );\n        }\n\n        included = obj.has(val);\n        break;\n\n      case 'map':\n        var isEql = isDeep ? _.eql : SameValueZero;\n        obj.forEach(function (item) {\n          included = included || isEql(item, val);\n        });\n        break;\n\n      case 'set':\n        if (isDeep) {\n          obj.forEach(function (item) {\n            included = included || _.eql(item, val);\n          });\n        } else {\n          included = obj.has(val);\n        }\n        break;\n\n      case 'array':\n        if (isDeep) {\n          included = obj.some(function (item) {\n            return _.eql(item, val);\n          })\n        } else {\n          included = obj.indexOf(val) !== -1;\n        }\n        break;\n\n      default:\n        // This block is for asserting a subset of properties in an object.\n        // `_.expectTypes` isn't used here because `.include` should work with\n        // objects with a custom `@@toStringTag`.\n        if (val !== Object(val)) {\n          throw new AssertionError(\n            flagMsg + 'object tested must be an array, a map, an object,'\n              + ' a set, a string, or a weakset, but ' + objType + ' given',\n            undefined,\n            ssfi\n          );\n        }\n\n        var props = Object.keys(val)\n          , firstErr = null\n          , numErrs = 0;\n\n        props.forEach(function (prop) {\n          var propAssertion = new Assertion(obj);\n          _.transferFlags(this, propAssertion, true);\n          flag(propAssertion, 'lockSsfi', true);\n\n          if (!negate || props.length === 1) {\n            propAssertion.property(prop, val[prop]);\n            return;\n          }\n\n          try {\n            propAssertion.property(prop, val[prop]);\n          } catch (err) {\n            if (!_.checkError.compatibleConstructor(err, AssertionError)) {\n              throw err;\n            }\n            if (firstErr === null) firstErr = err;\n            numErrs++;\n          }\n        }, this);\n\n        // When validating .not.include with multiple properties, we only want\n        // to throw an assertion error if all of the properties are included,\n        // in which case we throw the first property assertion error that we\n        // encountered.\n        if (negate && props.length > 1 && numErrs === props.length) {\n          throw firstErr;\n        }\n        return;\n    }\n\n    // Assert inclusion in collection or substring in a string.\n    this.assert(\n      included\n      , 'expected #{this} to ' + descriptor + 'include ' + _.inspect(val)\n      , 'expected #{this} to not ' + descriptor + 'include ' + _.inspect(val));\n  }\n\n  Assertion.addChainableMethod('include', include, includeChainingBehavior);\n  Assertion.addChainableMethod('contain', include, includeChainingBehavior);\n  Assertion.addChainableMethod('contains', include, includeChainingBehavior);\n  Assertion.addChainableMethod('includes', include, includeChainingBehavior);\n\n  /**\n   * ### .ok\n   *\n   * Asserts that the target is a truthy value (considered `true` in boolean context).\n   * However, it's often best to assert that the target is strictly (`===`) or\n   * deeply equal to its expected value.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.be.ok; // Not recommended\n   *\n   *     expect(true).to.be.true; // Recommended\n   *     expect(true).to.be.ok; // Not recommended\n   *\n   * Add `.not` earlier in the chain to negate `.ok`.\n   *\n   *     expect(0).to.equal(0); // Recommended\n   *     expect(0).to.not.be.ok; // Not recommended\n   *\n   *     expect(false).to.be.false; // Recommended\n   *     expect(false).to.not.be.ok; // Not recommended\n   *\n   *     expect(null).to.be.null; // Recommended\n   *     expect(null).to.not.be.ok; // Not recommended\n   *\n   *     expect(undefined).to.be.undefined; // Recommended\n   *     expect(undefined).to.not.be.ok; // Not recommended\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect(false, 'nooo why fail??').to.be.ok;\n   *\n   * @name ok\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('ok', function () {\n    this.assert(\n        flag(this, 'object')\n      , 'expected #{this} to be truthy'\n      , 'expected #{this} to be falsy');\n  });\n\n  /**\n   * ### .true\n   *\n   * Asserts that the target is strictly (`===`) equal to `true`.\n   *\n   *     expect(true).to.be.true;\n   *\n   * Add `.not` earlier in the chain to negate `.true`. However, it's often best\n   * to assert that the target is equal to its expected value, rather than not\n   * equal to `true`.\n   *\n   *     expect(false).to.be.false; // Recommended\n   *     expect(false).to.not.be.true; // Not recommended\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.not.be.true; // Not recommended\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect(false, 'nooo why fail??').to.be.true;\n   *\n   * @name true\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('true', function () {\n    this.assert(\n        true === flag(this, 'object')\n      , 'expected #{this} to be true'\n      , 'expected #{this} to be false'\n      , flag(this, 'negate') ? false : true\n    );\n  });\n\n  /**\n   * ### .false\n   *\n   * Asserts that the target is strictly (`===`) equal to `false`.\n   *\n   *     expect(false).to.be.false;\n   *\n   * Add `.not` earlier in the chain to negate `.false`. However, it's often\n   * best to assert that the target is equal to its expected value, rather than\n   * not equal to `false`.\n   *\n   *     expect(true).to.be.true; // Recommended\n   *     expect(true).to.not.be.false; // Not recommended\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.not.be.false; // Not recommended\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect(true, 'nooo why fail??').to.be.false;\n   *\n   * @name false\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('false', function () {\n    this.assert(\n        false === flag(this, 'object')\n      , 'expected #{this} to be false'\n      , 'expected #{this} to be true'\n      , flag(this, 'negate') ? true : false\n    );\n  });\n\n  /**\n   * ### .null\n   *\n   * Asserts that the target is strictly (`===`) equal to `null`.\n   *\n   *     expect(null).to.be.null;\n   *\n   * Add `.not` earlier in the chain to negate `.null`. However, it's often best\n   * to assert that the target is equal to its expected value, rather than not\n   * equal to `null`.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.not.be.null; // Not recommended\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect(42, 'nooo why fail??').to.be.null;\n   *\n   * @name null\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('null', function () {\n    this.assert(\n        null === flag(this, 'object')\n      , 'expected #{this} to be null'\n      , 'expected #{this} not to be null'\n    );\n  });\n\n  /**\n   * ### .undefined\n   *\n   * Asserts that the target is strictly (`===`) equal to `undefined`.\n   *\n   *     expect(undefined).to.be.undefined;\n   *\n   * Add `.not` earlier in the chain to negate `.undefined`. However, it's often\n   * best to assert that the target is equal to its expected value, rather than\n   * not equal to `undefined`.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.not.be.undefined; // Not recommended\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect(42, 'nooo why fail??').to.be.undefined;\n   *\n   * @name undefined\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('undefined', function () {\n    this.assert(\n        undefined === flag(this, 'object')\n      , 'expected #{this} to be undefined'\n      , 'expected #{this} not to be undefined'\n    );\n  });\n\n  /**\n   * ### .NaN\n   *\n   * Asserts that the target is exactly `NaN`.\n   *\n   *     expect(NaN).to.be.NaN;\n   *\n   * Add `.not` earlier in the chain to negate `.NaN`. However, it's often best\n   * to assert that the target is equal to its expected value, rather than not\n   * equal to `NaN`.\n   *\n   *     expect('foo').to.equal('foo'); // Recommended\n   *     expect('foo').to.not.be.NaN; // Not recommended\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect(42, 'nooo why fail??').to.be.NaN;\n   *\n   * @name NaN\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('NaN', function () {\n    this.assert(\n        _.isNaN(flag(this, 'object'))\n        , 'expected #{this} to be NaN'\n        , 'expected #{this} not to be NaN'\n    );\n  });\n\n  /**\n   * ### .exist\n   *\n   * Asserts that the target is not strictly (`===`) equal to either `null` or\n   * `undefined`. However, it's often best to assert that the target is equal to\n   * its expected value.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.exist; // Not recommended\n   *\n   *     expect(0).to.equal(0); // Recommended\n   *     expect(0).to.exist; // Not recommended\n   *\n   * Add `.not` earlier in the chain to negate `.exist`.\n   *\n   *     expect(null).to.be.null; // Recommended\n   *     expect(null).to.not.exist; // Not recommended\n   *\n   *     expect(undefined).to.be.undefined; // Recommended\n   *     expect(undefined).to.not.exist; // Not recommended\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect(null, 'nooo why fail??').to.exist;\n   *\n   * @name exist\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('exist', function () {\n    var val = flag(this, 'object');\n    this.assert(\n        val !== null && val !== undefined\n      , 'expected #{this} to exist'\n      , 'expected #{this} to not exist'\n    );\n  });\n\n  /**\n   * ### .empty\n   *\n   * When the target is a string or array, `.empty` asserts that the target's\n   * `length` property is strictly (`===`) equal to `0`.\n   *\n   *     expect([]).to.be.empty;\n   *     expect('').to.be.empty;\n   *\n   * When the target is a map or set, `.empty` asserts that the target's `size`\n   * property is strictly equal to `0`.\n   *\n   *     expect(new Set()).to.be.empty;\n   *     expect(new Map()).to.be.empty;\n   *\n   * When the target is a non-function object, `.empty` asserts that the target\n   * doesn't have any own enumerable properties. Properties with Symbol-based\n   * keys are excluded from the count.\n   *\n   *     expect({}).to.be.empty;\n   *\n   * Because `.empty` does different things based on the target's type, it's\n   * important to check the target's type before using `.empty`. See the `.a`\n   * doc for info on testing a target's type.\n   *\n   *     expect([]).to.be.an('array').that.is.empty;\n   *\n   * Add `.not` earlier in the chain to negate `.empty`. However, it's often\n   * best to assert that the target contains its expected number of values,\n   * rather than asserting that it's not empty.\n   *\n   *     expect([1, 2, 3]).to.have.lengthOf(3); // Recommended\n   *     expect([1, 2, 3]).to.not.be.empty; // Not recommended\n   *\n   *     expect(new Set([1, 2, 3])).to.have.property('size', 3); // Recommended\n   *     expect(new Set([1, 2, 3])).to.not.be.empty; // Not recommended\n   *\n   *     expect(Object.keys({a: 1})).to.have.lengthOf(1); // Recommended\n   *     expect({a: 1}).to.not.be.empty; // Not recommended\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect([1, 2, 3], 'nooo why fail??').to.be.empty;\n   *\n   * @name empty\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('empty', function () {\n    var val = flag(this, 'object')\n      , ssfi = flag(this, 'ssfi')\n      , flagMsg = flag(this, 'message')\n      , itemsCount;\n\n    flagMsg = flagMsg ? flagMsg + ': ' : '';\n\n    switch (_.type(val).toLowerCase()) {\n      case 'array':\n      case 'string':\n        itemsCount = val.length;\n        break;\n      case 'map':\n      case 'set':\n        itemsCount = val.size;\n        break;\n      case 'weakmap':\n      case 'weakset':\n        throw new AssertionError(\n          flagMsg + '.empty was passed a weak collection',\n          undefined,\n          ssfi\n        );\n      case 'function':\n        var msg = flagMsg + '.empty was passed a function ' + _.getName(val);\n        throw new AssertionError(msg.trim(), undefined, ssfi);\n      default:\n        if (val !== Object(val)) {\n          throw new AssertionError(\n            flagMsg + '.empty was passed non-string primitive ' + _.inspect(val),\n            undefined,\n            ssfi\n          );\n        }\n        itemsCount = Object.keys(val).length;\n    }\n\n    this.assert(\n        0 === itemsCount\n      , 'expected #{this} to be empty'\n      , 'expected #{this} not to be empty'\n    );\n  });\n\n  /**\n   * ### .arguments\n   *\n   * Asserts that the target is an `arguments` object.\n   *\n   *     function test () {\n   *       expect(arguments).to.be.arguments;\n   *     }\n   *\n   *     test();\n   *\n   * Add `.not` earlier in the chain to negate `.arguments`. However, it's often\n   * best to assert which type the target is expected to be, rather than\n   * asserting that its not an `arguments` object.\n   *\n   *     expect('foo').to.be.a('string'); // Recommended\n   *     expect('foo').to.not.be.arguments; // Not recommended\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect({}, 'nooo why fail??').to.be.arguments;\n   *\n   * The alias `.Arguments` can be used interchangeably with `.arguments`.\n   *\n   * @name arguments\n   * @alias Arguments\n   * @namespace BDD\n   * @api public\n   */\n\n  function checkArguments () {\n    var obj = flag(this, 'object')\n      , type = _.type(obj);\n    this.assert(\n        'Arguments' === type\n      , 'expected #{this} to be arguments but got ' + type\n      , 'expected #{this} to not be arguments'\n    );\n  }\n\n  Assertion.addProperty('arguments', checkArguments);\n  Assertion.addProperty('Arguments', checkArguments);\n\n  /**\n   * ### .equal(val[, msg])\n   *\n   * Asserts that the target is strictly (`===`) equal to the given `val`.\n   *\n   *     expect(1).to.equal(1);\n   *     expect('foo').to.equal('foo');\n   *\n   * Add `.deep` earlier in the chain to use deep equality instead. See the\n   * `deep-eql` project page for info on the deep equality algorithm:\n   * https://github.com/chaijs/deep-eql.\n   *\n   *     // Target object deeply (but not strictly) equals `{a: 1}`\n   *     expect({a: 1}).to.deep.equal({a: 1});\n   *     expect({a: 1}).to.not.equal({a: 1});\n   *\n   *     // Target array deeply (but not strictly) equals `[1, 2]`\n   *     expect([1, 2]).to.deep.equal([1, 2]);\n   *     expect([1, 2]).to.not.equal([1, 2]);\n   *\n   * Add `.not` earlier in the chain to negate `.equal`. However, it's often\n   * best to assert that the target is equal to its expected value, rather than\n   * not equal to one of countless unexpected values.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.not.equal(2); // Not recommended\n   *\n   * `.equal` accepts an optional `msg` argument which is a custom error message\n   * to show when the assertion fails. The message can also be given as the\n   * second argument to `expect`.\n   *\n   *     expect(1).to.equal(2, 'nooo why fail??');\n   *     expect(1, 'nooo why fail??').to.equal(2);\n   *\n   * The aliases `.equals` and `eq` can be used interchangeably with `.equal`.\n   *\n   * @name equal\n   * @alias equals\n   * @alias eq\n   * @param {Mixed} val\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertEqual (val, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    if (flag(this, 'deep')) {\n      var prevLockSsfi = flag(this, 'lockSsfi');\n      flag(this, 'lockSsfi', true);\n      this.eql(val);\n      flag(this, 'lockSsfi', prevLockSsfi);\n    } else {\n      this.assert(\n          val === obj\n        , 'expected #{this} to equal #{exp}'\n        , 'expected #{this} to not equal #{exp}'\n        , val\n        , this._obj\n        , true\n      );\n    }\n  }\n\n  Assertion.addMethod('equal', assertEqual);\n  Assertion.addMethod('equals', assertEqual);\n  Assertion.addMethod('eq', assertEqual);\n\n  /**\n   * ### .eql(obj[, msg])\n   *\n   * Asserts that the target is deeply equal to the given `obj`. See the\n   * `deep-eql` project page for info on the deep equality algorithm:\n   * https://github.com/chaijs/deep-eql.\n   *\n   *     // Target object is deeply (but not strictly) equal to {a: 1}\n   *     expect({a: 1}).to.eql({a: 1}).but.not.equal({a: 1});\n   *\n   *     // Target array is deeply (but not strictly) equal to [1, 2]\n   *     expect([1, 2]).to.eql([1, 2]).but.not.equal([1, 2]);\n   *\n   * Add `.not` earlier in the chain to negate `.eql`. However, it's often best\n   * to assert that the target is deeply equal to its expected value, rather\n   * than not deeply equal to one of countless unexpected values.\n   *\n   *     expect({a: 1}).to.eql({a: 1}); // Recommended\n   *     expect({a: 1}).to.not.eql({b: 2}); // Not recommended\n   *\n   * `.eql` accepts an optional `msg` argument which is a custom error message\n   * to show when the assertion fails. The message can also be given as the\n   * second argument to `expect`.\n   *\n   *     expect({a: 1}).to.eql({b: 2}, 'nooo why fail??');\n   *     expect({a: 1}, 'nooo why fail??').to.eql({b: 2});\n   *\n   * The alias `.eqls` can be used interchangeably with `.eql`.\n   *\n   * The `.deep.equal` assertion is almost identical to `.eql` but with one\n   * difference: `.deep.equal` causes deep equality comparisons to also be used\n   * for any other assertions that follow in the chain.\n   *\n   * @name eql\n   * @alias eqls\n   * @param {Mixed} obj\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertEql(obj, msg) {\n    if (msg) flag(this, 'message', msg);\n    this.assert(\n        _.eql(obj, flag(this, 'object'))\n      , 'expected #{this} to deeply equal #{exp}'\n      , 'expected #{this} to not deeply equal #{exp}'\n      , obj\n      , this._obj\n      , true\n    );\n  }\n\n  Assertion.addMethod('eql', assertEql);\n  Assertion.addMethod('eqls', assertEql);\n\n  /**\n   * ### .above(n[, msg])\n   *\n   * Asserts that the target is a number or a date greater than the given number or date `n` respectively.\n   * However, it's often best to assert that the target is equal to its expected\n   * value.\n   *\n   *     expect(2).to.equal(2); // Recommended\n   *     expect(2).to.be.above(1); // Not recommended\n   *\n   * Add `.lengthOf` earlier in the chain to assert that the target's `length`\n   * or `size` is greater than the given number `n`.\n   *\n   *     expect('foo').to.have.lengthOf(3); // Recommended\n   *     expect('foo').to.have.lengthOf.above(2); // Not recommended\n   *\n   *     expect([1, 2, 3]).to.have.lengthOf(3); // Recommended\n   *     expect([1, 2, 3]).to.have.lengthOf.above(2); // Not recommended\n   *\n   * Add `.not` earlier in the chain to negate `.above`.\n   *\n   *     expect(2).to.equal(2); // Recommended\n   *     expect(1).to.not.be.above(2); // Not recommended\n   *\n   * `.above` accepts an optional `msg` argument which is a custom error message\n   * to show when the assertion fails. The message can also be given as the\n   * second argument to `expect`.\n   *\n   *     expect(1).to.be.above(2, 'nooo why fail??');\n   *     expect(1, 'nooo why fail??').to.be.above(2);\n   *\n   * The aliases `.gt` and `.greaterThan` can be used interchangeably with\n   * `.above`.\n   *\n   * @name above\n   * @alias gt\n   * @alias greaterThan\n   * @param {Number} n\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertAbove (n, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , doLength = flag(this, 'doLength')\n      , flagMsg = flag(this, 'message')\n      , msgPrefix = ((flagMsg) ? flagMsg + ': ' : '')\n      , ssfi = flag(this, 'ssfi')\n      , objType = _.type(obj).toLowerCase()\n      , nType = _.type(n).toLowerCase()\n      , errorMessage\n      , shouldThrow = true;\n\n    if (doLength && objType !== 'map' && objType !== 'set') {\n      new Assertion(obj, flagMsg, ssfi, true).to.have.property('length');\n    }\n\n    if (!doLength && (objType === 'date' && nType !== 'date')) {\n      errorMessage = msgPrefix + 'the argument to above must be a date';\n    } else if (nType !== 'number' && (doLength || objType === 'number')) {\n      errorMessage = msgPrefix + 'the argument to above must be a number';\n    } else if (!doLength && (objType !== 'date' && objType !== 'number')) {\n      var printObj = (objType === 'string') ? \"'\" + obj + \"'\" : obj;\n      errorMessage = msgPrefix + 'expected ' + printObj + ' to be a number or a date';\n    } else {\n      shouldThrow = false;\n    }\n\n    if (shouldThrow) {\n      throw new AssertionError(errorMessage, undefined, ssfi);\n    }\n\n    if (doLength) {\n      var descriptor = 'length'\n        , itemsCount;\n      if (objType === 'map' || objType === 'set') {\n        descriptor = 'size';\n        itemsCount = obj.size;\n      } else {\n        itemsCount = obj.length;\n      }\n      this.assert(\n          itemsCount > n\n        , 'expected #{this} to have a ' + descriptor + ' above #{exp} but got #{act}'\n        , 'expected #{this} to not have a ' + descriptor + ' above #{exp}'\n        , n\n        , itemsCount\n      );\n    } else {\n      this.assert(\n          obj > n\n        , 'expected #{this} to be above #{exp}'\n        , 'expected #{this} to be at most #{exp}'\n        , n\n      );\n    }\n  }\n\n  Assertion.addMethod('above', assertAbove);\n  Assertion.addMethod('gt', assertAbove);\n  Assertion.addMethod('greaterThan', assertAbove);\n\n  /**\n   * ### .least(n[, msg])\n   *\n   * Asserts that the target is a number or a date greater than or equal to the given\n   * number or date `n` respectively. However, it's often best to assert that the target is equal to\n   * its expected value.\n   *\n   *     expect(2).to.equal(2); // Recommended\n   *     expect(2).to.be.at.least(1); // Not recommended\n   *     expect(2).to.be.at.least(2); // Not recommended\n   *\n   * Add `.lengthOf` earlier in the chain to assert that the target's `length`\n   * or `size` is greater than or equal to the given number `n`.\n   *\n   *     expect('foo').to.have.lengthOf(3); // Recommended\n   *     expect('foo').to.have.lengthOf.at.least(2); // Not recommended\n   *\n   *     expect([1, 2, 3]).to.have.lengthOf(3); // Recommended\n   *     expect([1, 2, 3]).to.have.lengthOf.at.least(2); // Not recommended\n   *\n   * Add `.not` earlier in the chain to negate `.least`.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.not.be.at.least(2); // Not recommended\n   *\n   * `.least` accepts an optional `msg` argument which is a custom error message\n   * to show when the assertion fails. The message can also be given as the\n   * second argument to `expect`.\n   *\n   *     expect(1).to.be.at.least(2, 'nooo why fail??');\n   *     expect(1, 'nooo why fail??').to.be.at.least(2);\n   *\n   * The alias `.gte` can be used interchangeably with `.least`.\n   *\n   * @name least\n   * @alias gte\n   * @param {Number} n\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertLeast (n, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , doLength = flag(this, 'doLength')\n      , flagMsg = flag(this, 'message')\n      , msgPrefix = ((flagMsg) ? flagMsg + ': ' : '')\n      , ssfi = flag(this, 'ssfi')\n      , objType = _.type(obj).toLowerCase()\n      , nType = _.type(n).toLowerCase()\n      , errorMessage\n      , shouldThrow = true;\n\n    if (doLength && objType !== 'map' && objType !== 'set') {\n      new Assertion(obj, flagMsg, ssfi, true).to.have.property('length');\n    }\n\n    if (!doLength && (objType === 'date' && nType !== 'date')) {\n      errorMessage = msgPrefix + 'the argument to least must be a date';\n    } else if (nType !== 'number' && (doLength || objType === 'number')) {\n      errorMessage = msgPrefix + 'the argument to least must be a number';\n    } else if (!doLength && (objType !== 'date' && objType !== 'number')) {\n      var printObj = (objType === 'string') ? \"'\" + obj + \"'\" : obj;\n      errorMessage = msgPrefix + 'expected ' + printObj + ' to be a number or a date';\n    } else {\n      shouldThrow = false;\n    }\n\n    if (shouldThrow) {\n      throw new AssertionError(errorMessage, undefined, ssfi);\n    }\n\n    if (doLength) {\n      var descriptor = 'length'\n        , itemsCount;\n      if (objType === 'map' || objType === 'set') {\n        descriptor = 'size';\n        itemsCount = obj.size;\n      } else {\n        itemsCount = obj.length;\n      }\n      this.assert(\n          itemsCount >= n\n        , 'expected #{this} to have a ' + descriptor + ' at least #{exp} but got #{act}'\n        , 'expected #{this} to have a ' + descriptor + ' below #{exp}'\n        , n\n        , itemsCount\n      );\n    } else {\n      this.assert(\n          obj >= n\n        , 'expected #{this} to be at least #{exp}'\n        , 'expected #{this} to be below #{exp}'\n        , n\n      );\n    }\n  }\n\n  Assertion.addMethod('least', assertLeast);\n  Assertion.addMethod('gte', assertLeast);\n\n  /**\n   * ### .below(n[, msg])\n   *\n   * Asserts that the target is a number or a date less than the given number or date `n` respectively.\n   * However, it's often best to assert that the target is equal to its expected\n   * value.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.be.below(2); // Not recommended\n   *\n   * Add `.lengthOf` earlier in the chain to assert that the target's `length`\n   * or `size` is less than the given number `n`.\n   *\n   *     expect('foo').to.have.lengthOf(3); // Recommended\n   *     expect('foo').to.have.lengthOf.below(4); // Not recommended\n   *\n   *     expect([1, 2, 3]).to.have.length(3); // Recommended\n   *     expect([1, 2, 3]).to.have.lengthOf.below(4); // Not recommended\n   *\n   * Add `.not` earlier in the chain to negate `.below`.\n   *\n   *     expect(2).to.equal(2); // Recommended\n   *     expect(2).to.not.be.below(1); // Not recommended\n   *\n   * `.below` accepts an optional `msg` argument which is a custom error message\n   * to show when the assertion fails. The message can also be given as the\n   * second argument to `expect`.\n   *\n   *     expect(2).to.be.below(1, 'nooo why fail??');\n   *     expect(2, 'nooo why fail??').to.be.below(1);\n   *\n   * The aliases `.lt` and `.lessThan` can be used interchangeably with\n   * `.below`.\n   *\n   * @name below\n   * @alias lt\n   * @alias lessThan\n   * @param {Number} n\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertBelow (n, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , doLength = flag(this, 'doLength')\n      , flagMsg = flag(this, 'message')\n      , msgPrefix = ((flagMsg) ? flagMsg + ': ' : '')\n      , ssfi = flag(this, 'ssfi')\n      , objType = _.type(obj).toLowerCase()\n      , nType = _.type(n).toLowerCase()\n      , errorMessage\n      , shouldThrow = true;\n\n    if (doLength && objType !== 'map' && objType !== 'set') {\n      new Assertion(obj, flagMsg, ssfi, true).to.have.property('length');\n    }\n\n    if (!doLength && (objType === 'date' && nType !== 'date')) {\n      errorMessage = msgPrefix + 'the argument to below must be a date';\n    } else if (nType !== 'number' && (doLength || objType === 'number')) {\n      errorMessage = msgPrefix + 'the argument to below must be a number';\n    } else if (!doLength && (objType !== 'date' && objType !== 'number')) {\n      var printObj = (objType === 'string') ? \"'\" + obj + \"'\" : obj;\n      errorMessage = msgPrefix + 'expected ' + printObj + ' to be a number or a date';\n    } else {\n      shouldThrow = false;\n    }\n\n    if (shouldThrow) {\n      throw new AssertionError(errorMessage, undefined, ssfi);\n    }\n\n    if (doLength) {\n      var descriptor = 'length'\n        , itemsCount;\n      if (objType === 'map' || objType === 'set') {\n        descriptor = 'size';\n        itemsCount = obj.size;\n      } else {\n        itemsCount = obj.length;\n      }\n      this.assert(\n          itemsCount < n\n        , 'expected #{this} to have a ' + descriptor + ' below #{exp} but got #{act}'\n        , 'expected #{this} to not have a ' + descriptor + ' below #{exp}'\n        , n\n        , itemsCount\n      );\n    } else {\n      this.assert(\n          obj < n\n        , 'expected #{this} to be below #{exp}'\n        , 'expected #{this} to be at least #{exp}'\n        , n\n      );\n    }\n  }\n\n  Assertion.addMethod('below', assertBelow);\n  Assertion.addMethod('lt', assertBelow);\n  Assertion.addMethod('lessThan', assertBelow);\n\n  /**\n   * ### .most(n[, msg])\n   *\n   * Asserts that the target is a number or a date less than or equal to the given number\n   * or date `n` respectively. However, it's often best to assert that the target is equal to its\n   * expected value.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.be.at.most(2); // Not recommended\n   *     expect(1).to.be.at.most(1); // Not recommended\n   *\n   * Add `.lengthOf` earlier in the chain to assert that the target's `length`\n   * or `size` is less than or equal to the given number `n`.\n   *\n   *     expect('foo').to.have.lengthOf(3); // Recommended\n   *     expect('foo').to.have.lengthOf.at.most(4); // Not recommended\n   *\n   *     expect([1, 2, 3]).to.have.lengthOf(3); // Recommended\n   *     expect([1, 2, 3]).to.have.lengthOf.at.most(4); // Not recommended\n   *\n   * Add `.not` earlier in the chain to negate `.most`.\n   *\n   *     expect(2).to.equal(2); // Recommended\n   *     expect(2).to.not.be.at.most(1); // Not recommended\n   *\n   * `.most` accepts an optional `msg` argument which is a custom error message\n   * to show when the assertion fails. The message can also be given as the\n   * second argument to `expect`.\n   *\n   *     expect(2).to.be.at.most(1, 'nooo why fail??');\n   *     expect(2, 'nooo why fail??').to.be.at.most(1);\n   *\n   * The alias `.lte` can be used interchangeably with `.most`.\n   *\n   * @name most\n   * @alias lte\n   * @param {Number} n\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertMost (n, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , doLength = flag(this, 'doLength')\n      , flagMsg = flag(this, 'message')\n      , msgPrefix = ((flagMsg) ? flagMsg + ': ' : '')\n      , ssfi = flag(this, 'ssfi')\n      , objType = _.type(obj).toLowerCase()\n      , nType = _.type(n).toLowerCase()\n      , errorMessage\n      , shouldThrow = true;\n\n    if (doLength && objType !== 'map' && objType !== 'set') {\n      new Assertion(obj, flagMsg, ssfi, true).to.have.property('length');\n    }\n\n    if (!doLength && (objType === 'date' && nType !== 'date')) {\n      errorMessage = msgPrefix + 'the argument to most must be a date';\n    } else if (nType !== 'number' && (doLength || objType === 'number')) {\n      errorMessage = msgPrefix + 'the argument to most must be a number';\n    } else if (!doLength && (objType !== 'date' && objType !== 'number')) {\n      var printObj = (objType === 'string') ? \"'\" + obj + \"'\" : obj;\n      errorMessage = msgPrefix + 'expected ' + printObj + ' to be a number or a date';\n    } else {\n      shouldThrow = false;\n    }\n\n    if (shouldThrow) {\n      throw new AssertionError(errorMessage, undefined, ssfi);\n    }\n\n    if (doLength) {\n      var descriptor = 'length'\n        , itemsCount;\n      if (objType === 'map' || objType === 'set') {\n        descriptor = 'size';\n        itemsCount = obj.size;\n      } else {\n        itemsCount = obj.length;\n      }\n      this.assert(\n          itemsCount <= n\n        , 'expected #{this} to have a ' + descriptor + ' at most #{exp} but got #{act}'\n        , 'expected #{this} to have a ' + descriptor + ' above #{exp}'\n        , n\n        , itemsCount\n      );\n    } else {\n      this.assert(\n          obj <= n\n        , 'expected #{this} to be at most #{exp}'\n        , 'expected #{this} to be above #{exp}'\n        , n\n      );\n    }\n  }\n\n  Assertion.addMethod('most', assertMost);\n  Assertion.addMethod('lte', assertMost);\n\n  /**\n   * ### .within(start, finish[, msg])\n   *\n   * Asserts that the target is a number or a date greater than or equal to the given\n   * number or date `start`, and less than or equal to the given number or date `finish` respectively.\n   * However, it's often best to assert that the target is equal to its expected\n   * value.\n   *\n   *     expect(2).to.equal(2); // Recommended\n   *     expect(2).to.be.within(1, 3); // Not recommended\n   *     expect(2).to.be.within(2, 3); // Not recommended\n   *     expect(2).to.be.within(1, 2); // Not recommended\n   *\n   * Add `.lengthOf` earlier in the chain to assert that the target's `length`\n   * or `size` is greater than or equal to the given number `start`, and less\n   * than or equal to the given number `finish`.\n   *\n   *     expect('foo').to.have.lengthOf(3); // Recommended\n   *     expect('foo').to.have.lengthOf.within(2, 4); // Not recommended\n   *\n   *     expect([1, 2, 3]).to.have.lengthOf(3); // Recommended\n   *     expect([1, 2, 3]).to.have.lengthOf.within(2, 4); // Not recommended\n   *\n   * Add `.not` earlier in the chain to negate `.within`.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.not.be.within(2, 4); // Not recommended\n   *\n   * `.within` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`.\n   *\n   *     expect(4).to.be.within(1, 3, 'nooo why fail??');\n   *     expect(4, 'nooo why fail??').to.be.within(1, 3);\n   *\n   * @name within\n   * @param {Number} start lower bound inclusive\n   * @param {Number} finish upper bound inclusive\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addMethod('within', function (start, finish, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , doLength = flag(this, 'doLength')\n      , flagMsg = flag(this, 'message')\n      , msgPrefix = ((flagMsg) ? flagMsg + ': ' : '')\n      , ssfi = flag(this, 'ssfi')\n      , objType = _.type(obj).toLowerCase()\n      , startType = _.type(start).toLowerCase()\n      , finishType = _.type(finish).toLowerCase()\n      , errorMessage\n      , shouldThrow = true\n      , range = (startType === 'date' && finishType === 'date')\n          ? start.toUTCString() + '..' + finish.toUTCString()\n          : start + '..' + finish;\n\n    if (doLength && objType !== 'map' && objType !== 'set') {\n      new Assertion(obj, flagMsg, ssfi, true).to.have.property('length');\n    }\n\n    if (!doLength && (objType === 'date' && (startType !== 'date' || finishType !== 'date'))) {\n      errorMessage = msgPrefix + 'the arguments to within must be dates';\n    } else if ((startType !== 'number' || finishType !== 'number') && (doLength || objType === 'number')) {\n      errorMessage = msgPrefix + 'the arguments to within must be numbers';\n    } else if (!doLength && (objType !== 'date' && objType !== 'number')) {\n      var printObj = (objType === 'string') ? \"'\" + obj + \"'\" : obj;\n      errorMessage = msgPrefix + 'expected ' + printObj + ' to be a number or a date';\n    } else {\n      shouldThrow = false;\n    }\n\n    if (shouldThrow) {\n      throw new AssertionError(errorMessage, undefined, ssfi);\n    }\n\n    if (doLength) {\n      var descriptor = 'length'\n        , itemsCount;\n      if (objType === 'map' || objType === 'set') {\n        descriptor = 'size';\n        itemsCount = obj.size;\n      } else {\n        itemsCount = obj.length;\n      }\n      this.assert(\n          itemsCount >= start && itemsCount <= finish\n        , 'expected #{this} to have a ' + descriptor + ' within ' + range\n        , 'expected #{this} to not have a ' + descriptor + ' within ' + range\n      );\n    } else {\n      this.assert(\n          obj >= start && obj <= finish\n        , 'expected #{this} to be within ' + range\n        , 'expected #{this} to not be within ' + range\n      );\n    }\n  });\n\n  /**\n   * ### .instanceof(constructor[, msg])\n   *\n   * Asserts that the target is an instance of the given `constructor`.\n   *\n   *     function Cat () { }\n   *\n   *     expect(new Cat()).to.be.an.instanceof(Cat);\n   *     expect([1, 2]).to.be.an.instanceof(Array);\n   *\n   * Add `.not` earlier in the chain to negate `.instanceof`.\n   *\n   *     expect({a: 1}).to.not.be.an.instanceof(Array);\n   *\n   * `.instanceof` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`.\n   *\n   *     expect(1).to.be.an.instanceof(Array, 'nooo why fail??');\n   *     expect(1, 'nooo why fail??').to.be.an.instanceof(Array);\n   *\n   * Due to limitations in ES5, `.instanceof` may not always work as expected\n   * when using a transpiler such as Babel or TypeScript. In particular, it may\n   * produce unexpected results when subclassing built-in object such as\n   * `Array`, `Error`, and `Map`. See your transpiler's docs for details:\n   *\n   * - ([Babel](https://babeljs.io/docs/usage/caveats/#classes))\n   * - ([TypeScript](https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work))\n   *\n   * The alias `.instanceOf` can be used interchangeably with `.instanceof`.\n   *\n   * @name instanceof\n   * @param {Constructor} constructor\n   * @param {String} msg _optional_\n   * @alias instanceOf\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertInstanceOf (constructor, msg) {\n    if (msg) flag(this, 'message', msg);\n\n    var target = flag(this, 'object')\n    var ssfi = flag(this, 'ssfi');\n    var flagMsg = flag(this, 'message');\n\n    try {\n      var isInstanceOf = target instanceof constructor;\n    } catch (err) {\n      if (err instanceof TypeError) {\n        flagMsg = flagMsg ? flagMsg + ': ' : '';\n        throw new AssertionError(\n          flagMsg + 'The instanceof assertion needs a constructor but '\n            + _.type(constructor) + ' was given.',\n          undefined,\n          ssfi\n        );\n      }\n      throw err;\n    }\n\n    var name = _.getName(constructor);\n    if (name === null) {\n      name = 'an unnamed constructor';\n    }\n\n    this.assert(\n        isInstanceOf\n      , 'expected #{this} to be an instance of ' + name\n      , 'expected #{this} to not be an instance of ' + name\n    );\n  };\n\n  Assertion.addMethod('instanceof', assertInstanceOf);\n  Assertion.addMethod('instanceOf', assertInstanceOf);\n\n  /**\n   * ### .property(name[, val[, msg]])\n   *\n   * Asserts that the target has a property with the given key `name`.\n   *\n   *     expect({a: 1}).to.have.property('a');\n   *\n   * When `val` is provided, `.property` also asserts that the property's value\n   * is equal to the given `val`.\n   *\n   *     expect({a: 1}).to.have.property('a', 1);\n   *\n   * By default, strict (`===`) equality is used. Add `.deep` earlier in the\n   * chain to use deep equality instead. See the `deep-eql` project page for\n   * info on the deep equality algorithm: https://github.com/chaijs/deep-eql.\n   *\n   *     // Target object deeply (but not strictly) has property `x: {a: 1}`\n   *     expect({x: {a: 1}}).to.have.deep.property('x', {a: 1});\n   *     expect({x: {a: 1}}).to.not.have.property('x', {a: 1});\n   *\n   * The target's enumerable and non-enumerable properties are always included\n   * in the search. By default, both own and inherited properties are included.\n   * Add `.own` earlier in the chain to exclude inherited properties from the\n   * search.\n   *\n   *     Object.prototype.b = 2;\n   *\n   *     expect({a: 1}).to.have.own.property('a');\n   *     expect({a: 1}).to.have.own.property('a', 1);\n   *     expect({a: 1}).to.have.property('b');\n   *     expect({a: 1}).to.not.have.own.property('b');\n   *\n   * `.deep` and `.own` can be combined.\n   *\n   *     expect({x: {a: 1}}).to.have.deep.own.property('x', {a: 1});\n   *\n   * Add `.nested` earlier in the chain to enable dot- and bracket-notation when\n   * referencing nested properties.\n   *\n   *     expect({a: {b: ['x', 'y']}}).to.have.nested.property('a.b[1]');\n   *     expect({a: {b: ['x', 'y']}}).to.have.nested.property('a.b[1]', 'y');\n   *\n   * If `.` or `[]` are part of an actual property name, they can be escaped by\n   * adding two backslashes before them.\n   *\n   *     expect({'.a': {'[b]': 'x'}}).to.have.nested.property('\\\\.a.\\\\[b\\\\]');\n   *\n   * `.deep` and `.nested` can be combined.\n   *\n   *     expect({a: {b: [{c: 3}]}})\n   *       .to.have.deep.nested.property('a.b[0]', {c: 3});\n   *\n   * `.own` and `.nested` cannot be combined.\n   *\n   * Add `.not` earlier in the chain to negate `.property`.\n   *\n   *     expect({a: 1}).to.not.have.property('b');\n   *\n   * However, it's dangerous to negate `.property` when providing `val`. The\n   * problem is that it creates uncertain expectations by asserting that the\n   * target either doesn't have a property with the given key `name`, or that it\n   * does have a property with the given key `name` but its value isn't equal to\n   * the given `val`. It's often best to identify the exact output that's\n   * expected, and then write an assertion that only accepts that exact output.\n   *\n   * When the target isn't expected to have a property with the given key\n   * `name`, it's often best to assert exactly that.\n   *\n   *     expect({b: 2}).to.not.have.property('a'); // Recommended\n   *     expect({b: 2}).to.not.have.property('a', 1); // Not recommended\n   *\n   * When the target is expected to have a property with the given key `name`,\n   * it's often best to assert that the property has its expected value, rather\n   * than asserting that it doesn't have one of many unexpected values.\n   *\n   *     expect({a: 3}).to.have.property('a', 3); // Recommended\n   *     expect({a: 3}).to.not.have.property('a', 1); // Not recommended\n   *\n   * `.property` changes the target of any assertions that follow in the chain\n   * to be the value of the property from the original target object.\n   *\n   *     expect({a: 1}).to.have.property('a').that.is.a('number');\n   *\n   * `.property` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`. When not providing `val`, only use the\n   * second form.\n   *\n   *     // Recommended\n   *     expect({a: 1}).to.have.property('a', 2, 'nooo why fail??');\n   *     expect({a: 1}, 'nooo why fail??').to.have.property('a', 2);\n   *     expect({a: 1}, 'nooo why fail??').to.have.property('b');\n   *\n   *     // Not recommended\n   *     expect({a: 1}).to.have.property('b', undefined, 'nooo why fail??');\n   *\n   * The above assertion isn't the same thing as not providing `val`. Instead,\n   * it's asserting that the target object has a `b` property that's equal to\n   * `undefined`.\n   *\n   * The assertions `.ownProperty` and `.haveOwnProperty` can be used\n   * interchangeably with `.own.property`.\n   *\n   * @name property\n   * @param {String} name\n   * @param {Mixed} val (optional)\n   * @param {String} msg _optional_\n   * @returns value of property for chaining\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertProperty (name, val, msg) {\n    if (msg) flag(this, 'message', msg);\n\n    var isNested = flag(this, 'nested')\n      , isOwn = flag(this, 'own')\n      , flagMsg = flag(this, 'message')\n      , obj = flag(this, 'object')\n      , ssfi = flag(this, 'ssfi')\n      , nameType = typeof name;\n\n    flagMsg = flagMsg ? flagMsg + ': ' : '';\n\n    if (isNested) {\n      if (nameType !== 'string') {\n        throw new AssertionError(\n          flagMsg + 'the argument to property must be a string when using nested syntax',\n          undefined,\n          ssfi\n        );\n      }\n    } else {\n      if (nameType !== 'string' && nameType !== 'number' && nameType !== 'symbol') {\n        throw new AssertionError(\n          flagMsg + 'the argument to property must be a string, number, or symbol',\n          undefined,\n          ssfi\n        );\n      }\n    }\n\n    if (isNested && isOwn) {\n      throw new AssertionError(\n        flagMsg + 'The \"nested\" and \"own\" flags cannot be combined.',\n        undefined,\n        ssfi\n      );\n    }\n\n    if (obj === null || obj === undefined) {\n      throw new AssertionError(\n        flagMsg + 'Target cannot be null or undefined.',\n        undefined,\n        ssfi\n      );\n    }\n\n    var isDeep = flag(this, 'deep')\n      , negate = flag(this, 'negate')\n      , pathInfo = isNested ? _.getPathInfo(obj, name) : null\n      , value = isNested ? pathInfo.value : obj[name];\n\n    var descriptor = '';\n    if (isDeep) descriptor += 'deep ';\n    if (isOwn) descriptor += 'own ';\n    if (isNested) descriptor += 'nested ';\n    descriptor += 'property ';\n\n    var hasProperty;\n    if (isOwn) hasProperty = Object.prototype.hasOwnProperty.call(obj, name);\n    else if (isNested) hasProperty = pathInfo.exists;\n    else hasProperty = _.hasProperty(obj, name);\n\n    // When performing a negated assertion for both name and val, merely having\n    // a property with the given name isn't enough to cause the assertion to\n    // fail. It must both have a property with the given name, and the value of\n    // that property must equal the given val. Therefore, skip this assertion in\n    // favor of the next.\n    if (!negate || arguments.length === 1) {\n      this.assert(\n          hasProperty\n        , 'expected #{this} to have ' + descriptor + _.inspect(name)\n        , 'expected #{this} to not have ' + descriptor + _.inspect(name));\n    }\n\n    if (arguments.length > 1) {\n      this.assert(\n          hasProperty && (isDeep ? _.eql(val, value) : val === value)\n        , 'expected #{this} to have ' + descriptor + _.inspect(name) + ' of #{exp}, but got #{act}'\n        , 'expected #{this} to not have ' + descriptor + _.inspect(name) + ' of #{act}'\n        , val\n        , value\n      );\n    }\n\n    flag(this, 'object', value);\n  }\n\n  Assertion.addMethod('property', assertProperty);\n\n  function assertOwnProperty (name, value, msg) {\n    flag(this, 'own', true);\n    assertProperty.apply(this, arguments);\n  }\n\n  Assertion.addMethod('ownProperty', assertOwnProperty);\n  Assertion.addMethod('haveOwnProperty', assertOwnProperty);\n\n  /**\n   * ### .ownPropertyDescriptor(name[, descriptor[, msg]])\n   *\n   * Asserts that the target has its own property descriptor with the given key\n   * `name`. Enumerable and non-enumerable properties are included in the\n   * search.\n   *\n   *     expect({a: 1}).to.have.ownPropertyDescriptor('a');\n   *\n   * When `descriptor` is provided, `.ownPropertyDescriptor` also asserts that\n   * the property's descriptor is deeply equal to the given `descriptor`. See\n   * the `deep-eql` project page for info on the deep equality algorithm:\n   * https://github.com/chaijs/deep-eql.\n   *\n   *     expect({a: 1}).to.have.ownPropertyDescriptor('a', {\n   *       configurable: true,\n   *       enumerable: true,\n   *       writable: true,\n   *       value: 1,\n   *     });\n   *\n   * Add `.not` earlier in the chain to negate `.ownPropertyDescriptor`.\n   *\n   *     expect({a: 1}).to.not.have.ownPropertyDescriptor('b');\n   *\n   * However, it's dangerous to negate `.ownPropertyDescriptor` when providing\n   * a `descriptor`. The problem is that it creates uncertain expectations by\n   * asserting that the target either doesn't have a property descriptor with\n   * the given key `name`, or that it does have a property descriptor with the\n   * given key `name` but its not deeply equal to the given `descriptor`. It's\n   * often best to identify the exact output that's expected, and then write an\n   * assertion that only accepts that exact output.\n   *\n   * When the target isn't expected to have a property descriptor with the given\n   * key `name`, it's often best to assert exactly that.\n   *\n   *     // Recommended\n   *     expect({b: 2}).to.not.have.ownPropertyDescriptor('a');\n   *\n   *     // Not recommended\n   *     expect({b: 2}).to.not.have.ownPropertyDescriptor('a', {\n   *       configurable: true,\n   *       enumerable: true,\n   *       writable: true,\n   *       value: 1,\n   *     });\n   *\n   * When the target is expected to have a property descriptor with the given\n   * key `name`, it's often best to assert that the property has its expected\n   * descriptor, rather than asserting that it doesn't have one of many\n   * unexpected descriptors.\n   *\n   *     // Recommended\n   *     expect({a: 3}).to.have.ownPropertyDescriptor('a', {\n   *       configurable: true,\n   *       enumerable: true,\n   *       writable: true,\n   *       value: 3,\n   *     });\n   *\n   *     // Not recommended\n   *     expect({a: 3}).to.not.have.ownPropertyDescriptor('a', {\n   *       configurable: true,\n   *       enumerable: true,\n   *       writable: true,\n   *       value: 1,\n   *     });\n   *\n   * `.ownPropertyDescriptor` changes the target of any assertions that follow\n   * in the chain to be the value of the property descriptor from the original\n   * target object.\n   *\n   *     expect({a: 1}).to.have.ownPropertyDescriptor('a')\n   *       .that.has.property('enumerable', true);\n   *\n   * `.ownPropertyDescriptor` accepts an optional `msg` argument which is a\n   * custom error message to show when the assertion fails. The message can also\n   * be given as the second argument to `expect`. When not providing\n   * `descriptor`, only use the second form.\n   *\n   *     // Recommended\n   *     expect({a: 1}).to.have.ownPropertyDescriptor('a', {\n   *       configurable: true,\n   *       enumerable: true,\n   *       writable: true,\n   *       value: 2,\n   *     }, 'nooo why fail??');\n   *\n   *     // Recommended\n   *     expect({a: 1}, 'nooo why fail??').to.have.ownPropertyDescriptor('a', {\n   *       configurable: true,\n   *       enumerable: true,\n   *       writable: true,\n   *       value: 2,\n   *     });\n   *\n   *     // Recommended\n   *     expect({a: 1}, 'nooo why fail??').to.have.ownPropertyDescriptor('b');\n   *\n   *     // Not recommended\n   *     expect({a: 1})\n   *       .to.have.ownPropertyDescriptor('b', undefined, 'nooo why fail??');\n   *\n   * The above assertion isn't the same thing as not providing `descriptor`.\n   * Instead, it's asserting that the target object has a `b` property\n   * descriptor that's deeply equal to `undefined`.\n   *\n   * The alias `.haveOwnPropertyDescriptor` can be used interchangeably with\n   * `.ownPropertyDescriptor`.\n   *\n   * @name ownPropertyDescriptor\n   * @alias haveOwnPropertyDescriptor\n   * @param {String} name\n   * @param {Object} descriptor _optional_\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertOwnPropertyDescriptor (name, descriptor, msg) {\n    if (typeof descriptor === 'string') {\n      msg = descriptor;\n      descriptor = null;\n    }\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    var actualDescriptor = Object.getOwnPropertyDescriptor(Object(obj), name);\n    if (actualDescriptor && descriptor) {\n      this.assert(\n          _.eql(descriptor, actualDescriptor)\n        , 'expected the own property descriptor for ' + _.inspect(name) + ' on #{this} to match ' + _.inspect(descriptor) + ', got ' + _.inspect(actualDescriptor)\n        , 'expected the own property descriptor for ' + _.inspect(name) + ' on #{this} to not match ' + _.inspect(descriptor)\n        , descriptor\n        , actualDescriptor\n        , true\n      );\n    } else {\n      this.assert(\n          actualDescriptor\n        , 'expected #{this} to have an own property descriptor for ' + _.inspect(name)\n        , 'expected #{this} to not have an own property descriptor for ' + _.inspect(name)\n      );\n    }\n    flag(this, 'object', actualDescriptor);\n  }\n\n  Assertion.addMethod('ownPropertyDescriptor', assertOwnPropertyDescriptor);\n  Assertion.addMethod('haveOwnPropertyDescriptor', assertOwnPropertyDescriptor);\n\n  /**\n   * ### .lengthOf(n[, msg])\n   *\n   * Asserts that the target's `length` or `size` is equal to the given number\n   * `n`.\n   *\n   *     expect([1, 2, 3]).to.have.lengthOf(3);\n   *     expect('foo').to.have.lengthOf(3);\n   *     expect(new Set([1, 2, 3])).to.have.lengthOf(3);\n   *     expect(new Map([['a', 1], ['b', 2], ['c', 3]])).to.have.lengthOf(3);\n   *\n   * Add `.not` earlier in the chain to negate `.lengthOf`. However, it's often\n   * best to assert that the target's `length` property is equal to its expected\n   * value, rather than not equal to one of many unexpected values.\n   *\n   *     expect('foo').to.have.lengthOf(3); // Recommended\n   *     expect('foo').to.not.have.lengthOf(4); // Not recommended\n   *\n   * `.lengthOf` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`.\n   *\n   *     expect([1, 2, 3]).to.have.lengthOf(2, 'nooo why fail??');\n   *     expect([1, 2, 3], 'nooo why fail??').to.have.lengthOf(2);\n   *\n   * `.lengthOf` can also be used as a language chain, causing all `.above`,\n   * `.below`, `.least`, `.most`, and `.within` assertions that follow in the\n   * chain to use the target's `length` property as the target. However, it's\n   * often best to assert that the target's `length` property is equal to its\n   * expected length, rather than asserting that its `length` property falls\n   * within some range of values.\n   *\n   *     // Recommended\n   *     expect([1, 2, 3]).to.have.lengthOf(3);\n   *\n   *     // Not recommended\n   *     expect([1, 2, 3]).to.have.lengthOf.above(2);\n   *     expect([1, 2, 3]).to.have.lengthOf.below(4);\n   *     expect([1, 2, 3]).to.have.lengthOf.at.least(3);\n   *     expect([1, 2, 3]).to.have.lengthOf.at.most(3);\n   *     expect([1, 2, 3]).to.have.lengthOf.within(2,4);\n   *\n   * Due to a compatibility issue, the alias `.length` can't be chained directly\n   * off of an uninvoked method such as `.a`. Therefore, `.length` can't be used\n   * interchangeably with `.lengthOf` in every situation. It's recommended to\n   * always use `.lengthOf` instead of `.length`.\n   *\n   *     expect([1, 2, 3]).to.have.a.length(3); // incompatible; throws error\n   *     expect([1, 2, 3]).to.have.a.lengthOf(3);  // passes as expected\n   *\n   * @name lengthOf\n   * @alias length\n   * @param {Number} n\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertLengthChain () {\n    flag(this, 'doLength', true);\n  }\n\n  function assertLength (n, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , objType = _.type(obj).toLowerCase()\n      , flagMsg = flag(this, 'message')\n      , ssfi = flag(this, 'ssfi')\n      , descriptor = 'length'\n      , itemsCount;\n\n    switch (objType) {\n      case 'map':\n      case 'set':\n        descriptor = 'size';\n        itemsCount = obj.size;\n        break;\n      default:\n        new Assertion(obj, flagMsg, ssfi, true).to.have.property('length');\n        itemsCount = obj.length;\n    }\n\n    this.assert(\n        itemsCount == n\n      , 'expected #{this} to have a ' + descriptor + ' of #{exp} but got #{act}'\n      , 'expected #{this} to not have a ' + descriptor + ' of #{act}'\n      , n\n      , itemsCount\n    );\n  }\n\n  Assertion.addChainableMethod('length', assertLength, assertLengthChain);\n  Assertion.addChainableMethod('lengthOf', assertLength, assertLengthChain);\n\n  /**\n   * ### .match(re[, msg])\n   *\n   * Asserts that the target matches the given regular expression `re`.\n   *\n   *     expect('foobar').to.match(/^foo/);\n   *\n   * Add `.not` earlier in the chain to negate `.match`.\n   *\n   *     expect('foobar').to.not.match(/taco/);\n   *\n   * `.match` accepts an optional `msg` argument which is a custom error message\n   * to show when the assertion fails. The message can also be given as the\n   * second argument to `expect`.\n   *\n   *     expect('foobar').to.match(/taco/, 'nooo why fail??');\n   *     expect('foobar', 'nooo why fail??').to.match(/taco/);\n   *\n   * The alias `.matches` can be used interchangeably with `.match`.\n   *\n   * @name match\n   * @alias matches\n   * @param {RegExp} re\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n  function assertMatch(re, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    this.assert(\n        re.exec(obj)\n      , 'expected #{this} to match ' + re\n      , 'expected #{this} not to match ' + re\n    );\n  }\n\n  Assertion.addMethod('match', assertMatch);\n  Assertion.addMethod('matches', assertMatch);\n\n  /**\n   * ### .string(str[, msg])\n   *\n   * Asserts that the target string contains the given substring `str`.\n   *\n   *     expect('foobar').to.have.string('bar');\n   *\n   * Add `.not` earlier in the chain to negate `.string`.\n   *\n   *     expect('foobar').to.not.have.string('taco');\n   *\n   * `.string` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`.\n   *\n   *     expect('foobar').to.have.string('taco', 'nooo why fail??');\n   *     expect('foobar', 'nooo why fail??').to.have.string('taco');\n   *\n   * @name string\n   * @param {String} str\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addMethod('string', function (str, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , flagMsg = flag(this, 'message')\n      , ssfi = flag(this, 'ssfi');\n    new Assertion(obj, flagMsg, ssfi, true).is.a('string');\n\n    this.assert(\n        ~obj.indexOf(str)\n      , 'expected #{this} to contain ' + _.inspect(str)\n      , 'expected #{this} to not contain ' + _.inspect(str)\n    );\n  });\n\n  /**\n   * ### .keys(key1[, key2[, ...]])\n   *\n   * Asserts that the target object, array, map, or set has the given keys. Only\n   * the target's own inherited properties are included in the search.\n   *\n   * When the target is an object or array, keys can be provided as one or more\n   * string arguments, a single array argument, or a single object argument. In\n   * the latter case, only the keys in the given object matter; the values are\n   * ignored.\n   *\n   *     expect({a: 1, b: 2}).to.have.all.keys('a', 'b');\n   *     expect(['x', 'y']).to.have.all.keys(0, 1);\n   *\n   *     expect({a: 1, b: 2}).to.have.all.keys(['a', 'b']);\n   *     expect(['x', 'y']).to.have.all.keys([0, 1]);\n   *\n   *     expect({a: 1, b: 2}).to.have.all.keys({a: 4, b: 5}); // ignore 4 and 5\n   *     expect(['x', 'y']).to.have.all.keys({0: 4, 1: 5}); // ignore 4 and 5\n   *\n   * When the target is a map or set, each key must be provided as a separate\n   * argument.\n   *\n   *     expect(new Map([['a', 1], ['b', 2]])).to.have.all.keys('a', 'b');\n   *     expect(new Set(['a', 'b'])).to.have.all.keys('a', 'b');\n   *\n   * Because `.keys` does different things based on the target's type, it's\n   * important to check the target's type before using `.keys`. See the `.a` doc\n   * for info on testing a target's type.\n   *\n   *     expect({a: 1, b: 2}).to.be.an('object').that.has.all.keys('a', 'b');\n   *\n   * By default, strict (`===`) equality is used to compare keys of maps and\n   * sets. Add `.deep` earlier in the chain to use deep equality instead. See\n   * the `deep-eql` project page for info on the deep equality algorithm:\n   * https://github.com/chaijs/deep-eql.\n   *\n   *     // Target set deeply (but not strictly) has key `{a: 1}`\n   *     expect(new Set([{a: 1}])).to.have.all.deep.keys([{a: 1}]);\n   *     expect(new Set([{a: 1}])).to.not.have.all.keys([{a: 1}]);\n   *\n   * By default, the target must have all of the given keys and no more. Add\n   * `.any` earlier in the chain to only require that the target have at least\n   * one of the given keys. Also, add `.not` earlier in the chain to negate\n   * `.keys`. It's often best to add `.any` when negating `.keys`, and to use\n   * `.all` when asserting `.keys` without negation.\n   *\n   * When negating `.keys`, `.any` is preferred because `.not.any.keys` asserts\n   * exactly what's expected of the output, whereas `.not.all.keys` creates\n   * uncertain expectations.\n   *\n   *     // Recommended; asserts that target doesn't have any of the given keys\n   *     expect({a: 1, b: 2}).to.not.have.any.keys('c', 'd');\n   *\n   *     // Not recommended; asserts that target doesn't have all of the given\n   *     // keys but may or may not have some of them\n   *     expect({a: 1, b: 2}).to.not.have.all.keys('c', 'd');\n   *\n   * When asserting `.keys` without negation, `.all` is preferred because\n   * `.all.keys` asserts exactly what's expected of the output, whereas\n   * `.any.keys` creates uncertain expectations.\n   *\n   *     // Recommended; asserts that target has all the given keys\n   *     expect({a: 1, b: 2}).to.have.all.keys('a', 'b');\n   *\n   *     // Not recommended; asserts that target has at least one of the given\n   *     // keys but may or may not have more of them\n   *     expect({a: 1, b: 2}).to.have.any.keys('a', 'b');\n   *\n   * Note that `.all` is used by default when neither `.all` nor `.any` appear\n   * earlier in the chain. However, it's often best to add `.all` anyway because\n   * it improves readability.\n   *\n   *     // Both assertions are identical\n   *     expect({a: 1, b: 2}).to.have.all.keys('a', 'b'); // Recommended\n   *     expect({a: 1, b: 2}).to.have.keys('a', 'b'); // Not recommended\n   *\n   * Add `.include` earlier in the chain to require that the target's keys be a\n   * superset of the expected keys, rather than identical sets.\n   *\n   *     // Target object's keys are a superset of ['a', 'b'] but not identical\n   *     expect({a: 1, b: 2, c: 3}).to.include.all.keys('a', 'b');\n   *     expect({a: 1, b: 2, c: 3}).to.not.have.all.keys('a', 'b');\n   *\n   * However, if `.any` and `.include` are combined, only the `.any` takes\n   * effect. The `.include` is ignored in this case.\n   *\n   *     // Both assertions are identical\n   *     expect({a: 1}).to.have.any.keys('a', 'b');\n   *     expect({a: 1}).to.include.any.keys('a', 'b');\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect({a: 1}, 'nooo why fail??').to.have.key('b');\n   *\n   * The alias `.key` can be used interchangeably with `.keys`.\n   *\n   * @name keys\n   * @alias key\n   * @param {...String|Array|Object} keys\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertKeys (keys) {\n    var obj = flag(this, 'object')\n      , objType = _.type(obj)\n      , keysType = _.type(keys)\n      , ssfi = flag(this, 'ssfi')\n      , isDeep = flag(this, 'deep')\n      , str\n      , deepStr = ''\n      , actual\n      , ok = true\n      , flagMsg = flag(this, 'message');\n\n    flagMsg = flagMsg ? flagMsg + ': ' : '';\n    var mixedArgsMsg = flagMsg + 'when testing keys against an object or an array you must give a single Array|Object|String argument or multiple String arguments';\n\n    if (objType === 'Map' || objType === 'Set') {\n      deepStr = isDeep ? 'deeply ' : '';\n      actual = [];\n\n      // Map and Set '.keys' aren't supported in IE 11. Therefore, use .forEach.\n      obj.forEach(function (val, key) { actual.push(key) });\n\n      if (keysType !== 'Array') {\n        keys = Array.prototype.slice.call(arguments);\n      }\n    } else {\n      actual = _.getOwnEnumerableProperties(obj);\n\n      switch (keysType) {\n        case 'Array':\n          if (arguments.length > 1) {\n            throw new AssertionError(mixedArgsMsg, undefined, ssfi);\n          }\n          break;\n        case 'Object':\n          if (arguments.length > 1) {\n            throw new AssertionError(mixedArgsMsg, undefined, ssfi);\n          }\n          keys = Object.keys(keys);\n          break;\n        default:\n          keys = Array.prototype.slice.call(arguments);\n      }\n\n      // Only stringify non-Symbols because Symbols would become \"Symbol()\"\n      keys = keys.map(function (val) {\n        return typeof val === 'symbol' ? val : String(val);\n      });\n    }\n\n    if (!keys.length) {\n      throw new AssertionError(flagMsg + 'keys required', undefined, ssfi);\n    }\n\n    var len = keys.length\n      , any = flag(this, 'any')\n      , all = flag(this, 'all')\n      , expected = keys;\n\n    if (!any && !all) {\n      all = true;\n    }\n\n    // Has any\n    if (any) {\n      ok = expected.some(function(expectedKey) {\n        return actual.some(function(actualKey) {\n          if (isDeep) {\n            return _.eql(expectedKey, actualKey);\n          } else {\n            return expectedKey === actualKey;\n          }\n        });\n      });\n    }\n\n    // Has all\n    if (all) {\n      ok = expected.every(function(expectedKey) {\n        return actual.some(function(actualKey) {\n          if (isDeep) {\n            return _.eql(expectedKey, actualKey);\n          } else {\n            return expectedKey === actualKey;\n          }\n        });\n      });\n\n      if (!flag(this, 'contains')) {\n        ok = ok && keys.length == actual.length;\n      }\n    }\n\n    // Key string\n    if (len > 1) {\n      keys = keys.map(function(key) {\n        return _.inspect(key);\n      });\n      var last = keys.pop();\n      if (all) {\n        str = keys.join(', ') + ', and ' + last;\n      }\n      if (any) {\n        str = keys.join(', ') + ', or ' + last;\n      }\n    } else {\n      str = _.inspect(keys[0]);\n    }\n\n    // Form\n    str = (len > 1 ? 'keys ' : 'key ') + str;\n\n    // Have / include\n    str = (flag(this, 'contains') ? 'contain ' : 'have ') + str;\n\n    // Assertion\n    this.assert(\n        ok\n      , 'expected #{this} to ' + deepStr + str\n      , 'expected #{this} to not ' + deepStr + str\n      , expected.slice(0).sort(_.compareByInspect)\n      , actual.sort(_.compareByInspect)\n      , true\n    );\n  }\n\n  Assertion.addMethod('keys', assertKeys);\n  Assertion.addMethod('key', assertKeys);\n\n  /**\n   * ### .throw([errorLike], [errMsgMatcher], [msg])\n   *\n   * When no arguments are provided, `.throw` invokes the target function and\n   * asserts that an error is thrown.\n   *\n   *     var badFn = function () { throw new TypeError('Illegal salmon!'); };\n   *\n   *     expect(badFn).to.throw();\n   *\n   * When one argument is provided, and it's an error constructor, `.throw`\n   * invokes the target function and asserts that an error is thrown that's an\n   * instance of that error constructor.\n   *\n   *     var badFn = function () { throw new TypeError('Illegal salmon!'); };\n   *\n   *     expect(badFn).to.throw(TypeError);\n   *\n   * When one argument is provided, and it's an error instance, `.throw` invokes\n   * the target function and asserts that an error is thrown that's strictly\n   * (`===`) equal to that error instance.\n   *\n   *     var err = new TypeError('Illegal salmon!');\n   *     var badFn = function () { throw err; };\n   *\n   *     expect(badFn).to.throw(err);\n   *\n   * When one argument is provided, and it's a string, `.throw` invokes the\n   * target function and asserts that an error is thrown with a message that\n   * contains that string.\n   *\n   *     var badFn = function () { throw new TypeError('Illegal salmon!'); };\n   *\n   *     expect(badFn).to.throw('salmon');\n   *\n   * When one argument is provided, and it's a regular expression, `.throw`\n   * invokes the target function and asserts that an error is thrown with a\n   * message that matches that regular expression.\n   *\n   *     var badFn = function () { throw new TypeError('Illegal salmon!'); };\n   *\n   *     expect(badFn).to.throw(/salmon/);\n   *\n   * When two arguments are provided, and the first is an error instance or\n   * constructor, and the second is a string or regular expression, `.throw`\n   * invokes the function and asserts that an error is thrown that fulfills both\n   * conditions as described above.\n   *\n   *     var err = new TypeError('Illegal salmon!');\n   *     var badFn = function () { throw err; };\n   *\n   *     expect(badFn).to.throw(TypeError, 'salmon');\n   *     expect(badFn).to.throw(TypeError, /salmon/);\n   *     expect(badFn).to.throw(err, 'salmon');\n   *     expect(badFn).to.throw(err, /salmon/);\n   *\n   * Add `.not` earlier in the chain to negate `.throw`.\n   *\n   *     var goodFn = function () {};\n   *\n   *     expect(goodFn).to.not.throw();\n   *\n   * However, it's dangerous to negate `.throw` when providing any arguments.\n   * The problem is that it creates uncertain expectations by asserting that the\n   * target either doesn't throw an error, or that it throws an error but of a\n   * different type than the given type, or that it throws an error of the given\n   * type but with a message that doesn't include the given string. It's often\n   * best to identify the exact output that's expected, and then write an\n   * assertion that only accepts that exact output.\n   *\n   * When the target isn't expected to throw an error, it's often best to assert\n   * exactly that.\n   *\n   *     var goodFn = function () {};\n   *\n   *     expect(goodFn).to.not.throw(); // Recommended\n   *     expect(goodFn).to.not.throw(ReferenceError, 'x'); // Not recommended\n   *\n   * When the target is expected to throw an error, it's often best to assert\n   * that the error is of its expected type, and has a message that includes an\n   * expected string, rather than asserting that it doesn't have one of many\n   * unexpected types, and doesn't have a message that includes some string.\n   *\n   *     var badFn = function () { throw new TypeError('Illegal salmon!'); };\n   *\n   *     expect(badFn).to.throw(TypeError, 'salmon'); // Recommended\n   *     expect(badFn).to.not.throw(ReferenceError, 'x'); // Not recommended\n   *\n   * `.throw` changes the target of any assertions that follow in the chain to\n   * be the error object that's thrown.\n   *\n   *     var err = new TypeError('Illegal salmon!');\n   *     err.code = 42;\n   *     var badFn = function () { throw err; };\n   *\n   *     expect(badFn).to.throw(TypeError).with.property('code', 42);\n   *\n   * `.throw` accepts an optional `msg` argument which is a custom error message\n   * to show when the assertion fails. The message can also be given as the\n   * second argument to `expect`. When not providing two arguments, always use\n   * the second form.\n   *\n   *     var goodFn = function () {};\n   *\n   *     expect(goodFn).to.throw(TypeError, 'x', 'nooo why fail??');\n   *     expect(goodFn, 'nooo why fail??').to.throw();\n   *\n   * Due to limitations in ES5, `.throw` may not always work as expected when\n   * using a transpiler such as Babel or TypeScript. In particular, it may\n   * produce unexpected results when subclassing the built-in `Error` object and\n   * then passing the subclassed constructor to `.throw`. See your transpiler's\n   * docs for details:\n   *\n   * - ([Babel](https://babeljs.io/docs/usage/caveats/#classes))\n   * - ([TypeScript](https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work))\n   *\n   * Beware of some common mistakes when using the `throw` assertion. One common\n   * mistake is to accidentally invoke the function yourself instead of letting\n   * the `throw` assertion invoke the function for you. For example, when\n   * testing if a function named `fn` throws, provide `fn` instead of `fn()` as\n   * the target for the assertion.\n   *\n   *     expect(fn).to.throw();     // Good! Tests `fn` as desired\n   *     expect(fn()).to.throw();   // Bad! Tests result of `fn()`, not `fn`\n   *\n   * If you need to assert that your function `fn` throws when passed certain\n   * arguments, then wrap a call to `fn` inside of another function.\n   *\n   *     expect(function () { fn(42); }).to.throw();  // Function expression\n   *     expect(() => fn(42)).to.throw();             // ES6 arrow function\n   *\n   * Another common mistake is to provide an object method (or any stand-alone\n   * function that relies on `this`) as the target of the assertion. Doing so is\n   * problematic because the `this` context will be lost when the function is\n   * invoked by `.throw`; there's no way for it to know what `this` is supposed\n   * to be. There are two ways around this problem. One solution is to wrap the\n   * method or function call inside of another function. Another solution is to\n   * use `bind`.\n   *\n   *     expect(function () { cat.meow(); }).to.throw();  // Function expression\n   *     expect(() => cat.meow()).to.throw();             // ES6 arrow function\n   *     expect(cat.meow.bind(cat)).to.throw();           // Bind\n   *\n   * Finally, it's worth mentioning that it's a best practice in JavaScript to\n   * only throw `Error` and derivatives of `Error` such as `ReferenceError`,\n   * `TypeError`, and user-defined objects that extend `Error`. No other type of\n   * value will generate a stack trace when initialized. With that said, the\n   * `throw` assertion does technically support any type of value being thrown,\n   * not just `Error` and its derivatives.\n   *\n   * The aliases `.throws` and `.Throw` can be used interchangeably with\n   * `.throw`.\n   *\n   * @name throw\n   * @alias throws\n   * @alias Throw\n   * @param {Error|ErrorConstructor} errorLike\n   * @param {String|RegExp} errMsgMatcher error message\n   * @param {String} msg _optional_\n   * @see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error#Error_types\n   * @returns error for chaining (null if no error)\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertThrows (errorLike, errMsgMatcher, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , ssfi = flag(this, 'ssfi')\n      , flagMsg = flag(this, 'message')\n      , negate = flag(this, 'negate') || false;\n    new Assertion(obj, flagMsg, ssfi, true).is.a('function');\n\n    if (errorLike instanceof RegExp || typeof errorLike === 'string') {\n      errMsgMatcher = errorLike;\n      errorLike = null;\n    }\n\n    var caughtErr;\n    try {\n      obj();\n    } catch (err) {\n      caughtErr = err;\n    }\n\n    // If we have the negate flag enabled and at least one valid argument it means we do expect an error\n    // but we want it to match a given set of criteria\n    var everyArgIsUndefined = errorLike === undefined && errMsgMatcher === undefined;\n\n    // If we've got the negate flag enabled and both args, we should only fail if both aren't compatible\n    // See Issue #551 and PR #683@GitHub\n    var everyArgIsDefined = Boolean(errorLike && errMsgMatcher);\n    var errorLikeFail = false;\n    var errMsgMatcherFail = false;\n\n    // Checking if error was thrown\n    if (everyArgIsUndefined || !everyArgIsUndefined && !negate) {\n      // We need this to display results correctly according to their types\n      var errorLikeString = 'an error';\n      if (errorLike instanceof Error) {\n        errorLikeString = '#{exp}';\n      } else if (errorLike) {\n        errorLikeString = _.checkError.getConstructorName(errorLike);\n      }\n\n      this.assert(\n          caughtErr\n        , 'expected #{this} to throw ' + errorLikeString\n        , 'expected #{this} to not throw an error but #{act} was thrown'\n        , errorLike && errorLike.toString()\n        , (caughtErr instanceof Error ?\n            caughtErr.toString() : (typeof caughtErr === 'string' ? caughtErr : caughtErr &&\n                                    _.checkError.getConstructorName(caughtErr)))\n      );\n    }\n\n    if (errorLike && caughtErr) {\n      // We should compare instances only if `errorLike` is an instance of `Error`\n      if (errorLike instanceof Error) {\n        var isCompatibleInstance = _.checkError.compatibleInstance(caughtErr, errorLike);\n\n        if (isCompatibleInstance === negate) {\n          // These checks were created to ensure we won't fail too soon when we've got both args and a negate\n          // See Issue #551 and PR #683@GitHub\n          if (everyArgIsDefined && negate) {\n            errorLikeFail = true;\n          } else {\n            this.assert(\n                negate\n              , 'expected #{this} to throw #{exp} but #{act} was thrown'\n              , 'expected #{this} to not throw #{exp}' + (caughtErr && !negate ? ' but #{act} was thrown' : '')\n              , errorLike.toString()\n              , caughtErr.toString()\n            );\n          }\n        }\n      }\n\n      var isCompatibleConstructor = _.checkError.compatibleConstructor(caughtErr, errorLike);\n      if (isCompatibleConstructor === negate) {\n        if (everyArgIsDefined && negate) {\n            errorLikeFail = true;\n        } else {\n          this.assert(\n              negate\n            , 'expected #{this} to throw #{exp} but #{act} was thrown'\n            , 'expected #{this} to not throw #{exp}' + (caughtErr ? ' but #{act} was thrown' : '')\n            , (errorLike instanceof Error ? errorLike.toString() : errorLike && _.checkError.getConstructorName(errorLike))\n            , (caughtErr instanceof Error ? caughtErr.toString() : caughtErr && _.checkError.getConstructorName(caughtErr))\n          );\n        }\n      }\n    }\n\n    if (caughtErr && errMsgMatcher !== undefined && errMsgMatcher !== null) {\n      // Here we check compatible messages\n      var placeholder = 'including';\n      if (errMsgMatcher instanceof RegExp) {\n        placeholder = 'matching'\n      }\n\n      var isCompatibleMessage = _.checkError.compatibleMessage(caughtErr, errMsgMatcher);\n      if (isCompatibleMessage === negate) {\n        if (everyArgIsDefined && negate) {\n            errMsgMatcherFail = true;\n        } else {\n          this.assert(\n            negate\n            , 'expected #{this} to throw error ' + placeholder + ' #{exp} but got #{act}'\n            , 'expected #{this} to throw error not ' + placeholder + ' #{exp}'\n            ,  errMsgMatcher\n            ,  _.checkError.getMessage(caughtErr)\n          );\n        }\n      }\n    }\n\n    // If both assertions failed and both should've matched we throw an error\n    if (errorLikeFail && errMsgMatcherFail) {\n      this.assert(\n        negate\n        , 'expected #{this} to throw #{exp} but #{act} was thrown'\n        , 'expected #{this} to not throw #{exp}' + (caughtErr ? ' but #{act} was thrown' : '')\n        , (errorLike instanceof Error ? errorLike.toString() : errorLike && _.checkError.getConstructorName(errorLike))\n        , (caughtErr instanceof Error ? caughtErr.toString() : caughtErr && _.checkError.getConstructorName(caughtErr))\n      );\n    }\n\n    flag(this, 'object', caughtErr);\n  };\n\n  Assertion.addMethod('throw', assertThrows);\n  Assertion.addMethod('throws', assertThrows);\n  Assertion.addMethod('Throw', assertThrows);\n\n  /**\n   * ### .respondTo(method[, msg])\n   *\n   * When the target is a non-function object, `.respondTo` asserts that the\n   * target has a method with the given name `method`. The method can be own or\n   * inherited, and it can be enumerable or non-enumerable.\n   *\n   *     function Cat () {}\n   *     Cat.prototype.meow = function () {};\n   *\n   *     expect(new Cat()).to.respondTo('meow');\n   *\n   * When the target is a function, `.respondTo` asserts that the target's\n   * `prototype` property has a method with the given name `method`. Again, the\n   * method can be own or inherited, and it can be enumerable or non-enumerable.\n   *\n   *     function Cat () {}\n   *     Cat.prototype.meow = function () {};\n   *\n   *     expect(Cat).to.respondTo('meow');\n   *\n   * Add `.itself` earlier in the chain to force `.respondTo` to treat the\n   * target as a non-function object, even if it's a function. Thus, it asserts\n   * that the target has a method with the given name `method`, rather than\n   * asserting that the target's `prototype` property has a method with the\n   * given name `method`.\n   *\n   *     function Cat () {}\n   *     Cat.prototype.meow = function () {};\n   *     Cat.hiss = function () {};\n   *\n   *     expect(Cat).itself.to.respondTo('hiss').but.not.respondTo('meow');\n   *\n   * When not adding `.itself`, it's important to check the target's type before\n   * using `.respondTo`. See the `.a` doc for info on checking a target's type.\n   *\n   *     function Cat () {}\n   *     Cat.prototype.meow = function () {};\n   *\n   *     expect(new Cat()).to.be.an('object').that.respondsTo('meow');\n   *\n   * Add `.not` earlier in the chain to negate `.respondTo`.\n   *\n   *     function Dog () {}\n   *     Dog.prototype.bark = function () {};\n   *\n   *     expect(new Dog()).to.not.respondTo('meow');\n   *\n   * `.respondTo` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`.\n   *\n   *     expect({}).to.respondTo('meow', 'nooo why fail??');\n   *     expect({}, 'nooo why fail??').to.respondTo('meow');\n   *\n   * The alias `.respondsTo` can be used interchangeably with `.respondTo`.\n   *\n   * @name respondTo\n   * @alias respondsTo\n   * @param {String} method\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function respondTo (method, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , itself = flag(this, 'itself')\n      , context = ('function' === typeof obj && !itself)\n        ? obj.prototype[method]\n        : obj[method];\n\n    this.assert(\n        'function' === typeof context\n      , 'expected #{this} to respond to ' + _.inspect(method)\n      , 'expected #{this} to not respond to ' + _.inspect(method)\n    );\n  }\n\n  Assertion.addMethod('respondTo', respondTo);\n  Assertion.addMethod('respondsTo', respondTo);\n\n  /**\n   * ### .itself\n   *\n   * Forces all `.respondTo` assertions that follow in the chain to behave as if\n   * the target is a non-function object, even if it's a function. Thus, it\n   * causes `.respondTo` to assert that the target has a method with the given\n   * name, rather than asserting that the target's `prototype` property has a\n   * method with the given name.\n   *\n   *     function Cat () {}\n   *     Cat.prototype.meow = function () {};\n   *     Cat.hiss = function () {};\n   *\n   *     expect(Cat).itself.to.respondTo('hiss').but.not.respondTo('meow');\n   *\n   * @name itself\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('itself', function () {\n    flag(this, 'itself', true);\n  });\n\n  /**\n   * ### .satisfy(matcher[, msg])\n   *\n   * Invokes the given `matcher` function with the target being passed as the\n   * first argument, and asserts that the value returned is truthy.\n   *\n   *     expect(1).to.satisfy(function(num) {\n   *       return num > 0;\n   *     });\n   *\n   * Add `.not` earlier in the chain to negate `.satisfy`.\n   *\n   *     expect(1).to.not.satisfy(function(num) {\n   *       return num > 2;\n   *     });\n   *\n   * `.satisfy` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`.\n   *\n   *     expect(1).to.satisfy(function(num) {\n   *       return num > 2;\n   *     }, 'nooo why fail??');\n   *\n   *     expect(1, 'nooo why fail??').to.satisfy(function(num) {\n   *       return num > 2;\n   *     });\n   *\n   * The alias `.satisfies` can be used interchangeably with `.satisfy`.\n   *\n   * @name satisfy\n   * @alias satisfies\n   * @param {Function} matcher\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function satisfy (matcher, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    var result = matcher(obj);\n    this.assert(\n        result\n      , 'expected #{this} to satisfy ' + _.objDisplay(matcher)\n      , 'expected #{this} to not satisfy' + _.objDisplay(matcher)\n      , flag(this, 'negate') ? false : true\n      , result\n    );\n  }\n\n  Assertion.addMethod('satisfy', satisfy);\n  Assertion.addMethod('satisfies', satisfy);\n\n  /**\n   * ### .closeTo(expected, delta[, msg])\n   *\n   * Asserts that the target is a number that's within a given +/- `delta` range\n   * of the given number `expected`. However, it's often best to assert that the\n   * target is equal to its expected value.\n   *\n   *     // Recommended\n   *     expect(1.5).to.equal(1.5);\n   *\n   *     // Not recommended\n   *     expect(1.5).to.be.closeTo(1, 0.5);\n   *     expect(1.5).to.be.closeTo(2, 0.5);\n   *     expect(1.5).to.be.closeTo(1, 1);\n   *\n   * Add `.not` earlier in the chain to negate `.closeTo`.\n   *\n   *     expect(1.5).to.equal(1.5); // Recommended\n   *     expect(1.5).to.not.be.closeTo(3, 1); // Not recommended\n   *\n   * `.closeTo` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`.\n   *\n   *     expect(1.5).to.be.closeTo(3, 1, 'nooo why fail??');\n   *     expect(1.5, 'nooo why fail??').to.be.closeTo(3, 1);\n   *\n   * The alias `.approximately` can be used interchangeably with `.closeTo`.\n   *\n   * @name closeTo\n   * @alias approximately\n   * @param {Number} expected\n   * @param {Number} delta\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function closeTo(expected, delta, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , flagMsg = flag(this, 'message')\n      , ssfi = flag(this, 'ssfi');\n\n    new Assertion(obj, flagMsg, ssfi, true).is.a('number');\n    if (typeof expected !== 'number' || typeof delta !== 'number') {\n      flagMsg = flagMsg ? flagMsg + ': ' : '';\n      throw new AssertionError(\n          flagMsg + 'the arguments to closeTo or approximately must be numbers',\n          undefined,\n          ssfi\n      );\n    }\n\n    this.assert(\n        Math.abs(obj - expected) <= delta\n      , 'expected #{this} to be close to ' + expected + ' +/- ' + delta\n      , 'expected #{this} not to be close to ' + expected + ' +/- ' + delta\n    );\n  }\n\n  Assertion.addMethod('closeTo', closeTo);\n  Assertion.addMethod('approximately', closeTo);\n\n  // Note: Duplicates are ignored if testing for inclusion instead of sameness.\n  function isSubsetOf(subset, superset, cmp, contains, ordered) {\n    if (!contains) {\n      if (subset.length !== superset.length) return false;\n      superset = superset.slice();\n    }\n\n    return subset.every(function(elem, idx) {\n      if (ordered) return cmp ? cmp(elem, superset[idx]) : elem === superset[idx];\n\n      if (!cmp) {\n        var matchIdx = superset.indexOf(elem);\n        if (matchIdx === -1) return false;\n\n        // Remove match from superset so not counted twice if duplicate in subset.\n        if (!contains) superset.splice(matchIdx, 1);\n        return true;\n      }\n\n      return superset.some(function(elem2, matchIdx) {\n        if (!cmp(elem, elem2)) return false;\n\n        // Remove match from superset so not counted twice if duplicate in subset.\n        if (!contains) superset.splice(matchIdx, 1);\n        return true;\n      });\n    });\n  }\n\n  /**\n   * ### .members(set[, msg])\n   *\n   * Asserts that the target array has the same members as the given array\n   * `set`.\n   *\n   *     expect([1, 2, 3]).to.have.members([2, 1, 3]);\n   *     expect([1, 2, 2]).to.have.members([2, 1, 2]);\n   *\n   * By default, members are compared using strict (`===`) equality. Add `.deep`\n   * earlier in the chain to use deep equality instead. See the `deep-eql`\n   * project page for info on the deep equality algorithm:\n   * https://github.com/chaijs/deep-eql.\n   *\n   *     // Target array deeply (but not strictly) has member `{a: 1}`\n   *     expect([{a: 1}]).to.have.deep.members([{a: 1}]);\n   *     expect([{a: 1}]).to.not.have.members([{a: 1}]);\n   *\n   * By default, order doesn't matter. Add `.ordered` earlier in the chain to\n   * require that members appear in the same order.\n   *\n   *     expect([1, 2, 3]).to.have.ordered.members([1, 2, 3]);\n   *     expect([1, 2, 3]).to.have.members([2, 1, 3])\n   *       .but.not.ordered.members([2, 1, 3]);\n   *\n   * By default, both arrays must be the same size. Add `.include` earlier in\n   * the chain to require that the target's members be a superset of the\n   * expected members. Note that duplicates are ignored in the subset when\n   * `.include` is added.\n   *\n   *     // Target array is a superset of [1, 2] but not identical\n   *     expect([1, 2, 3]).to.include.members([1, 2]);\n   *     expect([1, 2, 3]).to.not.have.members([1, 2]);\n   *\n   *     // Duplicates in the subset are ignored\n   *     expect([1, 2, 3]).to.include.members([1, 2, 2, 2]);\n   *\n   * `.deep`, `.ordered`, and `.include` can all be combined. However, if\n   * `.include` and `.ordered` are combined, the ordering begins at the start of\n   * both arrays.\n   *\n   *     expect([{a: 1}, {b: 2}, {c: 3}])\n   *       .to.include.deep.ordered.members([{a: 1}, {b: 2}])\n   *       .but.not.include.deep.ordered.members([{b: 2}, {c: 3}]);\n   *\n   * Add `.not` earlier in the chain to negate `.members`. However, it's\n   * dangerous to do so. The problem is that it creates uncertain expectations\n   * by asserting that the target array doesn't have all of the same members as\n   * the given array `set` but may or may not have some of them. It's often best\n   * to identify the exact output that's expected, and then write an assertion\n   * that only accepts that exact output.\n   *\n   *     expect([1, 2]).to.not.include(3).and.not.include(4); // Recommended\n   *     expect([1, 2]).to.not.have.members([3, 4]); // Not recommended\n   *\n   * `.members` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`.\n   *\n   *     expect([1, 2]).to.have.members([1, 2, 3], 'nooo why fail??');\n   *     expect([1, 2], 'nooo why fail??').to.have.members([1, 2, 3]);\n   *\n   * @name members\n   * @param {Array} set\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addMethod('members', function (subset, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , flagMsg = flag(this, 'message')\n      , ssfi = flag(this, 'ssfi');\n\n    new Assertion(obj, flagMsg, ssfi, true).to.be.an('array');\n    new Assertion(subset, flagMsg, ssfi, true).to.be.an('array');\n\n    var contains = flag(this, 'contains');\n    var ordered = flag(this, 'ordered');\n\n    var subject, failMsg, failNegateMsg;\n\n    if (contains) {\n      subject = ordered ? 'an ordered superset' : 'a superset';\n      failMsg = 'expected #{this} to be ' + subject + ' of #{exp}';\n      failNegateMsg = 'expected #{this} to not be ' + subject + ' of #{exp}';\n    } else {\n      subject = ordered ? 'ordered members' : 'members';\n      failMsg = 'expected #{this} to have the same ' + subject + ' as #{exp}';\n      failNegateMsg = 'expected #{this} to not have the same ' + subject + ' as #{exp}';\n    }\n\n    var cmp = flag(this, 'deep') ? _.eql : undefined;\n\n    this.assert(\n        isSubsetOf(subset, obj, cmp, contains, ordered)\n      , failMsg\n      , failNegateMsg\n      , subset\n      , obj\n      , true\n    );\n  });\n\n  /**\n   * ### .oneOf(list[, msg])\n   *\n   * Asserts that the target is a member of the given array `list`. However,\n   * it's often best to assert that the target is equal to its expected value.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.be.oneOf([1, 2, 3]); // Not recommended\n   *\n   * Comparisons are performed using strict (`===`) equality.\n   *\n   * Add `.not` earlier in the chain to negate `.oneOf`.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.not.be.oneOf([2, 3, 4]); // Not recommended\n   *\n   * `.oneOf` accepts an optional `msg` argument which is a custom error message\n   * to show when the assertion fails. The message can also be given as the\n   * second argument to `expect`.\n   *\n   *     expect(1).to.be.oneOf([2, 3, 4], 'nooo why fail??');\n   *     expect(1, 'nooo why fail??').to.be.oneOf([2, 3, 4]);\n   *\n   * @name oneOf\n   * @param {Array<*>} list\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function oneOf (list, msg) {\n    if (msg) flag(this, 'message', msg);\n    var expected = flag(this, 'object')\n      , flagMsg = flag(this, 'message')\n      , ssfi = flag(this, 'ssfi');\n    new Assertion(list, flagMsg, ssfi, true).to.be.an('array');\n\n    this.assert(\n        list.indexOf(expected) > -1\n      , 'expected #{this} to be one of #{exp}'\n      , 'expected #{this} to not be one of #{exp}'\n      , list\n      , expected\n    );\n  }\n\n  Assertion.addMethod('oneOf', oneOf);\n\n  /**\n   * ### .change(subject[, prop[, msg]])\n   *\n   * When one argument is provided, `.change` asserts that the given function\n   * `subject` returns a different value when it's invoked before the target\n   * function compared to when it's invoked afterward. However, it's often best\n   * to assert that `subject` is equal to its expected value.\n   *\n   *     var dots = ''\n   *       , addDot = function () { dots += '.'; }\n   *       , getDots = function () { return dots; };\n   *\n   *     // Recommended\n   *     expect(getDots()).to.equal('');\n   *     addDot();\n   *     expect(getDots()).to.equal('.');\n   *\n   *     // Not recommended\n   *     expect(addDot).to.change(getDots);\n   *\n   * When two arguments are provided, `.change` asserts that the value of the\n   * given object `subject`'s `prop` property is different before invoking the\n   * target function compared to afterward.\n   *\n   *     var myObj = {dots: ''}\n   *       , addDot = function () { myObj.dots += '.'; };\n   *\n   *     // Recommended\n   *     expect(myObj).to.have.property('dots', '');\n   *     addDot();\n   *     expect(myObj).to.have.property('dots', '.');\n   *\n   *     // Not recommended\n   *     expect(addDot).to.change(myObj, 'dots');\n   *\n   * Strict (`===`) equality is used to compare before and after values.\n   *\n   * Add `.not` earlier in the chain to negate `.change`.\n   *\n   *     var dots = ''\n   *       , noop = function () {}\n   *       , getDots = function () { return dots; };\n   *\n   *     expect(noop).to.not.change(getDots);\n   *\n   *     var myObj = {dots: ''}\n   *       , noop = function () {};\n   *\n   *     expect(noop).to.not.change(myObj, 'dots');\n   *\n   * `.change` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`. When not providing two arguments, always\n   * use the second form.\n   *\n   *     var myObj = {dots: ''}\n   *       , addDot = function () { myObj.dots += '.'; };\n   *\n   *     expect(addDot).to.not.change(myObj, 'dots', 'nooo why fail??');\n   *\n   *     var dots = ''\n   *       , addDot = function () { dots += '.'; }\n   *       , getDots = function () { return dots; };\n   *\n   *     expect(addDot, 'nooo why fail??').to.not.change(getDots);\n   *\n   * `.change` also causes all `.by` assertions that follow in the chain to\n   * assert how much a numeric subject was increased or decreased by. However,\n   * it's dangerous to use `.change.by`. The problem is that it creates\n   * uncertain expectations by asserting that the subject either increases by\n   * the given delta, or that it decreases by the given delta. It's often best\n   * to identify the exact output that's expected, and then write an assertion\n   * that only accepts that exact output.\n   *\n   *     var myObj = {val: 1}\n   *       , addTwo = function () { myObj.val += 2; }\n   *       , subtractTwo = function () { myObj.val -= 2; };\n   *\n   *     expect(addTwo).to.increase(myObj, 'val').by(2); // Recommended\n   *     expect(addTwo).to.change(myObj, 'val').by(2); // Not recommended\n   *\n   *     expect(subtractTwo).to.decrease(myObj, 'val').by(2); // Recommended\n   *     expect(subtractTwo).to.change(myObj, 'val').by(2); // Not recommended\n   *\n   * The alias `.changes` can be used interchangeably with `.change`.\n   *\n   * @name change\n   * @alias changes\n   * @param {String} subject\n   * @param {String} prop name _optional_\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertChanges (subject, prop, msg) {\n    if (msg) flag(this, 'message', msg);\n    var fn = flag(this, 'object')\n      , flagMsg = flag(this, 'message')\n      , ssfi = flag(this, 'ssfi');\n    new Assertion(fn, flagMsg, ssfi, true).is.a('function');\n\n    var initial;\n    if (!prop) {\n      new Assertion(subject, flagMsg, ssfi, true).is.a('function');\n      initial = subject();\n    } else {\n      new Assertion(subject, flagMsg, ssfi, true).to.have.property(prop);\n      initial = subject[prop];\n    }\n\n    fn();\n\n    var final = prop === undefined || prop === null ? subject() : subject[prop];\n    var msgObj = prop === undefined || prop === null ? initial : '.' + prop;\n\n    // This gets flagged because of the .by(delta) assertion\n    flag(this, 'deltaMsgObj', msgObj);\n    flag(this, 'initialDeltaValue', initial);\n    flag(this, 'finalDeltaValue', final);\n    flag(this, 'deltaBehavior', 'change');\n    flag(this, 'realDelta', final !== initial);\n\n    this.assert(\n      initial !== final\n      , 'expected ' + msgObj + ' to change'\n      , 'expected ' + msgObj + ' to not change'\n    );\n  }\n\n  Assertion.addMethod('change', assertChanges);\n  Assertion.addMethod('changes', assertChanges);\n\n  /**\n   * ### .increase(subject[, prop[, msg]])\n   *\n   * When one argument is provided, `.increase` asserts that the given function\n   * `subject` returns a greater number when it's invoked after invoking the\n   * target function compared to when it's invoked beforehand. `.increase` also\n   * causes all `.by` assertions that follow in the chain to assert how much\n   * greater of a number is returned. It's often best to assert that the return\n   * value increased by the expected amount, rather than asserting it increased\n   * by any amount.\n   *\n   *     var val = 1\n   *       , addTwo = function () { val += 2; }\n   *       , getVal = function () { return val; };\n   *\n   *     expect(addTwo).to.increase(getVal).by(2); // Recommended\n   *     expect(addTwo).to.increase(getVal); // Not recommended\n   *\n   * When two arguments are provided, `.increase` asserts that the value of the\n   * given object `subject`'s `prop` property is greater after invoking the\n   * target function compared to beforehand.\n   *\n   *     var myObj = {val: 1}\n   *       , addTwo = function () { myObj.val += 2; };\n   *\n   *     expect(addTwo).to.increase(myObj, 'val').by(2); // Recommended\n   *     expect(addTwo).to.increase(myObj, 'val'); // Not recommended\n   *\n   * Add `.not` earlier in the chain to negate `.increase`. However, it's\n   * dangerous to do so. The problem is that it creates uncertain expectations\n   * by asserting that the subject either decreases, or that it stays the same.\n   * It's often best to identify the exact output that's expected, and then\n   * write an assertion that only accepts that exact output.\n   *\n   * When the subject is expected to decrease, it's often best to assert that it\n   * decreased by the expected amount.\n   *\n   *     var myObj = {val: 1}\n   *       , subtractTwo = function () { myObj.val -= 2; };\n   *\n   *     expect(subtractTwo).to.decrease(myObj, 'val').by(2); // Recommended\n   *     expect(subtractTwo).to.not.increase(myObj, 'val'); // Not recommended\n   *\n   * When the subject is expected to stay the same, it's often best to assert\n   * exactly that.\n   *\n   *     var myObj = {val: 1}\n   *       , noop = function () {};\n   *\n   *     expect(noop).to.not.change(myObj, 'val'); // Recommended\n   *     expect(noop).to.not.increase(myObj, 'val'); // Not recommended\n   *\n   * `.increase` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`. When not providing two arguments, always\n   * use the second form.\n   *\n   *     var myObj = {val: 1}\n   *       , noop = function () {};\n   *\n   *     expect(noop).to.increase(myObj, 'val', 'nooo why fail??');\n   *\n   *     var val = 1\n   *       , noop = function () {}\n   *       , getVal = function () { return val; };\n   *\n   *     expect(noop, 'nooo why fail??').to.increase(getVal);\n   *\n   * The alias `.increases` can be used interchangeably with `.increase`.\n   *\n   * @name increase\n   * @alias increases\n   * @param {String|Function} subject\n   * @param {String} prop name _optional_\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertIncreases (subject, prop, msg) {\n    if (msg) flag(this, 'message', msg);\n    var fn = flag(this, 'object')\n      , flagMsg = flag(this, 'message')\n      , ssfi = flag(this, 'ssfi');\n    new Assertion(fn, flagMsg, ssfi, true).is.a('function');\n\n    var initial;\n    if (!prop) {\n      new Assertion(subject, flagMsg, ssfi, true).is.a('function');\n      initial = subject();\n    } else {\n      new Assertion(subject, flagMsg, ssfi, true).to.have.property(prop);\n      initial = subject[prop];\n    }\n\n    // Make sure that the target is a number\n    new Assertion(initial, flagMsg, ssfi, true).is.a('number');\n\n    fn();\n\n    var final = prop === undefined || prop === null ? subject() : subject[prop];\n    var msgObj = prop === undefined || prop === null ? initial : '.' + prop;\n\n    flag(this, 'deltaMsgObj', msgObj);\n    flag(this, 'initialDeltaValue', initial);\n    flag(this, 'finalDeltaValue', final);\n    flag(this, 'deltaBehavior', 'increase');\n    flag(this, 'realDelta', final - initial);\n\n    this.assert(\n      final - initial > 0\n      , 'expected ' + msgObj + ' to increase'\n      , 'expected ' + msgObj + ' to not increase'\n    );\n  }\n\n  Assertion.addMethod('increase', assertIncreases);\n  Assertion.addMethod('increases', assertIncreases);\n\n  /**\n   * ### .decrease(subject[, prop[, msg]])\n   *\n   * When one argument is provided, `.decrease` asserts that the given function\n   * `subject` returns a lesser number when it's invoked after invoking the\n   * target function compared to when it's invoked beforehand. `.decrease` also\n   * causes all `.by` assertions that follow in the chain to assert how much\n   * lesser of a number is returned. It's often best to assert that the return\n   * value decreased by the expected amount, rather than asserting it decreased\n   * by any amount.\n   *\n   *     var val = 1\n   *       , subtractTwo = function () { val -= 2; }\n   *       , getVal = function () { return val; };\n   *\n   *     expect(subtractTwo).to.decrease(getVal).by(2); // Recommended\n   *     expect(subtractTwo).to.decrease(getVal); // Not recommended\n   *\n   * When two arguments are provided, `.decrease` asserts that the value of the\n   * given object `subject`'s `prop` property is lesser after invoking the\n   * target function compared to beforehand.\n   *\n   *     var myObj = {val: 1}\n   *       , subtractTwo = function () { myObj.val -= 2; };\n   *\n   *     expect(subtractTwo).to.decrease(myObj, 'val').by(2); // Recommended\n   *     expect(subtractTwo).to.decrease(myObj, 'val'); // Not recommended\n   *\n   * Add `.not` earlier in the chain to negate `.decrease`. However, it's\n   * dangerous to do so. The problem is that it creates uncertain expectations\n   * by asserting that the subject either increases, or that it stays the same.\n   * It's often best to identify the exact output that's expected, and then\n   * write an assertion that only accepts that exact output.\n   *\n   * When the subject is expected to increase, it's often best to assert that it\n   * increased by the expected amount.\n   *\n   *     var myObj = {val: 1}\n   *       , addTwo = function () { myObj.val += 2; };\n   *\n   *     expect(addTwo).to.increase(myObj, 'val').by(2); // Recommended\n   *     expect(addTwo).to.not.decrease(myObj, 'val'); // Not recommended\n   *\n   * When the subject is expected to stay the same, it's often best to assert\n   * exactly that.\n   *\n   *     var myObj = {val: 1}\n   *       , noop = function () {};\n   *\n   *     expect(noop).to.not.change(myObj, 'val'); // Recommended\n   *     expect(noop).to.not.decrease(myObj, 'val'); // Not recommended\n   *\n   * `.decrease` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`. When not providing two arguments, always\n   * use the second form.\n   *\n   *     var myObj = {val: 1}\n   *       , noop = function () {};\n   *\n   *     expect(noop).to.decrease(myObj, 'val', 'nooo why fail??');\n   *\n   *     var val = 1\n   *       , noop = function () {}\n   *       , getVal = function () { return val; };\n   *\n   *     expect(noop, 'nooo why fail??').to.decrease(getVal);\n   *\n   * The alias `.decreases` can be used interchangeably with `.decrease`.\n   *\n   * @name decrease\n   * @alias decreases\n   * @param {String|Function} subject\n   * @param {String} prop name _optional_\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertDecreases (subject, prop, msg) {\n    if (msg) flag(this, 'message', msg);\n    var fn = flag(this, 'object')\n      , flagMsg = flag(this, 'message')\n      , ssfi = flag(this, 'ssfi');\n    new Assertion(fn, flagMsg, ssfi, true).is.a('function');\n\n    var initial;\n    if (!prop) {\n      new Assertion(subject, flagMsg, ssfi, true).is.a('function');\n      initial = subject();\n    } else {\n      new Assertion(subject, flagMsg, ssfi, true).to.have.property(prop);\n      initial = subject[prop];\n    }\n\n    // Make sure that the target is a number\n    new Assertion(initial, flagMsg, ssfi, true).is.a('number');\n\n    fn();\n\n    var final = prop === undefined || prop === null ? subject() : subject[prop];\n    var msgObj = prop === undefined || prop === null ? initial : '.' + prop;\n\n    flag(this, 'deltaMsgObj', msgObj);\n    flag(this, 'initialDeltaValue', initial);\n    flag(this, 'finalDeltaValue', final);\n    flag(this, 'deltaBehavior', 'decrease');\n    flag(this, 'realDelta', initial - final);\n\n    this.assert(\n      final - initial < 0\n      , 'expected ' + msgObj + ' to decrease'\n      , 'expected ' + msgObj + ' to not decrease'\n    );\n  }\n\n  Assertion.addMethod('decrease', assertDecreases);\n  Assertion.addMethod('decreases', assertDecreases);\n\n  /**\n   * ### .by(delta[, msg])\n   *\n   * When following an `.increase` assertion in the chain, `.by` asserts that\n   * the subject of the `.increase` assertion increased by the given `delta`.\n   *\n   *     var myObj = {val: 1}\n   *       , addTwo = function () { myObj.val += 2; };\n   *\n   *     expect(addTwo).to.increase(myObj, 'val').by(2);\n   *\n   * When following a `.decrease` assertion in the chain, `.by` asserts that the\n   * subject of the `.decrease` assertion decreased by the given `delta`.\n   *\n   *     var myObj = {val: 1}\n   *       , subtractTwo = function () { myObj.val -= 2; };\n   *\n   *     expect(subtractTwo).to.decrease(myObj, 'val').by(2);\n   *\n   * When following a `.change` assertion in the chain, `.by` asserts that the\n   * subject of the `.change` assertion either increased or decreased by the\n   * given `delta`. However, it's dangerous to use `.change.by`. The problem is\n   * that it creates uncertain expectations. It's often best to identify the\n   * exact output that's expected, and then write an assertion that only accepts\n   * that exact output.\n   *\n   *     var myObj = {val: 1}\n   *       , addTwo = function () { myObj.val += 2; }\n   *       , subtractTwo = function () { myObj.val -= 2; };\n   *\n   *     expect(addTwo).to.increase(myObj, 'val').by(2); // Recommended\n   *     expect(addTwo).to.change(myObj, 'val').by(2); // Not recommended\n   *\n   *     expect(subtractTwo).to.decrease(myObj, 'val').by(2); // Recommended\n   *     expect(subtractTwo).to.change(myObj, 'val').by(2); // Not recommended\n   *\n   * Add `.not` earlier in the chain to negate `.by`. However, it's often best\n   * to assert that the subject changed by its expected delta, rather than\n   * asserting that it didn't change by one of countless unexpected deltas.\n   *\n   *     var myObj = {val: 1}\n   *       , addTwo = function () { myObj.val += 2; };\n   *\n   *     // Recommended\n   *     expect(addTwo).to.increase(myObj, 'val').by(2);\n   *\n   *     // Not recommended\n   *     expect(addTwo).to.increase(myObj, 'val').but.not.by(3);\n   *\n   * `.by` accepts an optional `msg` argument which is a custom error message to\n   * show when the assertion fails. The message can also be given as the second\n   * argument to `expect`.\n   *\n   *     var myObj = {val: 1}\n   *       , addTwo = function () { myObj.val += 2; };\n   *\n   *     expect(addTwo).to.increase(myObj, 'val').by(3, 'nooo why fail??');\n   *     expect(addTwo, 'nooo why fail??').to.increase(myObj, 'val').by(3);\n   *\n   * @name by\n   * @param {Number} delta\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertDelta(delta, msg) {\n    if (msg) flag(this, 'message', msg);\n\n    var msgObj = flag(this, 'deltaMsgObj');\n    var initial = flag(this, 'initialDeltaValue');\n    var final = flag(this, 'finalDeltaValue');\n    var behavior = flag(this, 'deltaBehavior');\n    var realDelta = flag(this, 'realDelta');\n\n    var expression;\n    if (behavior === 'change') {\n      expression = Math.abs(final - initial) === Math.abs(delta);\n    } else {\n      expression = realDelta === Math.abs(delta);\n    }\n\n    this.assert(\n      expression\n      , 'expected ' + msgObj + ' to ' + behavior + ' by ' + delta\n      , 'expected ' + msgObj + ' to not ' + behavior + ' by ' + delta\n    );\n  }\n\n  Assertion.addMethod('by', assertDelta);\n\n  /**\n   * ### .extensible\n   *\n   * Asserts that the target is extensible, which means that new properties can\n   * be added to it. Primitives are never extensible.\n   *\n   *     expect({a: 1}).to.be.extensible;\n   *\n   * Add `.not` earlier in the chain to negate `.extensible`.\n   *\n   *     var nonExtensibleObject = Object.preventExtensions({})\n   *       , sealedObject = Object.seal({})\n   *       , frozenObject = Object.freeze({});\n   *\n   *     expect(nonExtensibleObject).to.not.be.extensible;\n   *     expect(sealedObject).to.not.be.extensible;\n   *     expect(frozenObject).to.not.be.extensible;\n   *     expect(1).to.not.be.extensible;\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect(1, 'nooo why fail??').to.be.extensible;\n   *\n   * @name extensible\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('extensible', function() {\n    var obj = flag(this, 'object');\n\n    // In ES5, if the argument to this method is a primitive, then it will cause a TypeError.\n    // In ES6, a non-object argument will be treated as if it was a non-extensible ordinary object, simply return false.\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isExtensible\n    // The following provides ES6 behavior for ES5 environments.\n\n    var isExtensible = obj === Object(obj) && Object.isExtensible(obj);\n\n    this.assert(\n      isExtensible\n      , 'expected #{this} to be extensible'\n      , 'expected #{this} to not be extensible'\n    );\n  });\n\n  /**\n   * ### .sealed\n   *\n   * Asserts that the target is sealed, which means that new properties can't be\n   * added to it, and its existing properties can't be reconfigured or deleted.\n   * However, it's possible that its existing properties can still be reassigned\n   * to different values. Primitives are always sealed.\n   *\n   *     var sealedObject = Object.seal({});\n   *     var frozenObject = Object.freeze({});\n   *\n   *     expect(sealedObject).to.be.sealed;\n   *     expect(frozenObject).to.be.sealed;\n   *     expect(1).to.be.sealed;\n   *\n   * Add `.not` earlier in the chain to negate `.sealed`.\n   *\n   *     expect({a: 1}).to.not.be.sealed;\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect({a: 1}, 'nooo why fail??').to.be.sealed;\n   *\n   * @name sealed\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('sealed', function() {\n    var obj = flag(this, 'object');\n\n    // In ES5, if the argument to this method is a primitive, then it will cause a TypeError.\n    // In ES6, a non-object argument will be treated as if it was a sealed ordinary object, simply return true.\n    // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isSealed\n    // The following provides ES6 behavior for ES5 environments.\n\n    var isSealed = obj === Object(obj) ? Object.isSealed(obj) : true;\n\n    this.assert(\n      isSealed\n      , 'expected #{this} to be sealed'\n      , 'expected #{this} to not be sealed'\n    );\n  });\n\n  /**\n   * ### .frozen\n   *\n   * Asserts that the target is frozen, which means that new properties can't be\n   * added to it, and its existing properties can't be reassigned to different\n   * values, reconfigured, or deleted. Primitives are always frozen.\n   *\n   *     var frozenObject = Object.freeze({});\n   *\n   *     expect(frozenObject).to.be.frozen;\n   *     expect(1).to.be.frozen;\n   *\n   * Add `.not` earlier in the chain to negate `.frozen`.\n   *\n   *     expect({a: 1}).to.not.be.frozen;\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect({a: 1}, 'nooo why fail??').to.be.frozen;\n   *\n   * @name frozen\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('frozen', function() {\n    var obj = flag(this, 'object');\n\n    // In ES5, if the argument to this method is a primitive, then it will cause a TypeError.\n    // In ES6, a non-object argument will be treated as if it was a frozen ordinary object, simply return true.\n    // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isFrozen\n    // The following provides ES6 behavior for ES5 environments.\n\n    var isFrozen = obj === Object(obj) ? Object.isFrozen(obj) : true;\n\n    this.assert(\n      isFrozen\n      , 'expected #{this} to be frozen'\n      , 'expected #{this} to not be frozen'\n    );\n  });\n\n  /**\n   * ### .finite\n   *\n   * Asserts that the target is a number, and isn't `NaN` or positive/negative\n   * `Infinity`.\n   *\n   *     expect(1).to.be.finite;\n   *\n   * Add `.not` earlier in the chain to negate `.finite`. However, it's\n   * dangerous to do so. The problem is that it creates uncertain expectations\n   * by asserting that the subject either isn't a number, or that it's `NaN`, or\n   * that it's positive `Infinity`, or that it's negative `Infinity`. It's often\n   * best to identify the exact output that's expected, and then write an\n   * assertion that only accepts that exact output.\n   *\n   * When the target isn't expected to be a number, it's often best to assert\n   * that it's the expected type, rather than asserting that it isn't one of\n   * many unexpected types.\n   *\n   *     expect('foo').to.be.a('string'); // Recommended\n   *     expect('foo').to.not.be.finite; // Not recommended\n   *\n   * When the target is expected to be `NaN`, it's often best to assert exactly\n   * that.\n   *\n   *     expect(NaN).to.be.NaN; // Recommended\n   *     expect(NaN).to.not.be.finite; // Not recommended\n   *\n   * When the target is expected to be positive infinity, it's often best to\n   * assert exactly that.\n   *\n   *     expect(Infinity).to.equal(Infinity); // Recommended\n   *     expect(Infinity).to.not.be.finite; // Not recommended\n   *\n   * When the target is expected to be negative infinity, it's often best to\n   * assert exactly that.\n   *\n   *     expect(-Infinity).to.equal(-Infinity); // Recommended\n   *     expect(-Infinity).to.not.be.finite; // Not recommended\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect('foo', 'nooo why fail??').to.be.finite;\n   *\n   * @name finite\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('finite', function(msg) {\n    var obj = flag(this, 'object');\n\n    this.assert(\n        typeof obj === 'number' && isFinite(obj)\n      , 'expected #{this} to be a finite number'\n      , 'expected #{this} to not be a finite number'\n    );\n  });\n};\n","/*!\n * chai\n * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nmodule.exports = function (chai, util) {\n  chai.expect = function (val, message) {\n    return new chai.Assertion(val, message);\n  };\n\n  /**\n   * ### .fail([message])\n   * ### .fail(actual, expected, [message], [operator])\n   *\n   * Throw a failure.\n   *\n   *     expect.fail();\n   *     expect.fail(\"custom error message\");\n   *     expect.fail(1, 2);\n   *     expect.fail(1, 2, \"custom error message\");\n   *     expect.fail(1, 2, \"custom error message\", \">\");\n   *     expect.fail(1, 2, undefined, \">\");\n   *\n   * @name fail\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @param {String} operator\n   * @namespace BDD\n   * @api public\n   */\n\n  chai.expect.fail = function (actual, expected, message, operator) {\n    if (arguments.length < 2) {\n        message = actual;\n        actual = undefined;\n    }\n\n    message = message || 'expect.fail()';\n    throw new chai.AssertionError(message, {\n        actual: actual\n      , expected: expected\n      , operator: operator\n    }, chai.expect.fail);\n  };\n};\n","/*!\n * chai\n * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nmodule.exports = function (chai, util) {\n  var Assertion = chai.Assertion;\n\n  function loadShould () {\n    // explicitly define this method as function as to have it's name to include as `ssfi`\n    function shouldGetter() {\n      if (this instanceof String\n          || this instanceof Number\n          || this instanceof Boolean\n          || typeof Symbol === 'function' && this instanceof Symbol) {\n        return new Assertion(this.valueOf(), null, shouldGetter);\n      }\n      return new Assertion(this, null, shouldGetter);\n    }\n    function shouldSetter(value) {\n      // See https://github.com/chaijs/chai/issues/86: this makes\n      // `whatever.should = someValue` actually set `someValue`, which is\n      // especially useful for `global.should = require('chai').should()`.\n      //\n      // Note that we have to use [[DefineProperty]] instead of [[Put]]\n      // since otherwise we would trigger this very setter!\n      Object.defineProperty(this, 'should', {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    }\n    // modify Object.prototype to have `should`\n    Object.defineProperty(Object.prototype, 'should', {\n      set: shouldSetter\n      , get: shouldGetter\n      , configurable: true\n    });\n\n    var should = {};\n\n    /**\n     * ### .fail([message])\n     * ### .fail(actual, expected, [message], [operator])\n     *\n     * Throw a failure.\n     *\n     *     should.fail();\n     *     should.fail(\"custom error message\");\n     *     should.fail(1, 2);\n     *     should.fail(1, 2, \"custom error message\");\n     *     should.fail(1, 2, \"custom error message\", \">\");\n     *     should.fail(1, 2, undefined, \">\");\n     *\n     *\n     * @name fail\n     * @param {Mixed} actual\n     * @param {Mixed} expected\n     * @param {String} message\n     * @param {String} operator\n     * @namespace BDD\n     * @api public\n     */\n\n    should.fail = function (actual, expected, message, operator) {\n      if (arguments.length < 2) {\n          message = actual;\n          actual = undefined;\n      }\n\n      message = message || 'should.fail()';\n      throw new chai.AssertionError(message, {\n          actual: actual\n        , expected: expected\n        , operator: operator\n      }, should.fail);\n    };\n\n    /**\n     * ### .equal(actual, expected, [message])\n     *\n     * Asserts non-strict equality (`==`) of `actual` and `expected`.\n     *\n     *     should.equal(3, '3', '== coerces values to strings');\n     *\n     * @name equal\n     * @param {Mixed} actual\n     * @param {Mixed} expected\n     * @param {String} message\n     * @namespace Should\n     * @api public\n     */\n\n    should.equal = function (val1, val2, msg) {\n      new Assertion(val1, msg).to.equal(val2);\n    };\n\n    /**\n     * ### .throw(function, [constructor/string/regexp], [string/regexp], [message])\n     *\n     * Asserts that `function` will throw an error that is an instance of\n     * `constructor`, or alternately that it will throw an error with message\n     * matching `regexp`.\n     *\n     *     should.throw(fn, 'function throws a reference error');\n     *     should.throw(fn, /function throws a reference error/);\n     *     should.throw(fn, ReferenceError);\n     *     should.throw(fn, ReferenceError, 'function throws a reference error');\n     *     should.throw(fn, ReferenceError, /function throws a reference error/);\n     *\n     * @name throw\n     * @alias Throw\n     * @param {Function} function\n     * @param {ErrorConstructor} constructor\n     * @param {RegExp} regexp\n     * @param {String} message\n     * @see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error#Error_types\n     * @namespace Should\n     * @api public\n     */\n\n    should.Throw = function (fn, errt, errs, msg) {\n      new Assertion(fn, msg).to.Throw(errt, errs);\n    };\n\n    /**\n     * ### .exist\n     *\n     * Asserts that the target is neither `null` nor `undefined`.\n     *\n     *     var foo = 'hi';\n     *\n     *     should.exist(foo, 'foo exists');\n     *\n     * @name exist\n     * @namespace Should\n     * @api public\n     */\n\n    should.exist = function (val, msg) {\n      new Assertion(val, msg).to.exist;\n    }\n\n    // negation\n    should.not = {}\n\n    /**\n     * ### .not.equal(actual, expected, [message])\n     *\n     * Asserts non-strict inequality (`!=`) of `actual` and `expected`.\n     *\n     *     should.not.equal(3, 4, 'these numbers are not equal');\n     *\n     * @name not.equal\n     * @param {Mixed} actual\n     * @param {Mixed} expected\n     * @param {String} message\n     * @namespace Should\n     * @api public\n     */\n\n    should.not.equal = function (val1, val2, msg) {\n      new Assertion(val1, msg).to.not.equal(val2);\n    };\n\n    /**\n     * ### .throw(function, [constructor/regexp], [message])\n     *\n     * Asserts that `function` will _not_ throw an error that is an instance of\n     * `constructor`, or alternately that it will not throw an error with message\n     * matching `regexp`.\n     *\n     *     should.not.throw(fn, Error, 'function does not throw');\n     *\n     * @name not.throw\n     * @alias not.Throw\n     * @param {Function} function\n     * @param {ErrorConstructor} constructor\n     * @param {RegExp} regexp\n     * @param {String} message\n     * @see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error#Error_types\n     * @namespace Should\n     * @api public\n     */\n\n    should.not.Throw = function (fn, errt, errs, msg) {\n      new Assertion(fn, msg).to.not.Throw(errt, errs);\n    };\n\n    /**\n     * ### .not.exist\n     *\n     * Asserts that the target is neither `null` nor `undefined`.\n     *\n     *     var bar = null;\n     *\n     *     should.not.exist(bar, 'bar does not exist');\n     *\n     * @name not.exist\n     * @namespace Should\n     * @api public\n     */\n\n    should.not.exist = function (val, msg) {\n      new Assertion(val, msg).to.not.exist;\n    }\n\n    should['throw'] = should['Throw'];\n    should.not['throw'] = should.not['Throw'];\n\n    return should;\n  };\n\n  chai.should = loadShould;\n  chai.Should = loadShould;\n};\n","/*!\n * chai\n * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nmodule.exports = function (chai, util) {\n  /*!\n   * Chai dependencies.\n   */\n\n  var Assertion = chai.Assertion\n    , flag = util.flag;\n\n  /*!\n   * Module export.\n   */\n\n  /**\n   * ### assert(expression, message)\n   *\n   * Write your own test expressions.\n   *\n   *     assert('foo' !== 'bar', 'foo is not bar');\n   *     assert(Array.isArray([]), 'empty arrays are arrays');\n   *\n   * @param {Mixed} expression to test for truthiness\n   * @param {String} message to display on error\n   * @name assert\n   * @namespace Assert\n   * @api public\n   */\n\n  var assert = chai.assert = function (express, errmsg) {\n    var test = new Assertion(null, null, chai.assert, true);\n    test.assert(\n        express\n      , errmsg\n      , '[ negation message unavailable ]'\n    );\n  };\n\n  /**\n   * ### .fail([message])\n   * ### .fail(actual, expected, [message], [operator])\n   *\n   * Throw a failure. Node.js `assert` module-compatible.\n   *\n   *     assert.fail();\n   *     assert.fail(\"custom error message\");\n   *     assert.fail(1, 2);\n   *     assert.fail(1, 2, \"custom error message\");\n   *     assert.fail(1, 2, \"custom error message\", \">\");\n   *     assert.fail(1, 2, undefined, \">\");\n   *\n   * @name fail\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @param {String} operator\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.fail = function (actual, expected, message, operator) {\n    if (arguments.length < 2) {\n        // Comply with Node's fail([message]) interface\n\n        message = actual;\n        actual = undefined;\n    }\n\n    message = message || 'assert.fail()';\n    throw new chai.AssertionError(message, {\n        actual: actual\n      , expected: expected\n      , operator: operator\n    }, assert.fail);\n  };\n\n  /**\n   * ### .isOk(object, [message])\n   *\n   * Asserts that `object` is truthy.\n   *\n   *     assert.isOk('everything', 'everything is ok');\n   *     assert.isOk(false, 'this will fail');\n   *\n   * @name isOk\n   * @alias ok\n   * @param {Mixed} object to test\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isOk = function (val, msg) {\n    new Assertion(val, msg, assert.isOk, true).is.ok;\n  };\n\n  /**\n   * ### .isNotOk(object, [message])\n   *\n   * Asserts that `object` is falsy.\n   *\n   *     assert.isNotOk('everything', 'this will fail');\n   *     assert.isNotOk(false, 'this will pass');\n   *\n   * @name isNotOk\n   * @alias notOk\n   * @param {Mixed} object to test\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotOk = function (val, msg) {\n    new Assertion(val, msg, assert.isNotOk, true).is.not.ok;\n  };\n\n  /**\n   * ### .equal(actual, expected, [message])\n   *\n   * Asserts non-strict equality (`==`) of `actual` and `expected`.\n   *\n   *     assert.equal(3, '3', '== coerces values to strings');\n   *\n   * @name equal\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.equal = function (act, exp, msg) {\n    var test = new Assertion(act, msg, assert.equal, true);\n\n    test.assert(\n        exp == flag(test, 'object')\n      , 'expected #{this} to equal #{exp}'\n      , 'expected #{this} to not equal #{act}'\n      , exp\n      , act\n      , true\n    );\n  };\n\n  /**\n   * ### .notEqual(actual, expected, [message])\n   *\n   * Asserts non-strict inequality (`!=`) of `actual` and `expected`.\n   *\n   *     assert.notEqual(3, 4, 'these numbers are not equal');\n   *\n   * @name notEqual\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notEqual = function (act, exp, msg) {\n    var test = new Assertion(act, msg, assert.notEqual, true);\n\n    test.assert(\n        exp != flag(test, 'object')\n      , 'expected #{this} to not equal #{exp}'\n      , 'expected #{this} to equal #{act}'\n      , exp\n      , act\n      , true\n    );\n  };\n\n  /**\n   * ### .strictEqual(actual, expected, [message])\n   *\n   * Asserts strict equality (`===`) of `actual` and `expected`.\n   *\n   *     assert.strictEqual(true, true, 'these booleans are strictly equal');\n   *\n   * @name strictEqual\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.strictEqual = function (act, exp, msg) {\n    new Assertion(act, msg, assert.strictEqual, true).to.equal(exp);\n  };\n\n  /**\n   * ### .notStrictEqual(actual, expected, [message])\n   *\n   * Asserts strict inequality (`!==`) of `actual` and `expected`.\n   *\n   *     assert.notStrictEqual(3, '3', 'no coercion for strict equality');\n   *\n   * @name notStrictEqual\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notStrictEqual = function (act, exp, msg) {\n    new Assertion(act, msg, assert.notStrictEqual, true).to.not.equal(exp);\n  };\n\n  /**\n   * ### .deepEqual(actual, expected, [message])\n   *\n   * Asserts that `actual` is deeply equal to `expected`.\n   *\n   *     assert.deepEqual({ tea: 'green' }, { tea: 'green' });\n   *\n   * @name deepEqual\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @alias deepStrictEqual\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.deepEqual = assert.deepStrictEqual = function (act, exp, msg) {\n    new Assertion(act, msg, assert.deepEqual, true).to.eql(exp);\n  };\n\n  /**\n   * ### .notDeepEqual(actual, expected, [message])\n   *\n   * Assert that `actual` is not deeply equal to `expected`.\n   *\n   *     assert.notDeepEqual({ tea: 'green' }, { tea: 'jasmine' });\n   *\n   * @name notDeepEqual\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notDeepEqual = function (act, exp, msg) {\n    new Assertion(act, msg, assert.notDeepEqual, true).to.not.eql(exp);\n  };\n\n   /**\n   * ### .isAbove(valueToCheck, valueToBeAbove, [message])\n   *\n   * Asserts `valueToCheck` is strictly greater than (>) `valueToBeAbove`.\n   *\n   *     assert.isAbove(5, 2, '5 is strictly greater than 2');\n   *\n   * @name isAbove\n   * @param {Mixed} valueToCheck\n   * @param {Mixed} valueToBeAbove\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isAbove = function (val, abv, msg) {\n    new Assertion(val, msg, assert.isAbove, true).to.be.above(abv);\n  };\n\n   /**\n   * ### .isAtLeast(valueToCheck, valueToBeAtLeast, [message])\n   *\n   * Asserts `valueToCheck` is greater than or equal to (>=) `valueToBeAtLeast`.\n   *\n   *     assert.isAtLeast(5, 2, '5 is greater or equal to 2');\n   *     assert.isAtLeast(3, 3, '3 is greater or equal to 3');\n   *\n   * @name isAtLeast\n   * @param {Mixed} valueToCheck\n   * @param {Mixed} valueToBeAtLeast\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isAtLeast = function (val, atlst, msg) {\n    new Assertion(val, msg, assert.isAtLeast, true).to.be.least(atlst);\n  };\n\n   /**\n   * ### .isBelow(valueToCheck, valueToBeBelow, [message])\n   *\n   * Asserts `valueToCheck` is strictly less than (<) `valueToBeBelow`.\n   *\n   *     assert.isBelow(3, 6, '3 is strictly less than 6');\n   *\n   * @name isBelow\n   * @param {Mixed} valueToCheck\n   * @param {Mixed} valueToBeBelow\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isBelow = function (val, blw, msg) {\n    new Assertion(val, msg, assert.isBelow, true).to.be.below(blw);\n  };\n\n   /**\n   * ### .isAtMost(valueToCheck, valueToBeAtMost, [message])\n   *\n   * Asserts `valueToCheck` is less than or equal to (<=) `valueToBeAtMost`.\n   *\n   *     assert.isAtMost(3, 6, '3 is less than or equal to 6');\n   *     assert.isAtMost(4, 4, '4 is less than or equal to 4');\n   *\n   * @name isAtMost\n   * @param {Mixed} valueToCheck\n   * @param {Mixed} valueToBeAtMost\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isAtMost = function (val, atmst, msg) {\n    new Assertion(val, msg, assert.isAtMost, true).to.be.most(atmst);\n  };\n\n  /**\n   * ### .isTrue(value, [message])\n   *\n   * Asserts that `value` is true.\n   *\n   *     var teaServed = true;\n   *     assert.isTrue(teaServed, 'the tea has been served');\n   *\n   * @name isTrue\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isTrue = function (val, msg) {\n    new Assertion(val, msg, assert.isTrue, true).is['true'];\n  };\n\n  /**\n   * ### .isNotTrue(value, [message])\n   *\n   * Asserts that `value` is not true.\n   *\n   *     var tea = 'tasty chai';\n   *     assert.isNotTrue(tea, 'great, time for tea!');\n   *\n   * @name isNotTrue\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotTrue = function (val, msg) {\n    new Assertion(val, msg, assert.isNotTrue, true).to.not.equal(true);\n  };\n\n  /**\n   * ### .isFalse(value, [message])\n   *\n   * Asserts that `value` is false.\n   *\n   *     var teaServed = false;\n   *     assert.isFalse(teaServed, 'no tea yet? hmm...');\n   *\n   * @name isFalse\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isFalse = function (val, msg) {\n    new Assertion(val, msg, assert.isFalse, true).is['false'];\n  };\n\n  /**\n   * ### .isNotFalse(value, [message])\n   *\n   * Asserts that `value` is not false.\n   *\n   *     var tea = 'tasty chai';\n   *     assert.isNotFalse(tea, 'great, time for tea!');\n   *\n   * @name isNotFalse\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotFalse = function (val, msg) {\n    new Assertion(val, msg, assert.isNotFalse, true).to.not.equal(false);\n  };\n\n  /**\n   * ### .isNull(value, [message])\n   *\n   * Asserts that `value` is null.\n   *\n   *     assert.isNull(err, 'there was no error');\n   *\n   * @name isNull\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNull = function (val, msg) {\n    new Assertion(val, msg, assert.isNull, true).to.equal(null);\n  };\n\n  /**\n   * ### .isNotNull(value, [message])\n   *\n   * Asserts that `value` is not null.\n   *\n   *     var tea = 'tasty chai';\n   *     assert.isNotNull(tea, 'great, time for tea!');\n   *\n   * @name isNotNull\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotNull = function (val, msg) {\n    new Assertion(val, msg, assert.isNotNull, true).to.not.equal(null);\n  };\n\n  /**\n   * ### .isNaN\n   *\n   * Asserts that value is NaN.\n   *\n   *     assert.isNaN(NaN, 'NaN is NaN');\n   *\n   * @name isNaN\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNaN = function (val, msg) {\n    new Assertion(val, msg, assert.isNaN, true).to.be.NaN;\n  };\n\n  /**\n   * ### .isNotNaN\n   *\n   * Asserts that value is not NaN.\n   *\n   *     assert.isNotNaN(4, '4 is not NaN');\n   *\n   * @name isNotNaN\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n  assert.isNotNaN = function (val, msg) {\n    new Assertion(val, msg, assert.isNotNaN, true).not.to.be.NaN;\n  };\n\n  /**\n   * ### .exists\n   *\n   * Asserts that the target is neither `null` nor `undefined`.\n   *\n   *     var foo = 'hi';\n   *\n   *     assert.exists(foo, 'foo is neither `null` nor `undefined`');\n   *\n   * @name exists\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.exists = function (val, msg) {\n    new Assertion(val, msg, assert.exists, true).to.exist;\n  };\n\n  /**\n   * ### .notExists\n   *\n   * Asserts that the target is either `null` or `undefined`.\n   *\n   *     var bar = null\n   *       , baz;\n   *\n   *     assert.notExists(bar);\n   *     assert.notExists(baz, 'baz is either null or undefined');\n   *\n   * @name notExists\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notExists = function (val, msg) {\n    new Assertion(val, msg, assert.notExists, true).to.not.exist;\n  };\n\n  /**\n   * ### .isUndefined(value, [message])\n   *\n   * Asserts that `value` is `undefined`.\n   *\n   *     var tea;\n   *     assert.isUndefined(tea, 'no tea defined');\n   *\n   * @name isUndefined\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isUndefined = function (val, msg) {\n    new Assertion(val, msg, assert.isUndefined, true).to.equal(undefined);\n  };\n\n  /**\n   * ### .isDefined(value, [message])\n   *\n   * Asserts that `value` is not `undefined`.\n   *\n   *     var tea = 'cup of chai';\n   *     assert.isDefined(tea, 'tea has been defined');\n   *\n   * @name isDefined\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isDefined = function (val, msg) {\n    new Assertion(val, msg, assert.isDefined, true).to.not.equal(undefined);\n  };\n\n  /**\n   * ### .isFunction(value, [message])\n   *\n   * Asserts that `value` is a function.\n   *\n   *     function serveTea() { return 'cup of tea'; };\n   *     assert.isFunction(serveTea, 'great, we can have tea now');\n   *\n   * @name isFunction\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isFunction = function (val, msg) {\n    new Assertion(val, msg, assert.isFunction, true).to.be.a('function');\n  };\n\n  /**\n   * ### .isNotFunction(value, [message])\n   *\n   * Asserts that `value` is _not_ a function.\n   *\n   *     var serveTea = [ 'heat', 'pour', 'sip' ];\n   *     assert.isNotFunction(serveTea, 'great, we have listed the steps');\n   *\n   * @name isNotFunction\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotFunction = function (val, msg) {\n    new Assertion(val, msg, assert.isNotFunction, true).to.not.be.a('function');\n  };\n\n  /**\n   * ### .isObject(value, [message])\n   *\n   * Asserts that `value` is an object of type 'Object' (as revealed by `Object.prototype.toString`).\n   * _The assertion does not match subclassed objects._\n   *\n   *     var selection = { name: 'Chai', serve: 'with spices' };\n   *     assert.isObject(selection, 'tea selection is an object');\n   *\n   * @name isObject\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isObject = function (val, msg) {\n    new Assertion(val, msg, assert.isObject, true).to.be.a('object');\n  };\n\n  /**\n   * ### .isNotObject(value, [message])\n   *\n   * Asserts that `value` is _not_ an object of type 'Object' (as revealed by `Object.prototype.toString`).\n   *\n   *     var selection = 'chai'\n   *     assert.isNotObject(selection, 'tea selection is not an object');\n   *     assert.isNotObject(null, 'null is not an object');\n   *\n   * @name isNotObject\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotObject = function (val, msg) {\n    new Assertion(val, msg, assert.isNotObject, true).to.not.be.a('object');\n  };\n\n  /**\n   * ### .isArray(value, [message])\n   *\n   * Asserts that `value` is an array.\n   *\n   *     var menu = [ 'green', 'chai', 'oolong' ];\n   *     assert.isArray(menu, 'what kind of tea do we want?');\n   *\n   * @name isArray\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isArray = function (val, msg) {\n    new Assertion(val, msg, assert.isArray, true).to.be.an('array');\n  };\n\n  /**\n   * ### .isNotArray(value, [message])\n   *\n   * Asserts that `value` is _not_ an array.\n   *\n   *     var menu = 'green|chai|oolong';\n   *     assert.isNotArray(menu, 'what kind of tea do we want?');\n   *\n   * @name isNotArray\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotArray = function (val, msg) {\n    new Assertion(val, msg, assert.isNotArray, true).to.not.be.an('array');\n  };\n\n  /**\n   * ### .isString(value, [message])\n   *\n   * Asserts that `value` is a string.\n   *\n   *     var teaOrder = 'chai';\n   *     assert.isString(teaOrder, 'order placed');\n   *\n   * @name isString\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isString = function (val, msg) {\n    new Assertion(val, msg, assert.isString, true).to.be.a('string');\n  };\n\n  /**\n   * ### .isNotString(value, [message])\n   *\n   * Asserts that `value` is _not_ a string.\n   *\n   *     var teaOrder = 4;\n   *     assert.isNotString(teaOrder, 'order placed');\n   *\n   * @name isNotString\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotString = function (val, msg) {\n    new Assertion(val, msg, assert.isNotString, true).to.not.be.a('string');\n  };\n\n  /**\n   * ### .isNumber(value, [message])\n   *\n   * Asserts that `value` is a number.\n   *\n   *     var cups = 2;\n   *     assert.isNumber(cups, 'how many cups');\n   *\n   * @name isNumber\n   * @param {Number} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNumber = function (val, msg) {\n    new Assertion(val, msg, assert.isNumber, true).to.be.a('number');\n  };\n\n  /**\n   * ### .isNotNumber(value, [message])\n   *\n   * Asserts that `value` is _not_ a number.\n   *\n   *     var cups = '2 cups please';\n   *     assert.isNotNumber(cups, 'how many cups');\n   *\n   * @name isNotNumber\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotNumber = function (val, msg) {\n    new Assertion(val, msg, assert.isNotNumber, true).to.not.be.a('number');\n  };\n\n   /**\n   * ### .isFinite(value, [message])\n   *\n   * Asserts that `value` is a finite number. Unlike `.isNumber`, this will fail for `NaN` and `Infinity`.\n   *\n   *     var cups = 2;\n   *     assert.isFinite(cups, 'how many cups');\n   *\n   *     assert.isFinite(NaN); // throws\n   *\n   * @name isFinite\n   * @param {Number} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isFinite = function (val, msg) {\n    new Assertion(val, msg, assert.isFinite, true).to.be.finite;\n  };\n\n  /**\n   * ### .isBoolean(value, [message])\n   *\n   * Asserts that `value` is a boolean.\n   *\n   *     var teaReady = true\n   *       , teaServed = false;\n   *\n   *     assert.isBoolean(teaReady, 'is the tea ready');\n   *     assert.isBoolean(teaServed, 'has tea been served');\n   *\n   * @name isBoolean\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isBoolean = function (val, msg) {\n    new Assertion(val, msg, assert.isBoolean, true).to.be.a('boolean');\n  };\n\n  /**\n   * ### .isNotBoolean(value, [message])\n   *\n   * Asserts that `value` is _not_ a boolean.\n   *\n   *     var teaReady = 'yep'\n   *       , teaServed = 'nope';\n   *\n   *     assert.isNotBoolean(teaReady, 'is the tea ready');\n   *     assert.isNotBoolean(teaServed, 'has tea been served');\n   *\n   * @name isNotBoolean\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotBoolean = function (val, msg) {\n    new Assertion(val, msg, assert.isNotBoolean, true).to.not.be.a('boolean');\n  };\n\n  /**\n   * ### .typeOf(value, name, [message])\n   *\n   * Asserts that `value`'s type is `name`, as determined by\n   * `Object.prototype.toString`.\n   *\n   *     assert.typeOf({ tea: 'chai' }, 'object', 'we have an object');\n   *     assert.typeOf(['chai', 'jasmine'], 'array', 'we have an array');\n   *     assert.typeOf('tea', 'string', 'we have a string');\n   *     assert.typeOf(/tea/, 'regexp', 'we have a regular expression');\n   *     assert.typeOf(null, 'null', 'we have a null');\n   *     assert.typeOf(undefined, 'undefined', 'we have an undefined');\n   *\n   * @name typeOf\n   * @param {Mixed} value\n   * @param {String} name\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.typeOf = function (val, type, msg) {\n    new Assertion(val, msg, assert.typeOf, true).to.be.a(type);\n  };\n\n  /**\n   * ### .notTypeOf(value, name, [message])\n   *\n   * Asserts that `value`'s type is _not_ `name`, as determined by\n   * `Object.prototype.toString`.\n   *\n   *     assert.notTypeOf('tea', 'number', 'strings are not numbers');\n   *\n   * @name notTypeOf\n   * @param {Mixed} value\n   * @param {String} typeof name\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notTypeOf = function (val, type, msg) {\n    new Assertion(val, msg, assert.notTypeOf, true).to.not.be.a(type);\n  };\n\n  /**\n   * ### .instanceOf(object, constructor, [message])\n   *\n   * Asserts that `value` is an instance of `constructor`.\n   *\n   *     var Tea = function (name) { this.name = name; }\n   *       , chai = new Tea('chai');\n   *\n   *     assert.instanceOf(chai, Tea, 'chai is an instance of tea');\n   *\n   * @name instanceOf\n   * @param {Object} object\n   * @param {Constructor} constructor\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.instanceOf = function (val, type, msg) {\n    new Assertion(val, msg, assert.instanceOf, true).to.be.instanceOf(type);\n  };\n\n  /**\n   * ### .notInstanceOf(object, constructor, [message])\n   *\n   * Asserts `value` is not an instance of `constructor`.\n   *\n   *     var Tea = function (name) { this.name = name; }\n   *       , chai = new String('chai');\n   *\n   *     assert.notInstanceOf(chai, Tea, 'chai is not an instance of tea');\n   *\n   * @name notInstanceOf\n   * @param {Object} object\n   * @param {Constructor} constructor\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notInstanceOf = function (val, type, msg) {\n    new Assertion(val, msg, assert.notInstanceOf, true)\n      .to.not.be.instanceOf(type);\n  };\n\n  /**\n   * ### .include(haystack, needle, [message])\n   *\n   * Asserts that `haystack` includes `needle`. Can be used to assert the\n   * inclusion of a value in an array, a substring in a string, or a subset of\n   * properties in an object.\n   *\n   *     assert.include([1,2,3], 2, 'array contains value');\n   *     assert.include('foobar', 'foo', 'string contains substring');\n   *     assert.include({ foo: 'bar', hello: 'universe' }, { foo: 'bar' }, 'object contains property');\n   *\n   * Strict equality (===) is used. When asserting the inclusion of a value in\n   * an array, the array is searched for an element that's strictly equal to the\n   * given value. When asserting a subset of properties in an object, the object\n   * is searched for the given property keys, checking that each one is present\n   * and strictly equal to the given property value. For instance:\n   *\n   *     var obj1 = {a: 1}\n   *       , obj2 = {b: 2};\n   *     assert.include([obj1, obj2], obj1);\n   *     assert.include({foo: obj1, bar: obj2}, {foo: obj1});\n   *     assert.include({foo: obj1, bar: obj2}, {foo: obj1, bar: obj2});\n   *\n   * @name include\n   * @param {Array|String} haystack\n   * @param {Mixed} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.include = function (exp, inc, msg) {\n    new Assertion(exp, msg, assert.include, true).include(inc);\n  };\n\n  /**\n   * ### .notInclude(haystack, needle, [message])\n   *\n   * Asserts that `haystack` does not include `needle`. Can be used to assert\n   * the absence of a value in an array, a substring in a string, or a subset of\n   * properties in an object.\n   *\n   *     assert.notInclude([1,2,3], 4, \"array doesn't contain value\");\n   *     assert.notInclude('foobar', 'baz', \"string doesn't contain substring\");\n   *     assert.notInclude({ foo: 'bar', hello: 'universe' }, { foo: 'baz' }, 'object doesn't contain property');\n   *\n   * Strict equality (===) is used. When asserting the absence of a value in an\n   * array, the array is searched to confirm the absence of an element that's\n   * strictly equal to the given value. When asserting a subset of properties in\n   * an object, the object is searched to confirm that at least one of the given\n   * property keys is either not present or not strictly equal to the given\n   * property value. For instance:\n   *\n   *     var obj1 = {a: 1}\n   *       , obj2 = {b: 2};\n   *     assert.notInclude([obj1, obj2], {a: 1});\n   *     assert.notInclude({foo: obj1, bar: obj2}, {foo: {a: 1}});\n   *     assert.notInclude({foo: obj1, bar: obj2}, {foo: obj1, bar: {b: 2}});\n   *\n   * @name notInclude\n   * @param {Array|String} haystack\n   * @param {Mixed} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notInclude = function (exp, inc, msg) {\n    new Assertion(exp, msg, assert.notInclude, true).not.include(inc);\n  };\n\n  /**\n   * ### .deepInclude(haystack, needle, [message])\n   *\n   * Asserts that `haystack` includes `needle`. Can be used to assert the\n   * inclusion of a value in an array or a subset of properties in an object.\n   * Deep equality is used.\n   *\n   *     var obj1 = {a: 1}\n   *       , obj2 = {b: 2};\n   *     assert.deepInclude([obj1, obj2], {a: 1});\n   *     assert.deepInclude({foo: obj1, bar: obj2}, {foo: {a: 1}});\n   *     assert.deepInclude({foo: obj1, bar: obj2}, {foo: {a: 1}, bar: {b: 2}});\n   *\n   * @name deepInclude\n   * @param {Array|String} haystack\n   * @param {Mixed} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.deepInclude = function (exp, inc, msg) {\n    new Assertion(exp, msg, assert.deepInclude, true).deep.include(inc);\n  };\n\n  /**\n   * ### .notDeepInclude(haystack, needle, [message])\n   *\n   * Asserts that `haystack` does not include `needle`. Can be used to assert\n   * the absence of a value in an array or a subset of properties in an object.\n   * Deep equality is used.\n   *\n   *     var obj1 = {a: 1}\n   *       , obj2 = {b: 2};\n   *     assert.notDeepInclude([obj1, obj2], {a: 9});\n   *     assert.notDeepInclude({foo: obj1, bar: obj2}, {foo: {a: 9}});\n   *     assert.notDeepInclude({foo: obj1, bar: obj2}, {foo: {a: 1}, bar: {b: 9}});\n   *\n   * @name notDeepInclude\n   * @param {Array|String} haystack\n   * @param {Mixed} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notDeepInclude = function (exp, inc, msg) {\n    new Assertion(exp, msg, assert.notDeepInclude, true).not.deep.include(inc);\n  };\n\n  /**\n   * ### .nestedInclude(haystack, needle, [message])\n   *\n   * Asserts that 'haystack' includes 'needle'.\n   * Can be used to assert the inclusion of a subset of properties in an\n   * object.\n   * Enables the use of dot- and bracket-notation for referencing nested\n   * properties.\n   * '[]' and '.' in property names can be escaped using double backslashes.\n   *\n   *     assert.nestedInclude({'.a': {'b': 'x'}}, {'\\\\.a.[b]': 'x'});\n   *     assert.nestedInclude({'a': {'[b]': 'x'}}, {'a.\\\\[b\\\\]': 'x'});\n   *\n   * @name nestedInclude\n   * @param {Object} haystack\n   * @param {Object} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.nestedInclude = function (exp, inc, msg) {\n    new Assertion(exp, msg, assert.nestedInclude, true).nested.include(inc);\n  };\n\n  /**\n   * ### .notNestedInclude(haystack, needle, [message])\n   *\n   * Asserts that 'haystack' does not include 'needle'.\n   * Can be used to assert the absence of a subset of properties in an\n   * object.\n   * Enables the use of dot- and bracket-notation for referencing nested\n   * properties.\n   * '[]' and '.' in property names can be escaped using double backslashes.\n   *\n   *     assert.notNestedInclude({'.a': {'b': 'x'}}, {'\\\\.a.b': 'y'});\n   *     assert.notNestedInclude({'a': {'[b]': 'x'}}, {'a.\\\\[b\\\\]': 'y'});\n   *\n   * @name notNestedInclude\n   * @param {Object} haystack\n   * @param {Object} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notNestedInclude = function (exp, inc, msg) {\n    new Assertion(exp, msg, assert.notNestedInclude, true)\n      .not.nested.include(inc);\n  };\n\n  /**\n   * ### .deepNestedInclude(haystack, needle, [message])\n   *\n   * Asserts that 'haystack' includes 'needle'.\n   * Can be used to assert the inclusion of a subset of properties in an\n   * object while checking for deep equality.\n   * Enables the use of dot- and bracket-notation for referencing nested\n   * properties.\n   * '[]' and '.' in property names can be escaped using double backslashes.\n   *\n   *     assert.deepNestedInclude({a: {b: [{x: 1}]}}, {'a.b[0]': {x: 1}});\n   *     assert.deepNestedInclude({'.a': {'[b]': {x: 1}}}, {'\\\\.a.\\\\[b\\\\]': {x: 1}});\n   *\n   * @name deepNestedInclude\n   * @param {Object} haystack\n   * @param {Object} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.deepNestedInclude = function(exp, inc, msg) {\n    new Assertion(exp, msg, assert.deepNestedInclude, true)\n      .deep.nested.include(inc);\n  };\n\n  /**\n   * ### .notDeepNestedInclude(haystack, needle, [message])\n   *\n   * Asserts that 'haystack' does not include 'needle'.\n   * Can be used to assert the absence of a subset of properties in an\n   * object while checking for deep equality.\n   * Enables the use of dot- and bracket-notation for referencing nested\n   * properties.\n   * '[]' and '.' in property names can be escaped using double backslashes.\n   *\n   *     assert.notDeepNestedInclude({a: {b: [{x: 1}]}}, {'a.b[0]': {y: 1}})\n   *     assert.notDeepNestedInclude({'.a': {'[b]': {x: 1}}}, {'\\\\.a.\\\\[b\\\\]': {y: 2}});\n   *\n   * @name notDeepNestedInclude\n   * @param {Object} haystack\n   * @param {Object} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notDeepNestedInclude = function(exp, inc, msg) {\n    new Assertion(exp, msg, assert.notDeepNestedInclude, true)\n      .not.deep.nested.include(inc);\n  };\n\n  /**\n   * ### .ownInclude(haystack, needle, [message])\n   *\n   * Asserts that 'haystack' includes 'needle'.\n   * Can be used to assert the inclusion of a subset of properties in an\n   * object while ignoring inherited properties.\n   *\n   *     assert.ownInclude({ a: 1 }, { a: 1 });\n   *\n   * @name ownInclude\n   * @param {Object} haystack\n   * @param {Object} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.ownInclude = function(exp, inc, msg) {\n    new Assertion(exp, msg, assert.ownInclude, true).own.include(inc);\n  };\n\n  /**\n   * ### .notOwnInclude(haystack, needle, [message])\n   *\n   * Asserts that 'haystack' includes 'needle'.\n   * Can be used to assert the absence of a subset of properties in an\n   * object while ignoring inherited properties.\n   *\n   *     Object.prototype.b = 2;\n   *\n   *     assert.notOwnInclude({ a: 1 }, { b: 2 });\n   *\n   * @name notOwnInclude\n   * @param {Object} haystack\n   * @param {Object} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notOwnInclude = function(exp, inc, msg) {\n    new Assertion(exp, msg, assert.notOwnInclude, true).not.own.include(inc);\n  };\n\n  /**\n   * ### .deepOwnInclude(haystack, needle, [message])\n   *\n   * Asserts that 'haystack' includes 'needle'.\n   * Can be used to assert the inclusion of a subset of properties in an\n   * object while ignoring inherited properties and checking for deep equality.\n   *\n   *      assert.deepOwnInclude({a: {b: 2}}, {a: {b: 2}});\n   *\n   * @name deepOwnInclude\n   * @param {Object} haystack\n   * @param {Object} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.deepOwnInclude = function(exp, inc, msg) {\n    new Assertion(exp, msg, assert.deepOwnInclude, true)\n      .deep.own.include(inc);\n  };\n\n   /**\n   * ### .notDeepOwnInclude(haystack, needle, [message])\n   *\n   * Asserts that 'haystack' includes 'needle'.\n   * Can be used to assert the absence of a subset of properties in an\n   * object while ignoring inherited properties and checking for deep equality.\n   *\n   *      assert.notDeepOwnInclude({a: {b: 2}}, {a: {c: 3}});\n   *\n   * @name notDeepOwnInclude\n   * @param {Object} haystack\n   * @param {Object} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notDeepOwnInclude = function(exp, inc, msg) {\n    new Assertion(exp, msg, assert.notDeepOwnInclude, true)\n      .not.deep.own.include(inc);\n  };\n\n  /**\n   * ### .match(value, regexp, [message])\n   *\n   * Asserts that `value` matches the regular expression `regexp`.\n   *\n   *     assert.match('foobar', /^foo/, 'regexp matches');\n   *\n   * @name match\n   * @param {Mixed} value\n   * @param {RegExp} regexp\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.match = function (exp, re, msg) {\n    new Assertion(exp, msg, assert.match, true).to.match(re);\n  };\n\n  /**\n   * ### .notMatch(value, regexp, [message])\n   *\n   * Asserts that `value` does not match the regular expression `regexp`.\n   *\n   *     assert.notMatch('foobar', /^foo/, 'regexp does not match');\n   *\n   * @name notMatch\n   * @param {Mixed} value\n   * @param {RegExp} regexp\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notMatch = function (exp, re, msg) {\n    new Assertion(exp, msg, assert.notMatch, true).to.not.match(re);\n  };\n\n  /**\n   * ### .property(object, property, [message])\n   *\n   * Asserts that `object` has a direct or inherited property named by\n   * `property`.\n   *\n   *     assert.property({ tea: { green: 'matcha' }}, 'tea');\n   *     assert.property({ tea: { green: 'matcha' }}, 'toString');\n   *\n   * @name property\n   * @param {Object} object\n   * @param {String} property\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.property = function (obj, prop, msg) {\n    new Assertion(obj, msg, assert.property, true).to.have.property(prop);\n  };\n\n  /**\n   * ### .notProperty(object, property, [message])\n   *\n   * Asserts that `object` does _not_ have a direct or inherited property named\n   * by `property`.\n   *\n   *     assert.notProperty({ tea: { green: 'matcha' }}, 'coffee');\n   *\n   * @name notProperty\n   * @param {Object} object\n   * @param {String} property\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notProperty = function (obj, prop, msg) {\n    new Assertion(obj, msg, assert.notProperty, true)\n      .to.not.have.property(prop);\n  };\n\n  /**\n   * ### .propertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` has a direct or inherited property named by\n   * `property` with a value given by `value`. Uses a strict equality check\n   * (===).\n   *\n   *     assert.propertyVal({ tea: 'is good' }, 'tea', 'is good');\n   *\n   * @name propertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.propertyVal = function (obj, prop, val, msg) {\n    new Assertion(obj, msg, assert.propertyVal, true)\n      .to.have.property(prop, val);\n  };\n\n  /**\n   * ### .notPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` does _not_ have a direct or inherited property named\n   * by `property` with value given by `value`. Uses a strict equality check\n   * (===).\n   *\n   *     assert.notPropertyVal({ tea: 'is good' }, 'tea', 'is bad');\n   *     assert.notPropertyVal({ tea: 'is good' }, 'coffee', 'is good');\n   *\n   * @name notPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notPropertyVal = function (obj, prop, val, msg) {\n    new Assertion(obj, msg, assert.notPropertyVal, true)\n      .to.not.have.property(prop, val);\n  };\n\n  /**\n   * ### .deepPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` has a direct or inherited property named by\n   * `property` with a value given by `value`. Uses a deep equality check.\n   *\n   *     assert.deepPropertyVal({ tea: { green: 'matcha' } }, 'tea', { green: 'matcha' });\n   *\n   * @name deepPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.deepPropertyVal = function (obj, prop, val, msg) {\n    new Assertion(obj, msg, assert.deepPropertyVal, true)\n      .to.have.deep.property(prop, val);\n  };\n\n  /**\n   * ### .notDeepPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` does _not_ have a direct or inherited property named\n   * by `property` with value given by `value`. Uses a deep equality check.\n   *\n   *     assert.notDeepPropertyVal({ tea: { green: 'matcha' } }, 'tea', { black: 'matcha' });\n   *     assert.notDeepPropertyVal({ tea: { green: 'matcha' } }, 'tea', { green: 'oolong' });\n   *     assert.notDeepPropertyVal({ tea: { green: 'matcha' } }, 'coffee', { green: 'matcha' });\n   *\n   * @name notDeepPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notDeepPropertyVal = function (obj, prop, val, msg) {\n    new Assertion(obj, msg, assert.notDeepPropertyVal, true)\n      .to.not.have.deep.property(prop, val);\n  };\n\n  /**\n   * ### .ownProperty(object, property, [message])\n   *\n   * Asserts that `object` has a direct property named by `property`. Inherited\n   * properties aren't checked.\n   *\n   *     assert.ownProperty({ tea: { green: 'matcha' }}, 'tea');\n   *\n   * @name ownProperty\n   * @param {Object} object\n   * @param {String} property\n   * @param {String} message\n   * @api public\n   */\n\n  assert.ownProperty = function (obj, prop, msg) {\n    new Assertion(obj, msg, assert.ownProperty, true)\n      .to.have.own.property(prop);\n  };\n\n  /**\n   * ### .notOwnProperty(object, property, [message])\n   *\n   * Asserts that `object` does _not_ have a direct property named by\n   * `property`. Inherited properties aren't checked.\n   *\n   *     assert.notOwnProperty({ tea: { green: 'matcha' }}, 'coffee');\n   *     assert.notOwnProperty({}, 'toString');\n   *\n   * @name notOwnProperty\n   * @param {Object} object\n   * @param {String} property\n   * @param {String} message\n   * @api public\n   */\n\n  assert.notOwnProperty = function (obj, prop, msg) {\n    new Assertion(obj, msg, assert.notOwnProperty, true)\n      .to.not.have.own.property(prop);\n  };\n\n  /**\n   * ### .ownPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` has a direct property named by `property` and a value\n   * equal to the provided `value`. Uses a strict equality check (===).\n   * Inherited properties aren't checked.\n   *\n   *     assert.ownPropertyVal({ coffee: 'is good'}, 'coffee', 'is good');\n   *\n   * @name ownPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @api public\n   */\n\n  assert.ownPropertyVal = function (obj, prop, value, msg) {\n    new Assertion(obj, msg, assert.ownPropertyVal, true)\n      .to.have.own.property(prop, value);\n  };\n\n  /**\n   * ### .notOwnPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` does _not_ have a direct property named by `property`\n   * with a value equal to the provided `value`. Uses a strict equality check\n   * (===). Inherited properties aren't checked.\n   *\n   *     assert.notOwnPropertyVal({ tea: 'is better'}, 'tea', 'is worse');\n   *     assert.notOwnPropertyVal({}, 'toString', Object.prototype.toString);\n   *\n   * @name notOwnPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @api public\n   */\n\n  assert.notOwnPropertyVal = function (obj, prop, value, msg) {\n    new Assertion(obj, msg, assert.notOwnPropertyVal, true)\n      .to.not.have.own.property(prop, value);\n  };\n\n  /**\n   * ### .deepOwnPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` has a direct property named by `property` and a value\n   * equal to the provided `value`. Uses a deep equality check. Inherited\n   * properties aren't checked.\n   *\n   *     assert.deepOwnPropertyVal({ tea: { green: 'matcha' } }, 'tea', { green: 'matcha' });\n   *\n   * @name deepOwnPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @api public\n   */\n\n  assert.deepOwnPropertyVal = function (obj, prop, value, msg) {\n    new Assertion(obj, msg, assert.deepOwnPropertyVal, true)\n      .to.have.deep.own.property(prop, value);\n  };\n\n  /**\n   * ### .notDeepOwnPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` does _not_ have a direct property named by `property`\n   * with a value equal to the provided `value`. Uses a deep equality check.\n   * Inherited properties aren't checked.\n   *\n   *     assert.notDeepOwnPropertyVal({ tea: { green: 'matcha' } }, 'tea', { black: 'matcha' });\n   *     assert.notDeepOwnPropertyVal({ tea: { green: 'matcha' } }, 'tea', { green: 'oolong' });\n   *     assert.notDeepOwnPropertyVal({ tea: { green: 'matcha' } }, 'coffee', { green: 'matcha' });\n   *     assert.notDeepOwnPropertyVal({}, 'toString', Object.prototype.toString);\n   *\n   * @name notDeepOwnPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @api public\n   */\n\n  assert.notDeepOwnPropertyVal = function (obj, prop, value, msg) {\n    new Assertion(obj, msg, assert.notDeepOwnPropertyVal, true)\n      .to.not.have.deep.own.property(prop, value);\n  };\n\n  /**\n   * ### .nestedProperty(object, property, [message])\n   *\n   * Asserts that `object` has a direct or inherited property named by\n   * `property`, which can be a string using dot- and bracket-notation for\n   * nested reference.\n   *\n   *     assert.nestedProperty({ tea: { green: 'matcha' }}, 'tea.green');\n   *\n   * @name nestedProperty\n   * @param {Object} object\n   * @param {String} property\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.nestedProperty = function (obj, prop, msg) {\n    new Assertion(obj, msg, assert.nestedProperty, true)\n      .to.have.nested.property(prop);\n  };\n\n  /**\n   * ### .notNestedProperty(object, property, [message])\n   *\n   * Asserts that `object` does _not_ have a property named by `property`, which\n   * can be a string using dot- and bracket-notation for nested reference. The\n   * property cannot exist on the object nor anywhere in its prototype chain.\n   *\n   *     assert.notNestedProperty({ tea: { green: 'matcha' }}, 'tea.oolong');\n   *\n   * @name notNestedProperty\n   * @param {Object} object\n   * @param {String} property\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notNestedProperty = function (obj, prop, msg) {\n    new Assertion(obj, msg, assert.notNestedProperty, true)\n      .to.not.have.nested.property(prop);\n  };\n\n  /**\n   * ### .nestedPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` has a property named by `property` with value given\n   * by `value`. `property` can use dot- and bracket-notation for nested\n   * reference. Uses a strict equality check (===).\n   *\n   *     assert.nestedPropertyVal({ tea: { green: 'matcha' }}, 'tea.green', 'matcha');\n   *\n   * @name nestedPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.nestedPropertyVal = function (obj, prop, val, msg) {\n    new Assertion(obj, msg, assert.nestedPropertyVal, true)\n      .to.have.nested.property(prop, val);\n  };\n\n  /**\n   * ### .notNestedPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` does _not_ have a property named by `property` with\n   * value given by `value`. `property` can use dot- and bracket-notation for\n   * nested reference. Uses a strict equality check (===).\n   *\n   *     assert.notNestedPropertyVal({ tea: { green: 'matcha' }}, 'tea.green', 'konacha');\n   *     assert.notNestedPropertyVal({ tea: { green: 'matcha' }}, 'coffee.green', 'matcha');\n   *\n   * @name notNestedPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notNestedPropertyVal = function (obj, prop, val, msg) {\n    new Assertion(obj, msg, assert.notNestedPropertyVal, true)\n      .to.not.have.nested.property(prop, val);\n  };\n\n  /**\n   * ### .deepNestedPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` has a property named by `property` with a value given\n   * by `value`. `property` can use dot- and bracket-notation for nested\n   * reference. Uses a deep equality check.\n   *\n   *     assert.deepNestedPropertyVal({ tea: { green: { matcha: 'yum' } } }, 'tea.green', { matcha: 'yum' });\n   *\n   * @name deepNestedPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.deepNestedPropertyVal = function (obj, prop, val, msg) {\n    new Assertion(obj, msg, assert.deepNestedPropertyVal, true)\n      .to.have.deep.nested.property(prop, val);\n  };\n\n  /**\n   * ### .notDeepNestedPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` does _not_ have a property named by `property` with\n   * value given by `value`. `property` can use dot- and bracket-notation for\n   * nested reference. Uses a deep equality check.\n   *\n   *     assert.notDeepNestedPropertyVal({ tea: { green: { matcha: 'yum' } } }, 'tea.green', { oolong: 'yum' });\n   *     assert.notDeepNestedPropertyVal({ tea: { green: { matcha: 'yum' } } }, 'tea.green', { matcha: 'yuck' });\n   *     assert.notDeepNestedPropertyVal({ tea: { green: { matcha: 'yum' } } }, 'tea.black', { matcha: 'yum' });\n   *\n   * @name notDeepNestedPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notDeepNestedPropertyVal = function (obj, prop, val, msg) {\n    new Assertion(obj, msg, assert.notDeepNestedPropertyVal, true)\n      .to.not.have.deep.nested.property(prop, val);\n  }\n\n  /**\n   * ### .lengthOf(object, length, [message])\n   *\n   * Asserts that `object` has a `length` or `size` with the expected value.\n   *\n   *     assert.lengthOf([1,2,3], 3, 'array has length of 3');\n   *     assert.lengthOf('foobar', 6, 'string has length of 6');\n   *     assert.lengthOf(new Set([1,2,3]), 3, 'set has size of 3');\n   *     assert.lengthOf(new Map([['a',1],['b',2],['c',3]]), 3, 'map has size of 3');\n   *\n   * @name lengthOf\n   * @param {Mixed} object\n   * @param {Number} length\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.lengthOf = function (exp, len, msg) {\n    new Assertion(exp, msg, assert.lengthOf, true).to.have.lengthOf(len);\n  };\n\n  /**\n   * ### .hasAnyKeys(object, [keys], [message])\n   *\n   * Asserts that `object` has at least one of the `keys` provided.\n   * You can also provide a single object instead of a `keys` array and its keys\n   * will be used as the expected set of keys.\n   *\n   *     assert.hasAnyKeys({foo: 1, bar: 2, baz: 3}, ['foo', 'iDontExist', 'baz']);\n   *     assert.hasAnyKeys({foo: 1, bar: 2, baz: 3}, {foo: 30, iDontExist: 99, baz: 1337});\n   *     assert.hasAnyKeys(new Map([[{foo: 1}, 'bar'], ['key', 'value']]), [{foo: 1}, 'key']);\n   *     assert.hasAnyKeys(new Set([{foo: 'bar'}, 'anotherKey']), [{foo: 'bar'}, 'anotherKey']);\n   *\n   * @name hasAnyKeys\n   * @param {Mixed} object\n   * @param {Array|Object} keys\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.hasAnyKeys = function (obj, keys, msg) {\n    new Assertion(obj, msg, assert.hasAnyKeys, true).to.have.any.keys(keys);\n  }\n\n  /**\n   * ### .hasAllKeys(object, [keys], [message])\n   *\n   * Asserts that `object` has all and only all of the `keys` provided.\n   * You can also provide a single object instead of a `keys` array and its keys\n   * will be used as the expected set of keys.\n   *\n   *     assert.hasAllKeys({foo: 1, bar: 2, baz: 3}, ['foo', 'bar', 'baz']);\n   *     assert.hasAllKeys({foo: 1, bar: 2, baz: 3}, {foo: 30, bar: 99, baz: 1337]);\n   *     assert.hasAllKeys(new Map([[{foo: 1}, 'bar'], ['key', 'value']]), [{foo: 1}, 'key']);\n   *     assert.hasAllKeys(new Set([{foo: 'bar'}, 'anotherKey'], [{foo: 'bar'}, 'anotherKey']);\n   *\n   * @name hasAllKeys\n   * @param {Mixed} object\n   * @param {String[]} keys\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.hasAllKeys = function (obj, keys, msg) {\n    new Assertion(obj, msg, assert.hasAllKeys, true).to.have.all.keys(keys);\n  }\n\n  /**\n   * ### .containsAllKeys(object, [keys], [message])\n   *\n   * Asserts that `object` has all of the `keys` provided but may have more keys not listed.\n   * You can also provide a single object instead of a `keys` array and its keys\n   * will be used as the expected set of keys.\n   *\n   *     assert.containsAllKeys({foo: 1, bar: 2, baz: 3}, ['foo', 'baz']);\n   *     assert.containsAllKeys({foo: 1, bar: 2, baz: 3}, ['foo', 'bar', 'baz']);\n   *     assert.containsAllKeys({foo: 1, bar: 2, baz: 3}, {foo: 30, baz: 1337});\n   *     assert.containsAllKeys({foo: 1, bar: 2, baz: 3}, {foo: 30, bar: 99, baz: 1337});\n   *     assert.containsAllKeys(new Map([[{foo: 1}, 'bar'], ['key', 'value']]), [{foo: 1}]);\n   *     assert.containsAllKeys(new Map([[{foo: 1}, 'bar'], ['key', 'value']]), [{foo: 1}, 'key']);\n   *     assert.containsAllKeys(new Set([{foo: 'bar'}, 'anotherKey'], [{foo: 'bar'}]);\n   *     assert.containsAllKeys(new Set([{foo: 'bar'}, 'anotherKey'], [{foo: 'bar'}, 'anotherKey']);\n   *\n   * @name containsAllKeys\n   * @param {Mixed} object\n   * @param {String[]} keys\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.containsAllKeys = function (obj, keys, msg) {\n    new Assertion(obj, msg, assert.containsAllKeys, true)\n      .to.contain.all.keys(keys);\n  }\n\n  /**\n   * ### .doesNotHaveAnyKeys(object, [keys], [message])\n   *\n   * Asserts that `object` has none of the `keys` provided.\n   * You can also provide a single object instead of a `keys` array and its keys\n   * will be used as the expected set of keys.\n   *\n   *     assert.doesNotHaveAnyKeys({foo: 1, bar: 2, baz: 3}, ['one', 'two', 'example']);\n   *     assert.doesNotHaveAnyKeys({foo: 1, bar: 2, baz: 3}, {one: 1, two: 2, example: 'foo'});\n   *     assert.doesNotHaveAnyKeys(new Map([[{foo: 1}, 'bar'], ['key', 'value']]), [{one: 'two'}, 'example']);\n   *     assert.doesNotHaveAnyKeys(new Set([{foo: 'bar'}, 'anotherKey'], [{one: 'two'}, 'example']);\n   *\n   * @name doesNotHaveAnyKeys\n   * @param {Mixed} object\n   * @param {String[]} keys\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.doesNotHaveAnyKeys = function (obj, keys, msg) {\n    new Assertion(obj, msg, assert.doesNotHaveAnyKeys, true)\n      .to.not.have.any.keys(keys);\n  }\n\n  /**\n   * ### .doesNotHaveAllKeys(object, [keys], [message])\n   *\n   * Asserts that `object` does not have at least one of the `keys` provided.\n   * You can also provide a single object instead of a `keys` array and its keys\n   * will be used as the expected set of keys.\n   *\n   *     assert.doesNotHaveAllKeys({foo: 1, bar: 2, baz: 3}, ['one', 'two', 'example']);\n   *     assert.doesNotHaveAllKeys({foo: 1, bar: 2, baz: 3}, {one: 1, two: 2, example: 'foo'});\n   *     assert.doesNotHaveAllKeys(new Map([[{foo: 1}, 'bar'], ['key', 'value']]), [{one: 'two'}, 'example']);\n   *     assert.doesNotHaveAllKeys(new Set([{foo: 'bar'}, 'anotherKey'], [{one: 'two'}, 'example']);\n   *\n   * @name doesNotHaveAllKeys\n   * @param {Mixed} object\n   * @param {String[]} keys\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.doesNotHaveAllKeys = function (obj, keys, msg) {\n    new Assertion(obj, msg, assert.doesNotHaveAllKeys, true)\n      .to.not.have.all.keys(keys);\n  }\n\n  /**\n   * ### .hasAnyDeepKeys(object, [keys], [message])\n   *\n   * Asserts that `object` has at least one of the `keys` provided.\n   * Since Sets and Maps can have objects as keys you can use this assertion to perform\n   * a deep comparison.\n   * You can also provide a single object instead of a `keys` array and its keys\n   * will be used as the expected set of keys.\n   *\n   *     assert.hasAnyDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [1, 2]]), {one: 'one'});\n   *     assert.hasAnyDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [1, 2]]), [{one: 'one'}, {two: 'two'}]);\n   *     assert.hasAnyDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [{two: 'two'}, 'valueTwo']]), [{one: 'one'}, {two: 'two'}]);\n   *     assert.hasAnyDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), {one: 'one'});\n   *     assert.hasAnyDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), [{one: 'one'}, {three: 'three'}]);\n   *     assert.hasAnyDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), [{one: 'one'}, {two: 'two'}]);\n   *\n   * @name doesNotHaveAllKeys\n   * @param {Mixed} object\n   * @param {Array|Object} keys\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.hasAnyDeepKeys = function (obj, keys, msg) {\n    new Assertion(obj, msg, assert.hasAnyDeepKeys, true)\n      .to.have.any.deep.keys(keys);\n  }\n\n /**\n   * ### .hasAllDeepKeys(object, [keys], [message])\n   *\n   * Asserts that `object` has all and only all of the `keys` provided.\n   * Since Sets and Maps can have objects as keys you can use this assertion to perform\n   * a deep comparison.\n   * You can also provide a single object instead of a `keys` array and its keys\n   * will be used as the expected set of keys.\n   *\n   *     assert.hasAllDeepKeys(new Map([[{one: 'one'}, 'valueOne']]), {one: 'one'});\n   *     assert.hasAllDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [{two: 'two'}, 'valueTwo']]), [{one: 'one'}, {two: 'two'}]);\n   *     assert.hasAllDeepKeys(new Set([{one: 'one'}]), {one: 'one'});\n   *     assert.hasAllDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), [{one: 'one'}, {two: 'two'}]);\n   *\n   * @name hasAllDeepKeys\n   * @param {Mixed} object\n   * @param {Array|Object} keys\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.hasAllDeepKeys = function (obj, keys, msg) {\n    new Assertion(obj, msg, assert.hasAllDeepKeys, true)\n      .to.have.all.deep.keys(keys);\n  }\n\n /**\n   * ### .containsAllDeepKeys(object, [keys], [message])\n   *\n   * Asserts that `object` contains all of the `keys` provided.\n   * Since Sets and Maps can have objects as keys you can use this assertion to perform\n   * a deep comparison.\n   * You can also provide a single object instead of a `keys` array and its keys\n   * will be used as the expected set of keys.\n   *\n   *     assert.containsAllDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [1, 2]]), {one: 'one'});\n   *     assert.containsAllDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [{two: 'two'}, 'valueTwo']]), [{one: 'one'}, {two: 'two'}]);\n   *     assert.containsAllDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), {one: 'one'});\n   *     assert.containsAllDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), [{one: 'one'}, {two: 'two'}]);\n   *\n   * @name containsAllDeepKeys\n   * @param {Mixed} object\n   * @param {Array|Object} keys\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.containsAllDeepKeys = function (obj, keys, msg) {\n    new Assertion(obj, msg, assert.containsAllDeepKeys, true)\n      .to.contain.all.deep.keys(keys);\n  }\n\n /**\n   * ### .doesNotHaveAnyDeepKeys(object, [keys], [message])\n   *\n   * Asserts that `object` has none of the `keys` provided.\n   * Since Sets and Maps can have objects as keys you can use this assertion to perform\n   * a deep comparison.\n   * You can also provide a single object instead of a `keys` array and its keys\n   * will be used as the expected set of keys.\n   *\n   *     assert.doesNotHaveAnyDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [1, 2]]), {thisDoesNot: 'exist'});\n   *     assert.doesNotHaveAnyDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [{two: 'two'}, 'valueTwo']]), [{twenty: 'twenty'}, {fifty: 'fifty'}]);\n   *     assert.doesNotHaveAnyDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), {twenty: 'twenty'});\n   *     assert.doesNotHaveAnyDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), [{twenty: 'twenty'}, {fifty: 'fifty'}]);\n   *\n   * @name doesNotHaveAnyDeepKeys\n   * @param {Mixed} object\n   * @param {Array|Object} keys\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.doesNotHaveAnyDeepKeys = function (obj, keys, msg) {\n    new Assertion(obj, msg, assert.doesNotHaveAnyDeepKeys, true)\n      .to.not.have.any.deep.keys(keys);\n  }\n\n /**\n   * ### .doesNotHaveAllDeepKeys(object, [keys], [message])\n   *\n   * Asserts that `object` does not have at least one of the `keys` provided.\n   * Since Sets and Maps can have objects as keys you can use this assertion to perform\n   * a deep comparison.\n   * You can also provide a single object instead of a `keys` array and its keys\n   * will be used as the expected set of keys.\n   *\n   *     assert.doesNotHaveAllDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [1, 2]]), {thisDoesNot: 'exist'});\n   *     assert.doesNotHaveAllDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [{two: 'two'}, 'valueTwo']]), [{twenty: 'twenty'}, {one: 'one'}]);\n   *     assert.doesNotHaveAllDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), {twenty: 'twenty'});\n   *     assert.doesNotHaveAllDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), [{one: 'one'}, {fifty: 'fifty'}]);\n   *\n   * @name doesNotHaveAllDeepKeys\n   * @param {Mixed} object\n   * @param {Array|Object} keys\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.doesNotHaveAllDeepKeys = function (obj, keys, msg) {\n    new Assertion(obj, msg, assert.doesNotHaveAllDeepKeys, true)\n      .to.not.have.all.deep.keys(keys);\n  }\n\n /**\n   * ### .throws(fn, [errorLike/string/regexp], [string/regexp], [message])\n   *\n   * If `errorLike` is an `Error` constructor, asserts that `fn` will throw an error that is an\n   * instance of `errorLike`.\n   * If `errorLike` is an `Error` instance, asserts that the error thrown is the same\n   * instance as `errorLike`.\n   * If `errMsgMatcher` is provided, it also asserts that the error thrown will have a\n   * message matching `errMsgMatcher`.\n   *\n   *     assert.throws(fn, 'Error thrown must have this msg');\n   *     assert.throws(fn, /Error thrown must have a msg that matches this/);\n   *     assert.throws(fn, ReferenceError);\n   *     assert.throws(fn, errorInstance);\n   *     assert.throws(fn, ReferenceError, 'Error thrown must be a ReferenceError and have this msg');\n   *     assert.throws(fn, errorInstance, 'Error thrown must be the same errorInstance and have this msg');\n   *     assert.throws(fn, ReferenceError, /Error thrown must be a ReferenceError and match this/);\n   *     assert.throws(fn, errorInstance, /Error thrown must be the same errorInstance and match this/);\n   *\n   * @name throws\n   * @alias throw\n   * @alias Throw\n   * @param {Function} fn\n   * @param {ErrorConstructor|Error} errorLike\n   * @param {RegExp|String} errMsgMatcher\n   * @param {String} message\n   * @see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error#Error_types\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.throws = function (fn, errorLike, errMsgMatcher, msg) {\n    if ('string' === typeof errorLike || errorLike instanceof RegExp) {\n      errMsgMatcher = errorLike;\n      errorLike = null;\n    }\n\n    var assertErr = new Assertion(fn, msg, assert.throws, true)\n      .to.throw(errorLike, errMsgMatcher);\n    return flag(assertErr, 'object');\n  };\n\n  /**\n   * ### .doesNotThrow(fn, [errorLike/string/regexp], [string/regexp], [message])\n   *\n   * If `errorLike` is an `Error` constructor, asserts that `fn` will _not_ throw an error that is an\n   * instance of `errorLike`.\n   * If `errorLike` is an `Error` instance, asserts that the error thrown is _not_ the same\n   * instance as `errorLike`.\n   * If `errMsgMatcher` is provided, it also asserts that the error thrown will _not_ have a\n   * message matching `errMsgMatcher`.\n   *\n   *     assert.doesNotThrow(fn, 'Any Error thrown must not have this message');\n   *     assert.doesNotThrow(fn, /Any Error thrown must not match this/);\n   *     assert.doesNotThrow(fn, Error);\n   *     assert.doesNotThrow(fn, errorInstance);\n   *     assert.doesNotThrow(fn, Error, 'Error must not have this message');\n   *     assert.doesNotThrow(fn, errorInstance, 'Error must not have this message');\n   *     assert.doesNotThrow(fn, Error, /Error must not match this/);\n   *     assert.doesNotThrow(fn, errorInstance, /Error must not match this/);\n   *\n   * @name doesNotThrow\n   * @param {Function} fn\n   * @param {ErrorConstructor} errorLike\n   * @param {RegExp|String} errMsgMatcher\n   * @param {String} message\n   * @see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error#Error_types\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.doesNotThrow = function (fn, errorLike, errMsgMatcher, msg) {\n    if ('string' === typeof errorLike || errorLike instanceof RegExp) {\n      errMsgMatcher = errorLike;\n      errorLike = null;\n    }\n\n    new Assertion(fn, msg, assert.doesNotThrow, true)\n      .to.not.throw(errorLike, errMsgMatcher);\n  };\n\n  /**\n   * ### .operator(val1, operator, val2, [message])\n   *\n   * Compares two values using `operator`.\n   *\n   *     assert.operator(1, '<', 2, 'everything is ok');\n   *     assert.operator(1, '>', 2, 'this will fail');\n   *\n   * @name operator\n   * @param {Mixed} val1\n   * @param {String} operator\n   * @param {Mixed} val2\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.operator = function (val, operator, val2, msg) {\n    var ok;\n    switch(operator) {\n      case '==':\n        ok = val == val2;\n        break;\n      case '===':\n        ok = val === val2;\n        break;\n      case '>':\n        ok = val > val2;\n        break;\n      case '>=':\n        ok = val >= val2;\n        break;\n      case '<':\n        ok = val < val2;\n        break;\n      case '<=':\n        ok = val <= val2;\n        break;\n      case '!=':\n        ok = val != val2;\n        break;\n      case '!==':\n        ok = val !== val2;\n        break;\n      default:\n        msg = msg ? msg + ': ' : msg;\n        throw new chai.AssertionError(\n          msg + 'Invalid operator \"' + operator + '\"',\n          undefined,\n          assert.operator\n        );\n    }\n    var test = new Assertion(ok, msg, assert.operator, true);\n    test.assert(\n        true === flag(test, 'object')\n      , 'expected ' + util.inspect(val) + ' to be ' + operator + ' ' + util.inspect(val2)\n      , 'expected ' + util.inspect(val) + ' to not be ' + operator + ' ' + util.inspect(val2) );\n  };\n\n  /**\n   * ### .closeTo(actual, expected, delta, [message])\n   *\n   * Asserts that the target is equal `expected`, to within a +/- `delta` range.\n   *\n   *     assert.closeTo(1.5, 1, 0.5, 'numbers are close');\n   *\n   * @name closeTo\n   * @param {Number} actual\n   * @param {Number} expected\n   * @param {Number} delta\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.closeTo = function (act, exp, delta, msg) {\n    new Assertion(act, msg, assert.closeTo, true).to.be.closeTo(exp, delta);\n  };\n\n  /**\n   * ### .approximately(actual, expected, delta, [message])\n   *\n   * Asserts that the target is equal `expected`, to within a +/- `delta` range.\n   *\n   *     assert.approximately(1.5, 1, 0.5, 'numbers are close');\n   *\n   * @name approximately\n   * @param {Number} actual\n   * @param {Number} expected\n   * @param {Number} delta\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.approximately = function (act, exp, delta, msg) {\n    new Assertion(act, msg, assert.approximately, true)\n      .to.be.approximately(exp, delta);\n  };\n\n  /**\n   * ### .sameMembers(set1, set2, [message])\n   *\n   * Asserts that `set1` and `set2` have the same members in any order. Uses a\n   * strict equality check (===).\n   *\n   *     assert.sameMembers([ 1, 2, 3 ], [ 2, 1, 3 ], 'same members');\n   *\n   * @name sameMembers\n   * @param {Array} set1\n   * @param {Array} set2\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.sameMembers = function (set1, set2, msg) {\n    new Assertion(set1, msg, assert.sameMembers, true)\n      .to.have.same.members(set2);\n  }\n\n  /**\n   * ### .notSameMembers(set1, set2, [message])\n   *\n   * Asserts that `set1` and `set2` don't have the same members in any order.\n   * Uses a strict equality check (===).\n   *\n   *     assert.notSameMembers([ 1, 2, 3 ], [ 5, 1, 3 ], 'not same members');\n   *\n   * @name notSameMembers\n   * @param {Array} set1\n   * @param {Array} set2\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notSameMembers = function (set1, set2, msg) {\n    new Assertion(set1, msg, assert.notSameMembers, true)\n      .to.not.have.same.members(set2);\n  }\n\n  /**\n   * ### .sameDeepMembers(set1, set2, [message])\n   *\n   * Asserts that `set1` and `set2` have the same members in any order. Uses a\n   * deep equality check.\n   *\n   *     assert.sameDeepMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [{ b: 2 }, { a: 1 }, { c: 3 }], 'same deep members');\n   *\n   * @name sameDeepMembers\n   * @param {Array} set1\n   * @param {Array} set2\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.sameDeepMembers = function (set1, set2, msg) {\n    new Assertion(set1, msg, assert.sameDeepMembers, true)\n      .to.have.same.deep.members(set2);\n  }\n\n  /**\n   * ### .notSameDeepMembers(set1, set2, [message])\n   *\n   * Asserts that `set1` and `set2` don't have the same members in any order.\n   * Uses a deep equality check.\n   *\n   *     assert.notSameDeepMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [{ b: 2 }, { a: 1 }, { f: 5 }], 'not same deep members');\n   *\n   * @name notSameDeepMembers\n   * @param {Array} set1\n   * @param {Array} set2\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notSameDeepMembers = function (set1, set2, msg) {\n    new Assertion(set1, msg, assert.notSameDeepMembers, true)\n      .to.not.have.same.deep.members(set2);\n  }\n\n  /**\n   * ### .sameOrderedMembers(set1, set2, [message])\n   *\n   * Asserts that `set1` and `set2` have the same members in the same order.\n   * Uses a strict equality check (===).\n   *\n   *     assert.sameOrderedMembers([ 1, 2, 3 ], [ 1, 2, 3 ], 'same ordered members');\n   *\n   * @name sameOrderedMembers\n   * @param {Array} set1\n   * @param {Array} set2\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.sameOrderedMembers = function (set1, set2, msg) {\n    new Assertion(set1, msg, assert.sameOrderedMembers, true)\n      .to.have.same.ordered.members(set2);\n  }\n\n  /**\n   * ### .notSameOrderedMembers(set1, set2, [message])\n   *\n   * Asserts that `set1` and `set2` don't have the same members in the same\n   * order. Uses a strict equality check (===).\n   *\n   *     assert.notSameOrderedMembers([ 1, 2, 3 ], [ 2, 1, 3 ], 'not same ordered members');\n   *\n   * @name notSameOrderedMembers\n   * @param {Array} set1\n   * @param {Array} set2\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notSameOrderedMembers = function (set1, set2, msg) {\n    new Assertion(set1, msg, assert.notSameOrderedMembers, true)\n      .to.not.have.same.ordered.members(set2);\n  }\n\n  /**\n   * ### .sameDeepOrderedMembers(set1, set2, [message])\n   *\n   * Asserts that `set1` and `set2` have the same members in the same order.\n   * Uses a deep equality check.\n   *\n   * assert.sameDeepOrderedMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [ { a: 1 }, { b: 2 }, { c: 3 } ], 'same deep ordered members');\n   *\n   * @name sameDeepOrderedMembers\n   * @param {Array} set1\n   * @param {Array} set2\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.sameDeepOrderedMembers = function (set1, set2, msg) {\n    new Assertion(set1, msg, assert.sameDeepOrderedMembers, true)\n      .to.have.same.deep.ordered.members(set2);\n  }\n\n  /**\n   * ### .notSameDeepOrderedMembers(set1, set2, [message])\n   *\n   * Asserts that `set1` and `set2` don't have the same members in the same\n   * order. Uses a deep equality check.\n   *\n   * assert.notSameDeepOrderedMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [ { a: 1 }, { b: 2 }, { z: 5 } ], 'not same deep ordered members');\n   * assert.notSameDeepOrderedMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [ { b: 2 }, { a: 1 }, { c: 3 } ], 'not same deep ordered members');\n   *\n   * @name notSameDeepOrderedMembers\n   * @param {Array} set1\n   * @param {Array} set2\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notSameDeepOrderedMembers = function (set1, set2, msg) {\n    new Assertion(set1, msg, assert.notSameDeepOrderedMembers, true)\n      .to.not.have.same.deep.ordered.members(set2);\n  }\n\n  /**\n   * ### .includeMembers(superset, subset, [message])\n   *\n   * Asserts that `subset` is included in `superset` in any order. Uses a\n   * strict equality check (===). Duplicates are ignored.\n   *\n   *     assert.includeMembers([ 1, 2, 3 ], [ 2, 1, 2 ], 'include members');\n   *\n   * @name includeMembers\n   * @param {Array} superset\n   * @param {Array} subset\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.includeMembers = function (superset, subset, msg) {\n    new Assertion(superset, msg, assert.includeMembers, true)\n      .to.include.members(subset);\n  }\n\n  /**\n   * ### .notIncludeMembers(superset, subset, [message])\n   *\n   * Asserts that `subset` isn't included in `superset` in any order. Uses a\n   * strict equality check (===). Duplicates are ignored.\n   *\n   *     assert.notIncludeMembers([ 1, 2, 3 ], [ 5, 1 ], 'not include members');\n   *\n   * @name notIncludeMembers\n   * @param {Array} superset\n   * @param {Array} subset\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notIncludeMembers = function (superset, subset, msg) {\n    new Assertion(superset, msg, assert.notIncludeMembers, true)\n      .to.not.include.members(subset);\n  }\n\n  /**\n   * ### .includeDeepMembers(superset, subset, [message])\n   *\n   * Asserts that `subset` is included in `superset` in any order. Uses a deep\n   * equality check. Duplicates are ignored.\n   *\n   *     assert.includeDeepMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [ { b: 2 }, { a: 1 }, { b: 2 } ], 'include deep members');\n   *\n   * @name includeDeepMembers\n   * @param {Array} superset\n   * @param {Array} subset\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.includeDeepMembers = function (superset, subset, msg) {\n    new Assertion(superset, msg, assert.includeDeepMembers, true)\n      .to.include.deep.members(subset);\n  }\n\n  /**\n   * ### .notIncludeDeepMembers(superset, subset, [message])\n   *\n   * Asserts that `subset` isn't included in `superset` in any order. Uses a\n   * deep equality check. Duplicates are ignored.\n   *\n   *     assert.notIncludeDeepMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [ { b: 2 }, { f: 5 } ], 'not include deep members');\n   *\n   * @name notIncludeDeepMembers\n   * @param {Array} superset\n   * @param {Array} subset\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notIncludeDeepMembers = function (superset, subset, msg) {\n    new Assertion(superset, msg, assert.notIncludeDeepMembers, true)\n      .to.not.include.deep.members(subset);\n  }\n\n  /**\n   * ### .includeOrderedMembers(superset, subset, [message])\n   *\n   * Asserts that `subset` is included in `superset` in the same order\n   * beginning with the first element in `superset`. Uses a strict equality\n   * check (===).\n   *\n   *     assert.includeOrderedMembers([ 1, 2, 3 ], [ 1, 2 ], 'include ordered members');\n   *\n   * @name includeOrderedMembers\n   * @param {Array} superset\n   * @param {Array} subset\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.includeOrderedMembers = function (superset, subset, msg) {\n    new Assertion(superset, msg, assert.includeOrderedMembers, true)\n      .to.include.ordered.members(subset);\n  }\n\n  /**\n   * ### .notIncludeOrderedMembers(superset, subset, [message])\n   *\n   * Asserts that `subset` isn't included in `superset` in the same order\n   * beginning with the first element in `superset`. Uses a strict equality\n   * check (===).\n   *\n   *     assert.notIncludeOrderedMembers([ 1, 2, 3 ], [ 2, 1 ], 'not include ordered members');\n   *     assert.notIncludeOrderedMembers([ 1, 2, 3 ], [ 2, 3 ], 'not include ordered members');\n   *\n   * @name notIncludeOrderedMembers\n   * @param {Array} superset\n   * @param {Array} subset\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notIncludeOrderedMembers = function (superset, subset, msg) {\n    new Assertion(superset, msg, assert.notIncludeOrderedMembers, true)\n      .to.not.include.ordered.members(subset);\n  }\n\n  /**\n   * ### .includeDeepOrderedMembers(superset, subset, [message])\n   *\n   * Asserts that `subset` is included in `superset` in the same order\n   * beginning with the first element in `superset`. Uses a deep equality\n   * check.\n   *\n   *     assert.includeDeepOrderedMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [ { a: 1 }, { b: 2 } ], 'include deep ordered members');\n   *\n   * @name includeDeepOrderedMembers\n   * @param {Array} superset\n   * @param {Array} subset\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.includeDeepOrderedMembers = function (superset, subset, msg) {\n    new Assertion(superset, msg, assert.includeDeepOrderedMembers, true)\n      .to.include.deep.ordered.members(subset);\n  }\n\n  /**\n   * ### .notIncludeDeepOrderedMembers(superset, subset, [message])\n   *\n   * Asserts that `subset` isn't included in `superset` in the same order\n   * beginning with the first element in `superset`. Uses a deep equality\n   * check.\n   *\n   *     assert.notIncludeDeepOrderedMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [ { a: 1 }, { f: 5 } ], 'not include deep ordered members');\n   *     assert.notIncludeDeepOrderedMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [ { b: 2 }, { a: 1 } ], 'not include deep ordered members');\n   *     assert.notIncludeDeepOrderedMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [ { b: 2 }, { c: 3 } ], 'not include deep ordered members');\n   *\n   * @name notIncludeDeepOrderedMembers\n   * @param {Array} superset\n   * @param {Array} subset\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notIncludeDeepOrderedMembers = function (superset, subset, msg) {\n    new Assertion(superset, msg, assert.notIncludeDeepOrderedMembers, true)\n      .to.not.include.deep.ordered.members(subset);\n  }\n\n  /**\n   * ### .oneOf(inList, list, [message])\n   *\n   * Asserts that non-object, non-array value `inList` appears in the flat array `list`.\n   *\n   *     assert.oneOf(1, [ 2, 1 ], 'Not found in list');\n   *\n   * @name oneOf\n   * @param {*} inList\n   * @param {Array<*>} list\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.oneOf = function (inList, list, msg) {\n    new Assertion(inList, msg, assert.oneOf, true).to.be.oneOf(list);\n  }\n\n  /**\n   * ### .changes(function, object, property, [message])\n   *\n   * Asserts that a function changes the value of a property.\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 22 };\n   *     assert.changes(fn, obj, 'val');\n   *\n   * @name changes\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.changes = function (fn, obj, prop, msg) {\n    if (arguments.length === 3 && typeof obj === 'function') {\n      msg = prop;\n      prop = null;\n    }\n\n    new Assertion(fn, msg, assert.changes, true).to.change(obj, prop);\n  }\n\n   /**\n   * ### .changesBy(function, object, property, delta, [message])\n   *\n   * Asserts that a function changes the value of a property by an amount (delta).\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val += 2 };\n   *     assert.changesBy(fn, obj, 'val', 2);\n   *\n   * @name changesBy\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {Number} change amount (delta)\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.changesBy = function (fn, obj, prop, delta, msg) {\n    if (arguments.length === 4 && typeof obj === 'function') {\n      var tmpMsg = delta;\n      delta = prop;\n      msg = tmpMsg;\n    } else if (arguments.length === 3) {\n      delta = prop;\n      prop = null;\n    }\n\n    new Assertion(fn, msg, assert.changesBy, true)\n      .to.change(obj, prop).by(delta);\n  }\n\n   /**\n   * ### .doesNotChange(function, object, property, [message])\n   *\n   * Asserts that a function does not change the value of a property.\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { console.log('foo'); };\n   *     assert.doesNotChange(fn, obj, 'val');\n   *\n   * @name doesNotChange\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.doesNotChange = function (fn, obj, prop, msg) {\n    if (arguments.length === 3 && typeof obj === 'function') {\n      msg = prop;\n      prop = null;\n    }\n\n    return new Assertion(fn, msg, assert.doesNotChange, true)\n      .to.not.change(obj, prop);\n  }\n\n  /**\n   * ### .changesButNotBy(function, object, property, delta, [message])\n   *\n   * Asserts that a function does not change the value of a property or of a function's return value by an amount (delta)\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val += 10 };\n   *     assert.changesButNotBy(fn, obj, 'val', 5);\n   *\n   * @name changesButNotBy\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {Number} change amount (delta)\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.changesButNotBy = function (fn, obj, prop, delta, msg) {\n    if (arguments.length === 4 && typeof obj === 'function') {\n      var tmpMsg = delta;\n      delta = prop;\n      msg = tmpMsg;\n    } else if (arguments.length === 3) {\n      delta = prop;\n      prop = null;\n    }\n\n    new Assertion(fn, msg, assert.changesButNotBy, true)\n      .to.change(obj, prop).but.not.by(delta);\n  }\n\n  /**\n   * ### .increases(function, object, property, [message])\n   *\n   * Asserts that a function increases a numeric object property.\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 13 };\n   *     assert.increases(fn, obj, 'val');\n   *\n   * @name increases\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.increases = function (fn, obj, prop, msg) {\n    if (arguments.length === 3 && typeof obj === 'function') {\n      msg = prop;\n      prop = null;\n    }\n\n    return new Assertion(fn, msg, assert.increases, true)\n      .to.increase(obj, prop);\n  }\n\n  /**\n   * ### .increasesBy(function, object, property, delta, [message])\n   *\n   * Asserts that a function increases a numeric object property or a function's return value by an amount (delta).\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val += 10 };\n   *     assert.increasesBy(fn, obj, 'val', 10);\n   *\n   * @name increasesBy\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {Number} change amount (delta)\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.increasesBy = function (fn, obj, prop, delta, msg) {\n    if (arguments.length === 4 && typeof obj === 'function') {\n      var tmpMsg = delta;\n      delta = prop;\n      msg = tmpMsg;\n    } else if (arguments.length === 3) {\n      delta = prop;\n      prop = null;\n    }\n\n    new Assertion(fn, msg, assert.increasesBy, true)\n      .to.increase(obj, prop).by(delta);\n  }\n\n  /**\n   * ### .doesNotIncrease(function, object, property, [message])\n   *\n   * Asserts that a function does not increase a numeric object property.\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 8 };\n   *     assert.doesNotIncrease(fn, obj, 'val');\n   *\n   * @name doesNotIncrease\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.doesNotIncrease = function (fn, obj, prop, msg) {\n    if (arguments.length === 3 && typeof obj === 'function') {\n      msg = prop;\n      prop = null;\n    }\n\n    return new Assertion(fn, msg, assert.doesNotIncrease, true)\n      .to.not.increase(obj, prop);\n  }\n\n  /**\n   * ### .increasesButNotBy(function, object, property, [message])\n   *\n   * Asserts that a function does not increase a numeric object property or function's return value by an amount (delta).\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 15 };\n   *     assert.increasesButNotBy(fn, obj, 'val', 10);\n   *\n   * @name increasesButNotBy\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {Number} change amount (delta)\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.increasesButNotBy = function (fn, obj, prop, delta, msg) {\n    if (arguments.length === 4 && typeof obj === 'function') {\n      var tmpMsg = delta;\n      delta = prop;\n      msg = tmpMsg;\n    } else if (arguments.length === 3) {\n      delta = prop;\n      prop = null;\n    }\n\n    new Assertion(fn, msg, assert.increasesButNotBy, true)\n      .to.increase(obj, prop).but.not.by(delta);\n  }\n\n  /**\n   * ### .decreases(function, object, property, [message])\n   *\n   * Asserts that a function decreases a numeric object property.\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 5 };\n   *     assert.decreases(fn, obj, 'val');\n   *\n   * @name decreases\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.decreases = function (fn, obj, prop, msg) {\n    if (arguments.length === 3 && typeof obj === 'function') {\n      msg = prop;\n      prop = null;\n    }\n\n    return new Assertion(fn, msg, assert.decreases, true)\n      .to.decrease(obj, prop);\n  }\n\n  /**\n   * ### .decreasesBy(function, object, property, delta, [message])\n   *\n   * Asserts that a function decreases a numeric object property or a function's return value by an amount (delta)\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val -= 5 };\n   *     assert.decreasesBy(fn, obj, 'val', 5);\n   *\n   * @name decreasesBy\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {Number} change amount (delta)\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.decreasesBy = function (fn, obj, prop, delta, msg) {\n    if (arguments.length === 4 && typeof obj === 'function') {\n      var tmpMsg = delta;\n      delta = prop;\n      msg = tmpMsg;\n    } else if (arguments.length === 3) {\n      delta = prop;\n      prop = null;\n    }\n\n    new Assertion(fn, msg, assert.decreasesBy, true)\n      .to.decrease(obj, prop).by(delta);\n  }\n\n  /**\n   * ### .doesNotDecrease(function, object, property, [message])\n   *\n   * Asserts that a function does not decreases a numeric object property.\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 15 };\n   *     assert.doesNotDecrease(fn, obj, 'val');\n   *\n   * @name doesNotDecrease\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.doesNotDecrease = function (fn, obj, prop, msg) {\n    if (arguments.length === 3 && typeof obj === 'function') {\n      msg = prop;\n      prop = null;\n    }\n\n    return new Assertion(fn, msg, assert.doesNotDecrease, true)\n      .to.not.decrease(obj, prop);\n  }\n\n  /**\n   * ### .doesNotDecreaseBy(function, object, property, delta, [message])\n   *\n   * Asserts that a function does not decreases a numeric object property or a function's return value by an amount (delta)\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 5 };\n   *     assert.doesNotDecreaseBy(fn, obj, 'val', 1);\n   *\n   * @name doesNotDecrease\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {Number} change amount (delta)\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.doesNotDecreaseBy = function (fn, obj, prop, delta, msg) {\n    if (arguments.length === 4 && typeof obj === 'function') {\n      var tmpMsg = delta;\n      delta = prop;\n      msg = tmpMsg;\n    } else if (arguments.length === 3) {\n      delta = prop;\n      prop = null;\n    }\n\n    return new Assertion(fn, msg, assert.doesNotDecreaseBy, true)\n      .to.not.decrease(obj, prop).by(delta);\n  }\n\n  /**\n   * ### .decreasesButNotBy(function, object, property, delta, [message])\n   *\n   * Asserts that a function does not decreases a numeric object property or a function's return value by an amount (delta)\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 5 };\n   *     assert.decreasesButNotBy(fn, obj, 'val', 1);\n   *\n   * @name decreasesButNotBy\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {Number} change amount (delta)\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.decreasesButNotBy = function (fn, obj, prop, delta, msg) {\n    if (arguments.length === 4 && typeof obj === 'function') {\n      var tmpMsg = delta;\n      delta = prop;\n      msg = tmpMsg;\n    } else if (arguments.length === 3) {\n      delta = prop;\n      prop = null;\n    }\n\n    new Assertion(fn, msg, assert.decreasesButNotBy, true)\n      .to.decrease(obj, prop).but.not.by(delta);\n  }\n\n  /*!\n   * ### .ifError(object)\n   *\n   * Asserts if value is not a false value, and throws if it is a true value.\n   * This is added to allow for chai to be a drop-in replacement for Node's\n   * assert class.\n   *\n   *     var err = new Error('I am a custom error');\n   *     assert.ifError(err); // Rethrows err!\n   *\n   * @name ifError\n   * @param {Object} object\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.ifError = function (val) {\n    if (val) {\n      throw(val);\n    }\n  };\n\n  /**\n   * ### .isExtensible(object)\n   *\n   * Asserts that `object` is extensible (can have new properties added to it).\n   *\n   *     assert.isExtensible({});\n   *\n   * @name isExtensible\n   * @alias extensible\n   * @param {Object} object\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isExtensible = function (obj, msg) {\n    new Assertion(obj, msg, assert.isExtensible, true).to.be.extensible;\n  };\n\n  /**\n   * ### .isNotExtensible(object)\n   *\n   * Asserts that `object` is _not_ extensible.\n   *\n   *     var nonExtensibleObject = Object.preventExtensions({});\n   *     var sealedObject = Object.seal({});\n   *     var frozenObject = Object.freeze({});\n   *\n   *     assert.isNotExtensible(nonExtensibleObject);\n   *     assert.isNotExtensible(sealedObject);\n   *     assert.isNotExtensible(frozenObject);\n   *\n   * @name isNotExtensible\n   * @alias notExtensible\n   * @param {Object} object\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotExtensible = function (obj, msg) {\n    new Assertion(obj, msg, assert.isNotExtensible, true).to.not.be.extensible;\n  };\n\n  /**\n   * ### .isSealed(object)\n   *\n   * Asserts that `object` is sealed (cannot have new properties added to it\n   * and its existing properties cannot be removed).\n   *\n   *     var sealedObject = Object.seal({});\n   *     var frozenObject = Object.seal({});\n   *\n   *     assert.isSealed(sealedObject);\n   *     assert.isSealed(frozenObject);\n   *\n   * @name isSealed\n   * @alias sealed\n   * @param {Object} object\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isSealed = function (obj, msg) {\n    new Assertion(obj, msg, assert.isSealed, true).to.be.sealed;\n  };\n\n  /**\n   * ### .isNotSealed(object)\n   *\n   * Asserts that `object` is _not_ sealed.\n   *\n   *     assert.isNotSealed({});\n   *\n   * @name isNotSealed\n   * @alias notSealed\n   * @param {Object} object\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotSealed = function (obj, msg) {\n    new Assertion(obj, msg, assert.isNotSealed, true).to.not.be.sealed;\n  };\n\n  /**\n   * ### .isFrozen(object)\n   *\n   * Asserts that `object` is frozen (cannot have new properties added to it\n   * and its existing properties cannot be modified).\n   *\n   *     var frozenObject = Object.freeze({});\n   *     assert.frozen(frozenObject);\n   *\n   * @name isFrozen\n   * @alias frozen\n   * @param {Object} object\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isFrozen = function (obj, msg) {\n    new Assertion(obj, msg, assert.isFrozen, true).to.be.frozen;\n  };\n\n  /**\n   * ### .isNotFrozen(object)\n   *\n   * Asserts that `object` is _not_ frozen.\n   *\n   *     assert.isNotFrozen({});\n   *\n   * @name isNotFrozen\n   * @alias notFrozen\n   * @param {Object} object\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotFrozen = function (obj, msg) {\n    new Assertion(obj, msg, assert.isNotFrozen, true).to.not.be.frozen;\n  };\n\n  /**\n   * ### .isEmpty(target)\n   *\n   * Asserts that the target does not contain any values.\n   * For arrays and strings, it checks the `length` property.\n   * For `Map` and `Set` instances, it checks the `size` property.\n   * For non-function objects, it gets the count of own\n   * enumerable string keys.\n   *\n   *     assert.isEmpty([]);\n   *     assert.isEmpty('');\n   *     assert.isEmpty(new Map);\n   *     assert.isEmpty({});\n   *\n   * @name isEmpty\n   * @alias empty\n   * @param {Object|Array|String|Map|Set} target\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isEmpty = function(val, msg) {\n    new Assertion(val, msg, assert.isEmpty, true).to.be.empty;\n  };\n\n  /**\n   * ### .isNotEmpty(target)\n   *\n   * Asserts that the target contains values.\n   * For arrays and strings, it checks the `length` property.\n   * For `Map` and `Set` instances, it checks the `size` property.\n   * For non-function objects, it gets the count of own\n   * enumerable string keys.\n   *\n   *     assert.isNotEmpty([1, 2]);\n   *     assert.isNotEmpty('34');\n   *     assert.isNotEmpty(new Set([5, 6]));\n   *     assert.isNotEmpty({ key: 7 });\n   *\n   * @name isNotEmpty\n   * @alias notEmpty\n   * @param {Object|Array|String|Map|Set} target\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotEmpty = function(val, msg) {\n    new Assertion(val, msg, assert.isNotEmpty, true).to.not.be.empty;\n  };\n\n  /*!\n   * Aliases.\n   */\n\n  (function alias(name, as){\n    assert[as] = assert[name];\n    return alias;\n  })\n  ('isOk', 'ok')\n  ('isNotOk', 'notOk')\n  ('throws', 'throw')\n  ('throws', 'Throw')\n  ('isExtensible', 'extensible')\n  ('isNotExtensible', 'notExtensible')\n  ('isSealed', 'sealed')\n  ('isNotSealed', 'notSealed')\n  ('isFrozen', 'frozen')\n  ('isNotFrozen', 'notFrozen')\n  ('isEmpty', 'empty')\n  ('isNotEmpty', 'notEmpty');\n};\n","/*!\n * chai\n * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nvar used = [];\n\n/*!\n * Chai version\n */\n\nexports.version = '4.2.0';\n\n/*!\n * Assertion Error\n */\n\nexports.AssertionError = require('assertion-error');\n\n/*!\n * Utils for plugins (not exported)\n */\n\nvar util = require('./chai/utils');\n\n/**\n * # .use(function)\n *\n * Provides a way to extend the internals of Chai.\n *\n * @param {Function}\n * @returns {this} for chaining\n * @api public\n */\n\nexports.use = function (fn) {\n  if (!~used.indexOf(fn)) {\n    fn(exports, util);\n    used.push(fn);\n  }\n\n  return exports;\n};\n\n/*!\n * Utility Functions\n */\n\nexports.util = util;\n\n/*!\n * Configuration\n */\n\nvar config = require('./chai/config');\nexports.config = config;\n\n/*!\n * Primary `Assertion` prototype\n */\n\nvar assertion = require('./chai/assertion');\nexports.use(assertion);\n\n/*!\n * Core Assertions\n */\n\nvar core = require('./chai/core/assertions');\nexports.use(core);\n\n/*!\n * Expect interface\n */\n\nvar expect = require('./chai/interface/expect');\nexports.use(expect);\n\n/*!\n * Should interface\n */\n\nvar should = require('./chai/interface/should');\nexports.use(should);\n\n/*!\n * Assert interface\n */\n\nvar assert = require('./chai/interface/assert');\nexports.use(assert);\n","module.exports = require('./lib/chai');\n","module.exports = {\n  \"hck0\": {\n    \"correct\": [\n      [\n        \"HcKciDds5OiogymxbnHKEabQ8iavqs8dwdVaGdJW76Vp4gx47tQDfGW4OWc9w5i\",\n        \"0c71db50d35d760b0ea2002ff20147c7c3a8e8030d35ef28ed1adaec9e329aba\"\n      ],\n      [\n        \"HcKcJAYWKF7xpsddq6ojeqbIVCp837fpcNz77479pND7KzBmH7nUcV4u4sN3vpr\",\n        \"82f5517b6744637f1a923c28a09decf4ae1331deebbf7307d5602b3f59315353\"\n      ],\n      [\n        \"HcKCjV6zmkIPz9w9zwFcFRxm8SGvxzv39sGNPGRIenp9yzryYDScjDvJraz3bbz\",\n        \"d3985a90ec7ebfc54a22c2cbf44d4b6299fc4cc71a08231dfbe217b8e2248e89\"\n      ],\n      [\n        \"HcKCjjt9OTf7Fk3wc3qH3bHsEKkcwb7gzY8SudxIvWxedi4iThtj4jE9fn8cpvz\",\n        \"a65f6c8bd2ab35165e7c84f122942a87a6c5fd198ec8a56c41a34891e49d249f\"\n      ],\n      [\n        \"HcKcIiYN3okO6gtc9egtaufqK68Nr9r59QG6SO9p6SvfejjtJw9bOq7FKsv7jjr\",\n        \"22eccb54de1a42f90d204caf573cc87e1bfbcdc8b7eee4685225324d7e16bfa5\"\n      ],\n      [\n        \"HcKcjt5FWUa9qfvjwfRJVbq8rDbbjdiwtxgd3Xjoc57R6vo4WN9BWWMi3Mtmakr\",\n        \"cb65acc1f79689a9609a05fe80c2148d15958c3cd92d16fb0e51baab3e1ad568\"\n      ],\n      [\n        \"HcKcIeYSAnBbjshvjb5qw7z5GT96d59yd8u3RzdtQITjfnwnfe7K4GvU563pvxr\",\n        \"12f1030214c4f44876faf71b34bfc1eff71fa79860727a2492b2ac293aad1a93\"\n      ],\n      [\n        \"HcKCIy6WeyDFtcbqkeKY7Wrkoo53hoxx6xJxdq5y6kJww43rubIOzOiKsg8ec4i\",\n        \"5f9525c659082f51157ed60a6b7793b6d6e59361bf77e2935aeb309850dc350a\"\n      ]\n    ],\n    \"correctable\": [\n      [\n        \"HcKciDds_OiogymxbnHKEabQ8iavqs8dwdVaGdJW76Vp4gx47tQDfGW4OWc9w5i\",\n        \"0c71db50d35d760b0ea2002ff20147c7c3a8e8030d35ef28ed1adaec9e329aba\",\n        \"HcKciDds5OiogymxbnHKEabQ8iavqs8dwdVaGdJW76Vp4gx47tQDfGW4OWc9w5i\"\n      ],\n      [\n        \"HcKciDds_Oiogymxb_HKEabQ8iavqs8dwdVaGdJW76Vp4gx47tQDfGW4OWc9w5i\",\n        \"0c71db50d35d760b0ea2002ff20147c7c3a8e8030d35ef28ed1adaec9e329aba\",\n        \"HcKciDds5OiogymxbnHKEabQ8iavqs8dwdVaGdJW76Vp4gx47tQDfGW4OWc9w5i\"\n      ],\n      [\n        \"HcKciDdsjOiogymxbnHKEabQ8iavqs8dwdVaGdJW76Vp4gx47tQDfGW4OWc9w5i\",\n        \"0c71db50d35d760b0ea2002ff20147c7c3a8e8030d35ef28ed1adaec9e329aba\",\n        \"HcKciDds5OiogymxbnHKEabQ8iavqs8dwdVaGdJW76Vp4gx47tQDfGW4OWc9w5i\"\n      ],\n      [\n        \"hckciy6weydftcbqkeky7wrkoo53hoxx6xjxdq5y6kjww43rubiozoiksg8ec4i\",\n        \"5f9525c659082f51157ed60a6b7793b6d6e59361bf77e2935aeb309850dc350a\",\n        \"HcKCIy6WeyDFtcbqkeKY7Wrkoo53hoxx6xJxdq5y6kJww43rubIOzOiKsg8ec4i\"\n      ],\n      [\n        \"HCKCIY6WEYDFTCBQKEKY7WRKOO53HOXX6XJXDQ5Y6KJWW43RUBIOZOIKSG8EC4I\",\n        \"5f9525c659082f51157ed60a6b7793b6d6e59361bf77e2935aeb309850dc350a\",\n        \"HcKCIy6WeyDFtcbqkeKY7Wrkoo53hoxx6xJxdq5y6kJww43rubIOzOiKsg8ec4i\"\n      ]\n    ],\n    \"errantId\": [\n      [\n        \"HcKciDds_Oiog_mxb_HKEabQ8iavqs8dwdVaGdJW76Vp4gx47tQDfGW4O_c9w5i\",\n        \"HcidError(\\\"TooManyErrors\\\")\"\n      ],\n      [\n        \"HcKciDdsjjjjjjjjjnHKEabQ8iavqs8dwdVaGdJW76Vp4gx47tQDfGW4OWc9w5i\",\n        \"HcidError(\\\"TooManyErrors\\\")\"\n      ],\n      [\n        \"HdKciDds5OiogymxbnHKEabQ8iavqs8dwdVaGdJW76Vp4gx47tQDfGW4OWc9w5i\",\n        \"HcidError(\\\"PrefixMismatch\\\")\"\n      ],\n      [\n        \"HcKciDds5OiogymxbnHKEabQ8iavqs8dwdVaGdJW76Vp4gx47tQDfGW4OWc9w5id\",\n        \"HcidError(\\\"BadIdLen:64,Expected:63\\\")\"\n      ],\n      [\n        \"HCKCI_6WEYDFTCBQKEKY7WRKOO53HOXX6XJXDQ5Y6KJWW43RUBIOZOIKSG8EC4I\",\n        \"HcidError(\\\"TooManyErrors\\\")\"\n      ]\n    ],\n    \"errantData\": [\n      [\n        \"0c71db50d35d760b0ea2002ff20147c7c3a8e8030d35ef28ed1adaec9e329a\",\n        \"HcidError(\\\"BadDataLen:31,Expected:32\\\")\"\n      ]\n    ]\n  },\n  \"hca0\": {\n    \"correct\": [\n      [\n        \"HcAciDds5OiogymxbnHKEabQ8iavqs8dwdVaGdJW76Vp4gx47tQDfGW4OWc9w5i\",\n        \"0c71db50d35d760b0ea2002ff20147c7c3a8e8030d35ef28ed1adaec9e329aba\"\n      ]\n    ],\n    \"correctable\": [\n      [\n        \"HcAciDds_OiogymxbnHKEabQ8iavqs8dwdVaGdJW76Vp4gx47tQDfGW4OWc9w5i\",\n        \"0c71db50d35d760b0ea2002ff20147c7c3a8e8030d35ef28ed1adaec9e329aba\",\n        \"HcAciDds5OiogymxbnHKEabQ8iavqs8dwdVaGdJW76Vp4gx47tQDfGW4OWc9w5i\"\n      ]\n    ],\n    \"errantId\": [\n      [\n        \"HcAciDds_Oiog_mxb_HKEabQ8iavqs8dwdVaGdJW76Vp4gx47tQDfGW4O_c9w5i\",\n        \"HcidError(\\\"TooManyErrors\\\")\"\n      ]\n    ],\n    \"errantData\": [\n      [\n        \"0c71db50d35d760b0ea2002ff20147c7c3a8e8030d35ef28ed1adaec9e329a\",\n        \"HcidError(\\\"BadDataLen:31,Expected:32\\\")\"\n      ]\n    ]\n  },\n  \"hcs0\": {\n    \"correct\": [\n      [\n        \"HcSciDds5OiogymxbnHKEabQ8iavqs8dwdVaGdJW76Vp4gx47tQDfGW4OWc9w5i\",\n        \"0c71db50d35d760b0ea2002ff20147c7c3a8e8030d35ef28ed1adaec9e329aba\"\n      ]\n    ],\n    \"correctable\": [\n      [\n        \"HcSciDds_OiogymxbnHKEabQ8iavqs8dwdVaGdJW76Vp4gx47tQDfGW4OWc9w5i\",\n        \"0c71db50d35d760b0ea2002ff20147c7c3a8e8030d35ef28ed1adaec9e329aba\",\n        \"HcSciDds5OiogymxbnHKEabQ8iavqs8dwdVaGdJW76Vp4gx47tQDfGW4OWc9w5i\"\n      ]\n    ],\n    \"errantId\": [\n      [\n        \"HcSciDds_Oiog_mxb_HKEabQ8iavqs8dwdVaGdJW76Vp4gx47tQDfGW4O_c9w5i\",\n        \"HcidError(\\\"TooManyErrors\\\")\"\n      ]\n    ],\n    \"errantData\": [\n      [\n        \"0c71db50d35d760b0ea2002ff20147c7c3a8e8030d35ef28ed1adaec9e329a\",\n        \"HcidError(\\\"BadDataLen:31,Expected:32\\\")\"\n      ]\n    ]\n  }\n}\n;","/* eslint no-new:0 */\n\nconst { Encoding } = require('..')\nconst { expect } = require('chai')\nconst fixtures = require('../../test/fixtures')\n\nconst TEST_HEX_1 =\n    '0c71db50d35d760b0ea2002ff20147c7c3a8e8030d35ef28ed1adaec9e329aba'\nconst TEST_ID_1 =\n    'HcKciDds5OiogymxbnHKEabQ8iavqs8dwdVaGdJW76Vp4gx47tQDfGW4OWc9w5i'\n\ndescribe('Encoding Suite', () => {\n  describe('fixtures', () => {\n    for (let type in fixtures) {\n      const f = fixtures[type]\n      describe(type, () => {\n        let enc = null\n\n        beforeEach(async () => {\n          enc = await new Encoding(type)\n        })\n\n        afterEach(() => {\n          enc = null\n        })\n\n        describe('correct', () => {\n          for (let i = 0; i < f.correct.length; ++i) {\n            const t = f.correct[i]\n            it('' + i, () => {\n              const id = t[0]\n              const data = t[1]\n              expect(enc.is_corrupt(id)).equals(false)\n              expect(enc.encode(Buffer.from(data, 'hex'))).equals(id)\n              expect(Buffer.from(enc.decode(id)).toString('hex')).equals(data)\n            })\n          }\n        })\n\n        describe('correctable', () => {\n          for (let i = 0; i < f.correctable.length; ++i) {\n            const t = f.correctable[i]\n            it('' + i, () => {\n              const id = t[0]\n              const data = t[1]\n              const correctId = t[2]\n              expect(enc.is_corrupt(id)).equals(true)\n              expect(enc.encode(Buffer.from(data, 'hex'))).equals(correctId)\n              expect(Buffer.from(enc.decode(id)).toString('hex')).equals(data)\n            })\n          }\n        })\n\n        describe('errantId', () => {\n          for (let i = 0; i < f.errantId.length; ++i) {\n            const t = f.errantId[i]\n            it('' + i, () => {\n              const id = t[0]\n              const err = t[1]\n              expect(enc.is_corrupt(id)).equals(true)\n              try {\n                enc.decode(id)\n              } catch (e) {\n                expect(e.toString()).equals('Error: ' + err)\n                return\n              }\n              throw new Error('expected exception, got success')\n            })\n          }\n        })\n\n        describe('errantData', () => {\n          for (let i = 0; i < f.errantData.length; ++i) {\n            const t = f.errantData[i]\n            it('' + i, () => {\n              const data = t[0]\n              const err = t[1]\n              try {\n                enc.encode(Buffer.from(data, 'hex'))\n              } catch (e) {\n                expect(e.toString()).equals('Error: ' + err)\n                return\n              }\n              throw new Error('expected exception, got success')\n            })\n          }\n        })\n      })\n    }\n  })\n\n  describe('basic', () => {\n    let enc = null\n\n    beforeEach(async () => {\n      enc = await new Encoding('hck0')\n    })\n\n    afterEach(() => {\n      enc = null\n    })\n\n    it('should encode', () => {\n      const buf = Buffer.from(TEST_HEX_1, 'hex')\n      expect(enc.encode(buf))\n        .equals(TEST_ID_1)\n    })\n\n    it('should decode', () => {\n      expect(Buffer.from(enc.decode(TEST_ID_1)).toString('hex'))\n        .equals(TEST_HEX_1)\n    })\n\n    it('should determine not is_corrupt', () => {\n      expect(enc.is_corrupt(TEST_ID_1))\n        .equals(false)\n    })\n\n    it('should determine is_corrupt', () => {\n      expect(enc.is_corrupt(TEST_ID_1.substr(0, 10) + 'A' + TEST_ID_1.substr(11)))\n        .equals(true)\n    })\n  })\n})\n","import \"../lib/encoding.test.js\";"]}