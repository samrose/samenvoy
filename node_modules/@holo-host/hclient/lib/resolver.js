"use strict";

/**
 * module resolver
 *
 * Interfaces with the holo resolver to locate the DNA or host tranche for a given URL.
 * This is not required in most cases where the UI is also hosted by Holo but in some cases
 * where the UI is hosted on the conventional web this is required to locate hosts.
 *
 */
var resolverUrl = 'http://resolver.holohost.net/';

var callResolver = function callResolver(params) {
  var body = Object.keys(params).map(function (key) {
    return encodeURIComponent(key) + '=' + encodeURIComponent(params[key]);
  }).join('&');
  return fetch(resolverUrl, {
    method: 'POST',
    cache: 'no-cache',
    headers: {
      'Content-Type': 'application/x-www-form-urlencoded'
    },
    body: body
  });
};
/**
 * Displays the login dialog and generates a new read/write key with the email/password
 * This will overwrite the current key
 * @memberof module:hClient
 */


var getHostsForUrl = function getHostsForUrl(url) {
  return callResolver({
    url: url
  }).then(function (r) {
    return r.json();
  }).then(function (json) {
    return json.hosts;
  });
};
/**
 * Displays the login dialog and generates a new read/write key with the email/password
 * This will overwrite the current key
 * @memberof module:hClient
 */


var getDnaForUrl = function getDnaForUrl(url) {
  return callResolver({
    url: url
  }).then(function (r) {
    return r.json();
  }).then(function (json) {
    return json.dna;
  });
};

module.exports = {
  getHostsForUrl: getHostsForUrl,
  getDnaForUrl: getDnaForUrl
};